{
  "version": 3,
  "sources": ["node_modules/tailwindcss/src/value-parser/parse.js", "node_modules/tailwindcss/src/value-parser/walk.js", "node_modules/tailwindcss/src/value-parser/stringify.js", "node_modules/tailwindcss/src/value-parser/unit.js", "node_modules/tailwindcss/src/value-parser/index.js", "node_modules/tailwindcss/stubs/config.full.js", "node_modules/@tailwindcss/language-service/dist/index.js", "src/stubs/vscode-emmet-helper-bundled.ts", "src/stubs/detect-indent.ts", "node_modules/dset/dist/index.mjs", "src/tailwindcss.worker.ts", "node_modules/tailwindcss/src/lib/expandApplyAtRules.js", "node_modules/tailwindcss/src/lib/generateRules.js", "node_modules/tailwindcss/src/util/parseObjectStyles.js", "node_modules/tailwindcss/src/util/isPlainObject.js", "node_modules/tailwindcss/src/util/prefixSelector.js", "node_modules/tailwindcss/src/util/escapeCommas.js", "node_modules/tailwindcss/src/util/colorNames.js", "node_modules/tailwindcss/src/util/color.js", "node_modules/tailwindcss/src/util/withAlphaVariable.js", "node_modules/tailwindcss/src/util/splitAtTopLevelOnly.js", "node_modules/tailwindcss/src/util/parseBoxShadowValue.js", "node_modules/tailwindcss/src/util/dataTypes.js", "node_modules/tailwindcss/src/util/negateValue.js", "node_modules/tailwindcss/src/util/validateFormalSyntax.js", "src/stubs/picocolors.ts", "src/stubs/tailwindcss/utils/log.ts", "node_modules/tailwindcss/src/featureFlags.js", "node_modules/tailwindcss/src/util/pluginUtils.js", "node_modules/tailwindcss/package.json", "node_modules/tailwindcss/src/lib/sharedState.js", "node_modules/tailwindcss/src/util/formatVariantSelector.js", "node_modules/tailwindcss/src/util/escapeClassName.js", "node_modules/tailwindcss/src/util/pseudoElements.js", "node_modules/tailwindcss/src/util/nameClass.js", "node_modules/tailwindcss/src/css/preflight.css", "src/stubs/fs.ts", "node_modules/tailwindcss/src/lib/setupContextUtils.js", "node_modules/tailwindcss/src/util/transformThemeValue.js", "src/stubs/path.ts", "node_modules/tailwindcss/src/corePlugins.js", "node_modules/tailwindcss/src/util/createUtilityPlugin.js", "node_modules/tailwindcss/src/util/buildMediaQuery.js", "node_modules/tailwindcss/src/util/parseAnimationValue.js", "node_modules/tailwindcss/src/util/flattenColorPalette.js", "node_modules/tailwindcss/src/util/toColorValue.js", "node_modules/tailwindcss/src/util/normalizeScreens.js", "node_modules/tailwindcss/src/util/removeAlphaVariables.js", "node_modules/tailwindcss/src/util/toPath.js", "node_modules/tailwindcss/src/util/isSyntacticallyValidPropertyValue.js", "node_modules/tailwindcss/src/util/bigSign.js", "node_modules/tailwindcss/src/lib/remap-bitfield.js", "node_modules/tailwindcss/src/lib/offsets.js", "node_modules/tailwindcss/src/util/applyImportantSelector.js", "node_modules/tailwindcss/src/lib/normalizeTailwindDirectives.js", "node_modules/tailwindcss/src/lib/expandTailwindAtRules.js", "node_modules/tailwindcss/src/util/cloneNodes.js", "node_modules/tailwindcss/src/lib/regex.js", "node_modules/tailwindcss/src/lib/defaultExtractor.js", "node_modules/tailwindcss/src/lib/evaluateTailwindFunctions.js", "node_modules/tailwindcss/src/lib/substituteScreenAtRules.js", "node_modules/tailwindcss/src/lib/resolveDefaultsAtRules.js", "node_modules/tailwindcss/src/lib/collapseAdjacentRules.js", "node_modules/tailwindcss/src/lib/collapseDuplicateDeclarations.js", "node_modules/tailwindcss/src/lib/partitionApplyAtRules.js", "node_modules/tailwindcss/src/lib/detectNesting.js", "node_modules/tailwindcss/src/processTailwindFeatures.js", "node_modules/tailwindcss/src/corePluginList.js", "node_modules/tailwindcss/src/util/configurePlugins.js", "node_modules/tailwindcss/src/public/colors.js", "node_modules/tailwindcss/src/util/defaults.js", "node_modules/tailwindcss/src/util/normalizeConfig.js", "node_modules/tailwindcss/src/util/cloneDeep.js", "node_modules/tailwindcss/src/util/resolveConfig.js", "node_modules/tailwindcss/src/util/getAllConfigs.js", "node_modules/tailwindcss/src/public/resolve-config.js"],
  "sourcesContent": ["var openParentheses = '('.charCodeAt(0)\nvar closeParentheses = ')'.charCodeAt(0)\nvar singleQuote = \"'\".charCodeAt(0)\nvar doubleQuote = '\"'.charCodeAt(0)\nvar backslash = '\\\\'.charCodeAt(0)\nvar slash = '/'.charCodeAt(0)\nvar comma = ','.charCodeAt(0)\nvar colon = ':'.charCodeAt(0)\nvar star = '*'.charCodeAt(0)\nvar uLower = 'u'.charCodeAt(0)\nvar uUpper = 'U'.charCodeAt(0)\nvar plus = '+'.charCodeAt(0)\nvar isUnicodeRange = /^[a-f0-9?-]+$/i\n\nmodule.exports = function (input) {\n  var tokens = []\n  var value = input\n\n  var next, quote, prev, token, escape, escapePos, whitespacePos, parenthesesOpenPos\n  var pos = 0\n  var code = value.charCodeAt(pos)\n  var max = value.length\n  var stack = [{ nodes: tokens }]\n  var balanced = 0\n  var parent\n\n  var name = ''\n  var before = ''\n  var after = ''\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos\n      do {\n        next += 1\n        code = value.charCodeAt(next)\n      } while (code <= 32)\n      token = value.slice(pos, next)\n\n      prev = tokens[tokens.length - 1]\n      if (code === closeParentheses && balanced) {\n        after = token\n      } else if (prev && prev.type === 'div') {\n        prev.after = token\n        prev.sourceEndIndex += token.length\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent || (parent && parent.type === 'function' && false)))\n      ) {\n        before = token\n      } else {\n        tokens.push({\n          type: 'space',\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token,\n        })\n      }\n\n      pos = next\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos\n      quote = code === singleQuote ? \"'\" : '\"'\n      token = {\n        type: 'string',\n        sourceIndex: pos,\n        quote: quote,\n      }\n      do {\n        escape = false\n        next = value.indexOf(quote, next + 1)\n        if (~next) {\n          escapePos = next\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1\n            escape = !escape\n          }\n        } else {\n          value += quote\n          next = value.length - 1\n          token.unclosed = true\n        }\n      } while (escape)\n      token.value = value.slice(pos + 1, next)\n      token.sourceEndIndex = token.unclosed ? next : next + 1\n      tokens.push(token)\n      pos = next + 1\n      code = value.charCodeAt(pos)\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf('*/', pos)\n\n      token = {\n        type: 'comment',\n        sourceIndex: pos,\n        sourceEndIndex: next + 2,\n      }\n\n      if (next === -1) {\n        token.unclosed = true\n        next = value.length\n        token.sourceEndIndex = next\n      }\n\n      token.value = value.slice(pos + 2, next)\n      tokens.push(token)\n\n      pos = next + 2\n      code = value.charCodeAt(pos)\n\n      // Operation within calc\n    } else if ((code === slash || code === star) && parent && parent.type === 'function' && true) {\n      token = value[pos]\n      tokens.push({\n        type: 'word',\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n      })\n      pos += 1\n      code = value.charCodeAt(pos)\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos]\n\n      tokens.push({\n        type: 'div',\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: '',\n      })\n      before = ''\n\n      pos += 1\n      code = value.charCodeAt(pos)\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos\n      do {\n        next += 1\n        code = value.charCodeAt(next)\n      } while (code <= 32)\n      parenthesesOpenPos = pos\n      token = {\n        type: 'function',\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next),\n      }\n      pos = next\n\n      if (name === 'url' && code !== singleQuote && code !== doubleQuote) {\n        next -= 1\n        do {\n          escape = false\n          next = value.indexOf(')', next + 1)\n          if (~next) {\n            escapePos = next\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1\n              escape = !escape\n            }\n          } else {\n            value += ')'\n            next = value.length - 1\n            token.unclosed = true\n          }\n        } while (escape)\n        // Whitespaces before closed\n        whitespacePos = next\n        do {\n          whitespacePos -= 1\n          code = value.charCodeAt(whitespacePos)\n        } while (code <= 32)\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: 'word',\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1),\n              },\n            ]\n          } else {\n            token.nodes = []\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = ''\n            token.nodes.push({\n              type: 'space',\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next),\n            })\n          } else {\n            token.after = value.slice(whitespacePos + 1, next)\n            token.sourceEndIndex = next\n          }\n        } else {\n          token.after = ''\n          token.nodes = []\n        }\n        pos = next + 1\n        token.sourceEndIndex = token.unclosed ? next : pos\n        code = value.charCodeAt(pos)\n        tokens.push(token)\n      } else {\n        balanced += 1\n        token.after = ''\n        token.sourceEndIndex = pos + 1\n        tokens.push(token)\n        stack.push(token)\n        tokens = token.nodes = []\n        parent = token\n      }\n      name = ''\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1\n      code = value.charCodeAt(pos)\n\n      parent.after = after\n      parent.sourceEndIndex += after.length\n      after = ''\n      balanced -= 1\n      stack[stack.length - 1].sourceEndIndex = pos\n      stack.pop()\n      parent = stack[balanced]\n      tokens = parent.nodes\n\n      // Words\n    } else {\n      next = pos\n      do {\n        if (code === backslash) {\n          next += 1\n        }\n        next += 1\n        code = value.charCodeAt(next)\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star && parent && parent.type === 'function' && true) ||\n          (code === slash && parent.type === 'function' && true) ||\n          (code === closeParentheses && balanced)\n        )\n      )\n      token = value.slice(pos, next)\n\n      if (openParentheses === code) {\n        name = token\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: 'unicode-range',\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token,\n        })\n      } else {\n        tokens.push({\n          type: 'word',\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token,\n        })\n      }\n\n      pos = next\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true\n    stack[pos].sourceEndIndex = value.length\n  }\n\n  return stack[0].nodes\n}\n", "module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i]\n    if (!bubble) {\n      result = cb(node, i, nodes)\n    }\n\n    if (result !== false && node.type === 'function' && Array.isArray(node.nodes)) {\n      walk(node.nodes, cb, bubble)\n    }\n\n    if (bubble) {\n      cb(node, i, nodes)\n    }\n  }\n}\n", "function stringifyNode(node, custom) {\n  var type = node.type\n  var value = node.value\n  var buf\n  var customResult\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult\n  } else if (type === 'word' || type === 'space') {\n    return value\n  } else if (type === 'string') {\n    buf = node.quote || ''\n    return buf + value + (node.unclosed ? '' : buf)\n  } else if (type === 'comment') {\n    return '/*' + value + (node.unclosed ? '' : '*/')\n  } else if (type === 'div') {\n    return (node.before || '') + value + (node.after || '')\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom)\n    if (type !== 'function') {\n      return buf\n    }\n    return value + '(' + (node.before || '') + buf + (node.after || '') + (node.unclosed ? '' : ')')\n  }\n  return value\n}\n\nfunction stringify(nodes, custom) {\n  var result, i\n\n  if (Array.isArray(nodes)) {\n    result = ''\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result\n    }\n    return result\n  }\n  return stringifyNode(nodes, custom)\n}\n\nmodule.exports = stringify\n", "var minus = '-'.charCodeAt(0)\nvar plus = '+'.charCodeAt(0)\nvar dot = '.'.charCodeAt(0)\nvar exp = 'e'.charCodeAt(0)\nvar EXP = 'E'.charCodeAt(0)\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0)\n  var nextCode\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1)\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true\n    }\n\n    var nextNextCode = value.charCodeAt(2)\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true\n    }\n\n    return false\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1)\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true\n    }\n\n    return false\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true\n  }\n\n  return false\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function (value) {\n  var pos = 0\n  var length = value.length\n  var code\n  var nextCode\n  var nextNextCode\n\n  if (length === 0 || !likeNumber(value)) {\n    return false\n  }\n\n  code = value.charCodeAt(pos)\n\n  if (code === plus || code === minus) {\n    pos++\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos)\n\n    if (code < 48 || code > 57) {\n      break\n    }\n\n    pos += 1\n  }\n\n  code = value.charCodeAt(pos)\n  nextCode = value.charCodeAt(pos + 1)\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2\n\n    while (pos < length) {\n      code = value.charCodeAt(pos)\n\n      if (code < 48 || code > 57) {\n        break\n      }\n\n      pos += 1\n    }\n  }\n\n  code = value.charCodeAt(pos)\n  nextCode = value.charCodeAt(pos + 1)\n  nextNextCode = value.charCodeAt(pos + 2)\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2\n\n    while (pos < length) {\n      code = value.charCodeAt(pos)\n\n      if (code < 48 || code > 57) {\n        break\n      }\n\n      pos += 1\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos),\n  }\n}\n", "var parse = require('./parse')\nvar walk = require('./walk')\nvar stringify = require('./stringify')\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value)\n    return this\n  }\n  return new ValueParser(value)\n}\n\nValueParser.prototype.toString = function () {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : ''\n}\n\nValueParser.prototype.walk = function (cb, bubble) {\n  walk(this.nodes, cb, bubble)\n  return this\n}\n\nValueParser.unit = require('./unit')\n\nValueParser.walk = walk\n\nValueParser.stringify = stringify\n\nmodule.exports = ValueParser\n", "module.exports = {\n  content: [],\n  presets: [],\n  darkMode: 'media', // or 'class'\n  theme: {\n    accentColor: ({ theme }) => ({\n      ...theme('colors'),\n      auto: 'auto',\n    }),\n    animation: {\n      none: 'none',\n      spin: 'spin 1s linear infinite',\n      ping: 'ping 1s cubic-bezier(0, 0, 0.2, 1) infinite',\n      pulse: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n      bounce: 'bounce 1s infinite',\n    },\n    aria: {\n      busy: 'busy=\"true\"',\n      checked: 'checked=\"true\"',\n      disabled: 'disabled=\"true\"',\n      expanded: 'expanded=\"true\"',\n      hidden: 'hidden=\"true\"',\n      pressed: 'pressed=\"true\"',\n      readonly: 'readonly=\"true\"',\n      required: 'required=\"true\"',\n      selected: 'selected=\"true\"',\n    },\n    aspectRatio: {\n      auto: 'auto',\n      square: '1 / 1',\n      video: '16 / 9',\n    },\n    backdropBlur: ({ theme }) => theme('blur'),\n    backdropBrightness: ({ theme }) => theme('brightness'),\n    backdropContrast: ({ theme }) => theme('contrast'),\n    backdropGrayscale: ({ theme }) => theme('grayscale'),\n    backdropHueRotate: ({ theme }) => theme('hueRotate'),\n    backdropInvert: ({ theme }) => theme('invert'),\n    backdropOpacity: ({ theme }) => theme('opacity'),\n    backdropSaturate: ({ theme }) => theme('saturate'),\n    backdropSepia: ({ theme }) => theme('sepia'),\n    backgroundColor: ({ theme }) => theme('colors'),\n    backgroundImage: {\n      none: 'none',\n      'gradient-to-t': 'linear-gradient(to top, var(--tw-gradient-stops))',\n      'gradient-to-tr': 'linear-gradient(to top right, var(--tw-gradient-stops))',\n      'gradient-to-r': 'linear-gradient(to right, var(--tw-gradient-stops))',\n      'gradient-to-br': 'linear-gradient(to bottom right, var(--tw-gradient-stops))',\n      'gradient-to-b': 'linear-gradient(to bottom, var(--tw-gradient-stops))',\n      'gradient-to-bl': 'linear-gradient(to bottom left, var(--tw-gradient-stops))',\n      'gradient-to-l': 'linear-gradient(to left, var(--tw-gradient-stops))',\n      'gradient-to-tl': 'linear-gradient(to top left, var(--tw-gradient-stops))',\n    },\n    backgroundOpacity: ({ theme }) => theme('opacity'),\n    backgroundPosition: {\n      bottom: 'bottom',\n      center: 'center',\n      left: 'left',\n      'left-bottom': 'left bottom',\n      'left-top': 'left top',\n      right: 'right',\n      'right-bottom': 'right bottom',\n      'right-top': 'right top',\n      top: 'top',\n    },\n    backgroundSize: {\n      auto: 'auto',\n      cover: 'cover',\n      contain: 'contain',\n    },\n    blur: {\n      0: '0',\n      none: '0',\n      sm: '4px',\n      DEFAULT: '8px',\n      md: '12px',\n      lg: '16px',\n      xl: '24px',\n      '2xl': '40px',\n      '3xl': '64px',\n    },\n    borderColor: ({ theme }) => ({\n      ...theme('colors'),\n      DEFAULT: theme('colors.gray.200', 'currentColor'),\n    }),\n    borderOpacity: ({ theme }) => theme('opacity'),\n    borderRadius: {\n      none: '0px',\n      sm: '0.125rem',\n      DEFAULT: '0.25rem',\n      md: '0.375rem',\n      lg: '0.5rem',\n      xl: '0.75rem',\n      '2xl': '1rem',\n      '3xl': '1.5rem',\n      full: '9999px',\n    },\n    borderSpacing: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    borderWidth: {\n      DEFAULT: '1px',\n      0: '0px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    boxShadow: {\n      sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n      DEFAULT: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',\n      md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n      lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n      xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',\n      '2xl': '0 25px 50px -12px rgb(0 0 0 / 0.25)',\n      inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',\n      none: 'none',\n    },\n    boxShadowColor: ({ theme }) => theme('colors'),\n    brightness: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      90: '.9',\n      95: '.95',\n      100: '1',\n      105: '1.05',\n      110: '1.1',\n      125: '1.25',\n      150: '1.5',\n      200: '2',\n    },\n    caretColor: ({ theme }) => theme('colors'),\n    colors: ({ colors }) => ({\n      inherit: colors.inherit,\n      current: colors.current,\n      transparent: colors.transparent,\n      black: colors.black,\n      white: colors.white,\n      slate: colors.slate,\n      gray: colors.gray,\n      zinc: colors.zinc,\n      neutral: colors.neutral,\n      stone: colors.stone,\n      red: colors.red,\n      orange: colors.orange,\n      amber: colors.amber,\n      yellow: colors.yellow,\n      lime: colors.lime,\n      green: colors.green,\n      emerald: colors.emerald,\n      teal: colors.teal,\n      cyan: colors.cyan,\n      sky: colors.sky,\n      blue: colors.blue,\n      indigo: colors.indigo,\n      violet: colors.violet,\n      purple: colors.purple,\n      fuchsia: colors.fuchsia,\n      pink: colors.pink,\n      rose: colors.rose,\n    }),\n    columns: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      '3xs': '16rem',\n      '2xs': '18rem',\n      xs: '20rem',\n      sm: '24rem',\n      md: '28rem',\n      lg: '32rem',\n      xl: '36rem',\n      '2xl': '42rem',\n      '3xl': '48rem',\n      '4xl': '56rem',\n      '5xl': '64rem',\n      '6xl': '72rem',\n      '7xl': '80rem',\n    },\n    container: {},\n    content: {\n      none: 'none',\n    },\n    contrast: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      100: '1',\n      125: '1.25',\n      150: '1.5',\n      200: '2',\n    },\n    cursor: {\n      auto: 'auto',\n      default: 'default',\n      pointer: 'pointer',\n      wait: 'wait',\n      text: 'text',\n      move: 'move',\n      help: 'help',\n      'not-allowed': 'not-allowed',\n      none: 'none',\n      'context-menu': 'context-menu',\n      progress: 'progress',\n      cell: 'cell',\n      crosshair: 'crosshair',\n      'vertical-text': 'vertical-text',\n      alias: 'alias',\n      copy: 'copy',\n      'no-drop': 'no-drop',\n      grab: 'grab',\n      grabbing: 'grabbing',\n      'all-scroll': 'all-scroll',\n      'col-resize': 'col-resize',\n      'row-resize': 'row-resize',\n      'n-resize': 'n-resize',\n      'e-resize': 'e-resize',\n      's-resize': 's-resize',\n      'w-resize': 'w-resize',\n      'ne-resize': 'ne-resize',\n      'nw-resize': 'nw-resize',\n      'se-resize': 'se-resize',\n      'sw-resize': 'sw-resize',\n      'ew-resize': 'ew-resize',\n      'ns-resize': 'ns-resize',\n      'nesw-resize': 'nesw-resize',\n      'nwse-resize': 'nwse-resize',\n      'zoom-in': 'zoom-in',\n      'zoom-out': 'zoom-out',\n    },\n    divideColor: ({ theme }) => theme('borderColor'),\n    divideOpacity: ({ theme }) => theme('borderOpacity'),\n    divideWidth: ({ theme }) => theme('borderWidth'),\n    dropShadow: {\n      sm: '0 1px 1px rgb(0 0 0 / 0.05)',\n      DEFAULT: ['0 1px 2px rgb(0 0 0 / 0.1)', '0 1px 1px rgb(0 0 0 / 0.06)'],\n      md: ['0 4px 3px rgb(0 0 0 / 0.07)', '0 2px 2px rgb(0 0 0 / 0.06)'],\n      lg: ['0 10px 8px rgb(0 0 0 / 0.04)', '0 4px 3px rgb(0 0 0 / 0.1)'],\n      xl: ['0 20px 13px rgb(0 0 0 / 0.03)', '0 8px 5px rgb(0 0 0 / 0.08)'],\n      '2xl': '0 25px 25px rgb(0 0 0 / 0.15)',\n      none: '0 0 #0000',\n    },\n    fill: ({ theme }) => ({\n      none: 'none',\n      ...theme('colors'),\n    }),\n    flex: {\n      1: '1 1 0%',\n      auto: '1 1 auto',\n      initial: '0 1 auto',\n      none: 'none',\n    },\n    flexBasis: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n    }),\n    flexGrow: {\n      0: '0',\n      DEFAULT: '1',\n    },\n    flexShrink: {\n      0: '0',\n      DEFAULT: '1',\n    },\n    fontFamily: {\n      sans: [\n        'ui-sans-serif',\n        'system-ui',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        '\"Noto Sans\"',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n        '\"Noto Color Emoji\"',\n      ],\n      serif: ['ui-serif', 'Georgia', 'Cambria', '\"Times New Roman\"', 'Times', 'serif'],\n      mono: [\n        'ui-monospace',\n        'SFMono-Regular',\n        'Menlo',\n        'Monaco',\n        'Consolas',\n        '\"Liberation Mono\"',\n        '\"Courier New\"',\n        'monospace',\n      ],\n    },\n    fontSize: {\n      xs: ['0.75rem', { lineHeight: '1rem' }],\n      sm: ['0.875rem', { lineHeight: '1.25rem' }],\n      base: ['1rem', { lineHeight: '1.5rem' }],\n      lg: ['1.125rem', { lineHeight: '1.75rem' }],\n      xl: ['1.25rem', { lineHeight: '1.75rem' }],\n      '2xl': ['1.5rem', { lineHeight: '2rem' }],\n      '3xl': ['1.875rem', { lineHeight: '2.25rem' }],\n      '4xl': ['2.25rem', { lineHeight: '2.5rem' }],\n      '5xl': ['3rem', { lineHeight: '1' }],\n      '6xl': ['3.75rem', { lineHeight: '1' }],\n      '7xl': ['4.5rem', { lineHeight: '1' }],\n      '8xl': ['6rem', { lineHeight: '1' }],\n      '9xl': ['8rem', { lineHeight: '1' }],\n    },\n    fontWeight: {\n      thin: '100',\n      extralight: '200',\n      light: '300',\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n      extrabold: '800',\n      black: '900',\n    },\n    gap: ({ theme }) => theme('spacing'),\n    gradientColorStops: ({ theme }) => theme('colors'),\n    gradientColorStopPositions: {\n      '0%': '0%',\n      '5%': '5%',\n      '10%': '10%',\n      '15%': '15%',\n      '20%': '20%',\n      '25%': '25%',\n      '30%': '30%',\n      '35%': '35%',\n      '40%': '40%',\n      '45%': '45%',\n      '50%': '50%',\n      '55%': '55%',\n      '60%': '60%',\n      '65%': '65%',\n      '70%': '70%',\n      '75%': '75%',\n      '80%': '80%',\n      '85%': '85%',\n      '90%': '90%',\n      '95%': '95%',\n      '100%': '100%',\n    },\n    grayscale: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    gridAutoColumns: {\n      auto: 'auto',\n      min: 'min-content',\n      max: 'max-content',\n      fr: 'minmax(0, 1fr)',\n    },\n    gridAutoRows: {\n      auto: 'auto',\n      min: 'min-content',\n      max: 'max-content',\n      fr: 'minmax(0, 1fr)',\n    },\n    gridColumn: {\n      auto: 'auto',\n      'span-1': 'span 1 / span 1',\n      'span-2': 'span 2 / span 2',\n      'span-3': 'span 3 / span 3',\n      'span-4': 'span 4 / span 4',\n      'span-5': 'span 5 / span 5',\n      'span-6': 'span 6 / span 6',\n      'span-7': 'span 7 / span 7',\n      'span-8': 'span 8 / span 8',\n      'span-9': 'span 9 / span 9',\n      'span-10': 'span 10 / span 10',\n      'span-11': 'span 11 / span 11',\n      'span-12': 'span 12 / span 12',\n      'span-full': '1 / -1',\n    },\n    gridColumnEnd: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridColumnStart: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridRow: {\n      auto: 'auto',\n      'span-1': 'span 1 / span 1',\n      'span-2': 'span 2 / span 2',\n      'span-3': 'span 3 / span 3',\n      'span-4': 'span 4 / span 4',\n      'span-5': 'span 5 / span 5',\n      'span-6': 'span 6 / span 6',\n      'span-full': '1 / -1',\n    },\n    gridRowEnd: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n    },\n    gridRowStart: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n    },\n    gridTemplateColumns: {\n      none: 'none',\n      1: 'repeat(1, minmax(0, 1fr))',\n      2: 'repeat(2, minmax(0, 1fr))',\n      3: 'repeat(3, minmax(0, 1fr))',\n      4: 'repeat(4, minmax(0, 1fr))',\n      5: 'repeat(5, minmax(0, 1fr))',\n      6: 'repeat(6, minmax(0, 1fr))',\n      7: 'repeat(7, minmax(0, 1fr))',\n      8: 'repeat(8, minmax(0, 1fr))',\n      9: 'repeat(9, minmax(0, 1fr))',\n      10: 'repeat(10, minmax(0, 1fr))',\n      11: 'repeat(11, minmax(0, 1fr))',\n      12: 'repeat(12, minmax(0, 1fr))',\n    },\n    gridTemplateRows: {\n      none: 'none',\n      1: 'repeat(1, minmax(0, 1fr))',\n      2: 'repeat(2, minmax(0, 1fr))',\n      3: 'repeat(3, minmax(0, 1fr))',\n      4: 'repeat(4, minmax(0, 1fr))',\n      5: 'repeat(5, minmax(0, 1fr))',\n      6: 'repeat(6, minmax(0, 1fr))',\n    },\n    height: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      full: '100%',\n      screen: '100vh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    hueRotate: {\n      0: '0deg',\n      15: '15deg',\n      30: '30deg',\n      60: '60deg',\n      90: '90deg',\n      180: '180deg',\n    },\n    inset: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      full: '100%',\n    }),\n    invert: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    keyframes: {\n      spin: {\n        to: {\n          transform: 'rotate(360deg)',\n        },\n      },\n      ping: {\n        '75%, 100%': {\n          transform: 'scale(2)',\n          opacity: '0',\n        },\n      },\n      pulse: {\n        '50%': {\n          opacity: '.5',\n        },\n      },\n      bounce: {\n        '0%, 100%': {\n          transform: 'translateY(-25%)',\n          animationTimingFunction: 'cubic-bezier(0.8,0,1,1)',\n        },\n        '50%': {\n          transform: 'none',\n          animationTimingFunction: 'cubic-bezier(0,0,0.2,1)',\n        },\n      },\n    },\n    letterSpacing: {\n      tighter: '-0.05em',\n      tight: '-0.025em',\n      normal: '0em',\n      wide: '0.025em',\n      wider: '0.05em',\n      widest: '0.1em',\n    },\n    lineHeight: {\n      none: '1',\n      tight: '1.25',\n      snug: '1.375',\n      normal: '1.5',\n      relaxed: '1.625',\n      loose: '2',\n      3: '.75rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n    },\n    listStyleType: {\n      none: 'none',\n      disc: 'disc',\n      decimal: 'decimal',\n    },\n    listStyleImage: {\n      none: 'none',\n    },\n    margin: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n    }),\n    lineClamp: {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n    },\n    maxHeight: ({ theme }) => ({\n      ...theme('spacing'),\n      none: 'none',\n      full: '100%',\n      screen: '100vh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    maxWidth: ({ theme, breakpoints }) => ({\n      none: 'none',\n      0: '0rem',\n      xs: '20rem',\n      sm: '24rem',\n      md: '28rem',\n      lg: '32rem',\n      xl: '36rem',\n      '2xl': '42rem',\n      '3xl': '48rem',\n      '4xl': '56rem',\n      '5xl': '64rem',\n      '6xl': '72rem',\n      '7xl': '80rem',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n      prose: '65ch',\n      ...breakpoints(theme('screens')),\n    }),\n    minHeight: {\n      0: '0px',\n      full: '100%',\n      screen: '100vh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    },\n    minWidth: {\n      0: '0px',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    },\n    objectPosition: {\n      bottom: 'bottom',\n      center: 'center',\n      left: 'left',\n      'left-bottom': 'left bottom',\n      'left-top': 'left top',\n      right: 'right',\n      'right-bottom': 'right bottom',\n      'right-top': 'right top',\n      top: 'top',\n    },\n    opacity: {\n      0: '0',\n      5: '0.05',\n      10: '0.1',\n      20: '0.2',\n      25: '0.25',\n      30: '0.3',\n      40: '0.4',\n      50: '0.5',\n      60: '0.6',\n      70: '0.7',\n      75: '0.75',\n      80: '0.8',\n      90: '0.9',\n      95: '0.95',\n      100: '1',\n    },\n    order: {\n      first: '-9999',\n      last: '9999',\n      none: '0',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    outlineColor: ({ theme }) => theme('colors'),\n    outlineOffset: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    outlineWidth: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    padding: ({ theme }) => theme('spacing'),\n    placeholderColor: ({ theme }) => theme('colors'),\n    placeholderOpacity: ({ theme }) => theme('opacity'),\n    ringColor: ({ theme }) => ({\n      DEFAULT: theme('colors.blue.500', '#3b82f6'),\n      ...theme('colors'),\n    }),\n    ringOffsetColor: ({ theme }) => theme('colors'),\n    ringOffsetWidth: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    ringOpacity: ({ theme }) => ({\n      DEFAULT: '0.5',\n      ...theme('opacity'),\n    }),\n    ringWidth: {\n      DEFAULT: '3px',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    rotate: {\n      0: '0deg',\n      1: '1deg',\n      2: '2deg',\n      3: '3deg',\n      6: '6deg',\n      12: '12deg',\n      45: '45deg',\n      90: '90deg',\n      180: '180deg',\n    },\n    saturate: {\n      0: '0',\n      50: '.5',\n      100: '1',\n      150: '1.5',\n      200: '2',\n    },\n    scale: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      90: '.9',\n      95: '.95',\n      100: '1',\n      105: '1.05',\n      110: '1.1',\n      125: '1.25',\n      150: '1.5',\n    },\n    screens: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n      '2xl': '1536px',\n    },\n    scrollMargin: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    scrollPadding: ({ theme }) => theme('spacing'),\n    sepia: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    skew: {\n      0: '0deg',\n      1: '1deg',\n      2: '2deg',\n      3: '3deg',\n      6: '6deg',\n      12: '12deg',\n    },\n    space: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    spacing: {\n      px: '1px',\n      0: '0px',\n      0.5: '0.125rem',\n      1: '0.25rem',\n      1.5: '0.375rem',\n      2: '0.5rem',\n      2.5: '0.625rem',\n      3: '0.75rem',\n      3.5: '0.875rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n      11: '2.75rem',\n      12: '3rem',\n      14: '3.5rem',\n      16: '4rem',\n      20: '5rem',\n      24: '6rem',\n      28: '7rem',\n      32: '8rem',\n      36: '9rem',\n      40: '10rem',\n      44: '11rem',\n      48: '12rem',\n      52: '13rem',\n      56: '14rem',\n      60: '15rem',\n      64: '16rem',\n      72: '18rem',\n      80: '20rem',\n      96: '24rem',\n    },\n    stroke: ({ theme }) => ({\n      none: 'none',\n      ...theme('colors'),\n    }),\n    strokeWidth: {\n      0: '0',\n      1: '1',\n      2: '2',\n    },\n    supports: {},\n    data: {},\n    textColor: ({ theme }) => theme('colors'),\n    textDecorationColor: ({ theme }) => theme('colors'),\n    textDecorationThickness: {\n      auto: 'auto',\n      'from-font': 'from-font',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    textIndent: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    textOpacity: ({ theme }) => theme('opacity'),\n    textUnderlineOffset: {\n      auto: 'auto',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    transformOrigin: {\n      center: 'center',\n      top: 'top',\n      'top-right': 'top right',\n      right: 'right',\n      'bottom-right': 'bottom right',\n      bottom: 'bottom',\n      'bottom-left': 'bottom left',\n      left: 'left',\n      'top-left': 'top left',\n    },\n    transitionDelay: {\n      0: '0s',\n      75: '75ms',\n      100: '100ms',\n      150: '150ms',\n      200: '200ms',\n      300: '300ms',\n      500: '500ms',\n      700: '700ms',\n      1000: '1000ms',\n    },\n    transitionDuration: {\n      DEFAULT: '150ms',\n      0: '0s',\n      75: '75ms',\n      100: '100ms',\n      150: '150ms',\n      200: '200ms',\n      300: '300ms',\n      500: '500ms',\n      700: '700ms',\n      1000: '1000ms',\n    },\n    transitionProperty: {\n      none: 'none',\n      all: 'all',\n      DEFAULT:\n        'color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter',\n      colors: 'color, background-color, border-color, text-decoration-color, fill, stroke',\n      opacity: 'opacity',\n      shadow: 'box-shadow',\n      transform: 'transform',\n    },\n    transitionTimingFunction: {\n      DEFAULT: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      linear: 'linear',\n      in: 'cubic-bezier(0.4, 0, 1, 1)',\n      out: 'cubic-bezier(0, 0, 0.2, 1)',\n      'in-out': 'cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    translate: ({ theme }) => ({\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      full: '100%',\n    }),\n    width: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n      screen: '100vw',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    willChange: {\n      auto: 'auto',\n      scroll: 'scroll-position',\n      contents: 'contents',\n      transform: 'transform',\n    },\n    zIndex: {\n      auto: 'auto',\n      0: '0',\n      10: '10',\n      20: '20',\n      30: '30',\n      40: '40',\n      50: '50',\n    },\n  },\n  plugins: [],\n}\n", "// src/completionProvider.ts\nimport {\n  CompletionItemKind\n} from \"vscode-languageserver\";\nimport dlv6 from \"dlv\";\n\n// src/util/isObject.ts\nfunction isObject(variable) {\n  return Object.prototype.toString.call(variable) === \"[object Object]\";\n}\n\n// src/util/removeMeta.ts\nfunction removeMeta(obj) {\n  let result = {};\n  for (let key in obj) {\n    if (key.substr(0, 2) === \"__\")\n      continue;\n    if (isObject(obj[key])) {\n      result[key] = removeMeta(obj[key]);\n    } else {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n}\n\n// src/util/color.ts\nimport dlv2 from \"dlv\";\n\n// src/util/rangesEqual.ts\nfunction rangesEqual(a, b) {\n  return a.start.line === b.start.line && a.start.character === b.start.character && a.end.line === b.end.line && a.end.character === b.end.character;\n}\n\n// src/util/array.ts\nfunction dedupe(arr) {\n  return arr.filter((value, index, self) => self.indexOf(value) === index);\n}\nfunction dedupeBy(arr, transform) {\n  return arr.filter((value, index, self) => self.map(transform).indexOf(transform(value)) === index);\n}\nfunction dedupeByRange(arr) {\n  return arr.filter(\n    (classList, classListIndex) => classListIndex === arr.findIndex((c) => rangesEqual(c.range, classList.range))\n  );\n}\nfunction ensureArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction flatten(arrays) {\n  return [].concat.apply([], arrays);\n}\nfunction equal(a, b) {\n  if (a === b)\n    return true;\n  if (a.length !== b.length)\n    return false;\n  let aSorted = a.concat().sort();\n  let bSorted = b.concat().sort();\n  for (let i = 0; i < aSorted.length; ++i) {\n    if (aSorted[i] !== bSorted[i])\n      return false;\n  }\n  return true;\n}\nfunction equalExact(a, b) {\n  if (a === b)\n    return true;\n  if (a.length !== b.length)\n    return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i])\n      return false;\n  }\n  return true;\n}\n\n// src/util/combinations.ts\nfunction combinations(str) {\n  let fn = function(active, rest, a) {\n    if (!active && !rest)\n      return void 0;\n    if (!rest) {\n      a.push(active);\n    } else {\n      fn(active + rest[0], rest.slice(1), a);\n      fn(active, rest.slice(1), a);\n    }\n    return a;\n  };\n  return fn(\"\", str, []);\n}\n\n// src/util/getClassNameAtPosition.ts\nimport dlv from \"dlv\";\nfunction getClassNameParts(state, className) {\n  let separator = state.separator;\n  className = className.replace(/^\\./, \"\");\n  let parts = className.split(separator);\n  if (parts.length === 1) {\n    return dlv(state.classNames.classNames, [className, \"__info\", \"__rule\"]) === true || Array.isArray(dlv(state.classNames.classNames, [className, \"__info\"])) ? [className] : null;\n  }\n  let points = combinations(\"123456789\".substr(0, parts.length - 1)).map(\n    (x) => x.split(\"\").map((x2) => parseInt(x2, 10))\n  );\n  let possibilities = [\n    [className],\n    ...points.map((p) => {\n      let result = [];\n      let i = 0;\n      p.forEach((x) => {\n        result.push(parts.slice(i, x).join(\"-\"));\n        i = x;\n      });\n      result.push(parts.slice(i).join(\"-\"));\n      return result;\n    })\n  ];\n  return possibilities.find((key) => {\n    if (dlv(state.classNames.classNames, [...key, \"__info\", \"__rule\"]) === true || Array.isArray(dlv(state.classNames.classNames, [...key, \"__info\"]))) {\n      return true;\n    }\n    return false;\n  });\n}\n\n// src/util/pixelEquivalents.ts\nimport parseValue from \"postcss-value-parser\";\nimport { parse as parseMediaQueryList } from \"@csstools/media-query-list-parser\";\nimport { isTokenNode } from \"@csstools/css-parser-algorithms\";\n\n// src/util/comments.ts\nfunction applyComments(str, comments) {\n  let offset = 0;\n  for (let comment of comments) {\n    let index = comment.index + offset;\n    let commentStr = ` /* ${comment.value} */`;\n    str = str.slice(0, index) + commentStr + str.slice(index);\n    offset += commentStr.length;\n  }\n  return str;\n}\n\n// src/util/pixelEquivalents.ts\nfunction addPixelEquivalentsToValue(value, rootFontSize) {\n  if (!value.includes(\"rem\")) {\n    return value;\n  }\n  parseValue(value).walk((node) => {\n    if (node.type !== \"word\") {\n      return true;\n    }\n    let unit = parseValue.unit(node.value);\n    if (!unit || unit.unit !== \"rem\") {\n      return false;\n    }\n    let commentStr = ` /* ${parseFloat(unit.number) * rootFontSize}px */`;\n    value = value.slice(0, node.sourceEndIndex) + commentStr + value.slice(node.sourceEndIndex);\n    return false;\n  });\n  return value;\n}\nfunction getPixelEquivalentsForMediaQuery(params, rootFontSize) {\n  let comments = [];\n  try {\n    parseMediaQueryList(params).forEach((mediaQuery) => {\n      mediaQuery.walk(({ node }) => {\n        if (isTokenNode(node) && node.type === \"token\" && node.value[0] === \"dimension-token\" && (node.value[4].type === \"integer\" || node.value[4].type === \"number\") && (node.value[4].unit === \"rem\" || node.value[4].unit === \"em\")) {\n          comments.push({\n            index: params.length - (params.length - node.value[3] - 1),\n            value: `${node.value[4].value * rootFontSize}px`\n          });\n        }\n      });\n    });\n  } catch {\n  }\n  return comments;\n}\nfunction addPixelEquivalentsToMediaQuery(query, rootFontSize) {\n  return query.replace(/(?<=^\\s*@media\\s*).*?$/, (params) => {\n    let comments = getPixelEquivalentsForMediaQuery(params, rootFontSize);\n    return applyComments(params, comments);\n  });\n}\nfunction equivalentPixelValues({\n  comments,\n  rootFontSize\n}) {\n  return {\n    postcssPlugin: \"plugin\",\n    AtRule: {\n      media(atRule2) {\n        if (!atRule2.params.includes(\"em\")) {\n          return;\n        }\n        comments.push(\n          ...getPixelEquivalentsForMediaQuery(atRule2.params, rootFontSize).map(\n            ({ index, value }) => ({\n              index: index + atRule2.source.start.offset + `@media${atRule2.raws.afterName}`.length,\n              value\n            })\n          )\n        );\n      }\n    },\n    Declaration(decl2) {\n      if (!decl2.value.includes(\"rem\")) {\n        return;\n      }\n      parseValue(decl2.value).walk((node) => {\n        if (node.type !== \"word\") {\n          return true;\n        }\n        let unit = parseValue.unit(node.value);\n        if (!unit || unit.unit !== \"rem\") {\n          return false;\n        }\n        comments.push({\n          index: decl2.source.start.offset + `${decl2.prop}${decl2.raws.between}`.length + node.sourceEndIndex,\n          value: `${parseFloat(unit.number) * rootFontSize}px`\n        });\n        return false;\n      });\n    }\n  };\n}\nequivalentPixelValues.postcss = true;\n\n// src/util/colorEquivalents.ts\nimport parseValue2 from \"postcss-value-parser\";\nimport { inGamut } from \"culori\";\nvar allowedFunctions = [\"rgb\", \"rgba\", \"hsl\", \"hsla\", \"lch\", \"lab\", \"oklch\", \"oklab\"];\nfunction equivalentColorValues({ comments }) {\n  return {\n    postcssPlugin: \"plugin\",\n    Declaration(decl2) {\n      if (!allowedFunctions.some((fn) => decl2.value.includes(fn))) {\n        return;\n      }\n      parseValue2(decl2.value).walk((node) => {\n        if (node.type !== \"function\") {\n          return true;\n        }\n        if (!allowedFunctions.includes(node.value)) {\n          return false;\n        }\n        const values = node.nodes.filter((n) => n.type === \"word\").map((n) => n.value);\n        if (values.length < 3) {\n          return false;\n        }\n        const color = getColorFromValue(`${node.value}(${values.join(\" \")})`);\n        if (!inGamut(\"rgb\")(color)) {\n          return false;\n        }\n        if (!color || typeof color === \"string\") {\n          return false;\n        }\n        comments.push({\n          index: decl2.source.start.offset + `${decl2.prop}${decl2.raws.between}`.length + node.sourceEndIndex,\n          value: formatColor(color)\n        });\n        return false;\n      });\n    }\n  };\n}\nequivalentColorValues.postcss = true;\n\n// src/util/equivalents.ts\nimport postcss from \"postcss\";\nfunction addEquivalents(css, settings) {\n  let comments = [];\n  let plugins = [];\n  if (settings.showPixelEquivalents) {\n    plugins.push(\n      equivalentPixelValues({\n        comments,\n        rootFontSize: settings.rootFontSize\n      })\n    );\n  }\n  plugins.push(equivalentColorValues({ comments }));\n  try {\n    postcss(plugins).process(css, { from: void 0 }).css;\n  } catch {\n    return css;\n  }\n  return applyComments(css, comments);\n}\n\n// src/util/jit.ts\nfunction bigSign(bigIntValue) {\n  return (bigIntValue > 0n) - (bigIntValue < 0n);\n}\nfunction generateRules(state, classNames, filter = () => true) {\n  let rules = state.modules.jit.generateRules.module(new Set(classNames), state.jitContext).sort(([a], [z]) => bigSign(a - z));\n  let root2 = state.modules.postcss.module.root({ nodes: rules.map(([, rule2]) => rule2) });\n  state.modules.jit.expandApplyAtRules.module(state.jitContext)(root2);\n  state.modules.jit.evaluateTailwindFunctions?.module?.(state.jitContext)(root2);\n  let actualRules = [];\n  root2.walkRules((subRule) => {\n    if (filter(subRule)) {\n      actualRules.push(subRule);\n    }\n  });\n  return {\n    root: root2,\n    rules: actualRules\n  };\n}\nasync function stringifyRoot(state, root2, uri) {\n  let settings = await state.editor.getConfiguration(uri);\n  let clone = root2.clone();\n  clone.walkAtRules(\"defaults\", (node) => {\n    node.remove();\n  });\n  let css = clone.toString();\n  css = addEquivalents(css, settings.tailwindCSS);\n  let identSize = state.v4 ? 2 : 4;\n  let identPattern = state.v4 ? /^(?:  )+/gm : /^(?:    )+/gm;\n  return css.replace(/([^;{}\\s])(\\n\\s*})/g, (_match, before, after) => `${before};${after}`).replace(\n    identPattern,\n    (indent) => \" \".repeat(indent.length / identSize * settings.editor.tabSize)\n  );\n}\nasync function stringifyDecls(state, rule2, uri) {\n  let settings = await state.editor.getConfiguration(uri);\n  let result = [];\n  rule2.walkDecls(({ prop, value }) => {\n    if (settings.tailwindCSS.showPixelEquivalents) {\n      value = addPixelEquivalentsToValue(value, settings.tailwindCSS.rootFontSize);\n    }\n    result.push(`${prop}: ${value};`);\n  });\n  return result.join(\" \");\n}\nfunction replaceClassName(state, selector, find, replace2) {\n  const transform = (selectors) => {\n    selectors.walkClasses((className) => {\n      if (className.value === find) {\n        className.value = replace2;\n      }\n    });\n  };\n  return state.modules.postcssSelectorParser.module(transform).processSync(selector);\n}\nfunction isAtRule(node) {\n  return node.type === \"atrule\";\n}\nfunction getRuleContext(state, rule2, className) {\n  let context = [replaceClassName(state, rule2.selector, className, \"__placeholder__\")];\n  let p = rule2;\n  while (p.parent && p.parent.type !== \"root\") {\n    p = p.parent;\n    if (isAtRule(p)) {\n      context.unshift(`@${p.name} ${p.params}`);\n    }\n  }\n  return context;\n}\n\n// src/util/color.ts\nimport * as culori from \"culori\";\nimport namedColors from \"color-name\";\nimport postcss2 from \"postcss\";\nvar COLOR_PROPS = [\n  \"accent-color\",\n  \"caret-color\",\n  \"color\",\n  \"column-rule-color\",\n  \"background-color\",\n  \"border-color\",\n  \"border-top-color\",\n  \"border-right-color\",\n  \"border-bottom-color\",\n  \"border-left-color\",\n  \"fill\",\n  \"outline-color\",\n  \"stop-color\",\n  \"stroke\",\n  \"text-decoration-color\"\n];\nfunction getKeywordColor(value) {\n  if (typeof value !== \"string\")\n    return null;\n  let lowercased = value.toLowerCase();\n  if (lowercased === \"transparent\") {\n    return \"transparent\";\n  }\n  if (lowercased === \"currentcolor\") {\n    return \"currentColor\";\n  }\n  return null;\n}\nvar colorRegex = new RegExp(\n  `(?:^|\\\\s|\\\\(|,)(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgba?|hsla?|(?:ok)?(?:lab|lch))\\\\(\\\\s*(-?[\\\\d.]+%?(\\\\s*[,/]\\\\s*|\\\\s+)+){2,3}\\\\s*([\\\\d.]+%?|var\\\\([^)]+\\\\))?\\\\)|transparent|currentColor|${Object.keys(\n    namedColors\n  ).join(\"|\")})(?:$|\\\\s|\\\\)|,)`,\n  \"gi\"\n);\nfunction replaceColorVarsWithTheirDefaults(str) {\n  return str.replace(/((?:rgba?|hsla?|(?:ok)?(?:lab|lch))\\(\\s*)var\\([^,]+,\\s*([^)]+)\\)/gi, \"$1$2\");\n}\nfunction replaceHexColorVarsWithTheirDefaults(str) {\n  return str.replace(/var\\([^,]+,\\s*(#[^)]+)\\)/gi, \"$1\");\n}\nfunction getColorsInString(str) {\n  if (/(?:box|drop)-shadow/.test(str))\n    return [];\n  function toColor(match) {\n    let color = match[1].replace(/var\\([^)]+\\)/, \"1\");\n    return getKeywordColor(color) ?? culori.parse(color);\n  }\n  str = replaceHexColorVarsWithTheirDefaults(str);\n  str = replaceColorVarsWithTheirDefaults(str);\n  str = removeColorMixWherePossible(str);\n  let possibleColors = str.matchAll(colorRegex);\n  return Array.from(possibleColors, toColor).filter(Boolean);\n}\nfunction getColorFromDecls(decls) {\n  let props = Object.keys(decls).filter((prop) => {\n    if (prop === \"content\" && (decls[prop] === '\"\"' || decls[prop] === \"''\" || decls[prop] === \"var(--tw-content)\")) {\n      return false;\n    }\n    return true;\n  });\n  if (props.length === 0)\n    return null;\n  const nonCustomProps = props.filter((prop) => !prop.startsWith(\"--\"));\n  const areAllCustom = nonCustomProps.length === 0;\n  if (!areAllCustom && nonCustomProps.some((prop) => !COLOR_PROPS.includes(prop))) {\n    return null;\n  }\n  const propsToCheck = areAllCustom ? props : nonCustomProps;\n  const colors = propsToCheck.flatMap((prop) => ensureArray(decls[prop]).flatMap(getColorsInString));\n  const colorStrings = dedupe(\n    colors.map(\n      (color) => typeof color === \"string\" ? color : culori.formatRgb({ ...color, alpha: void 0 })\n    )\n  );\n  if (colorStrings.length !== 1) {\n    return null;\n  }\n  let keyword = getKeywordColor(colorStrings[0]);\n  if (keyword) {\n    return keyword;\n  }\n  const nonKeywordColors = colors.filter(\n    (color) => typeof color !== \"string\"\n  );\n  const alphas = dedupe(nonKeywordColors.map((color) => color.alpha ?? 1));\n  if (alphas.length === 1) {\n    return nonKeywordColors[0];\n  }\n  if (alphas.length === 2 && alphas.includes(0)) {\n    return nonKeywordColors.find((color) => (color.alpha ?? 1) !== 0);\n  }\n  return null;\n}\nfunction getColorFromRoot(state, css) {\n  css = css.clone();\n  css.walkAtRules((rule3) => {\n    if (rule3.name === \"property\") {\n      rule3.remove();\n    }\n    if (rule3.name === \"supports\" && rule3.params === \"(-moz-orient: inline)\") {\n      rule3.remove();\n    }\n  });\n  let decls = {};\n  let rule2 = postcss2.rule({\n    selector: \".x\",\n    nodes: []\n  });\n  css.walkDecls((decl2) => {\n    rule2.append(decl2.clone());\n  });\n  css.walkDecls((decl2) => {\n    decls[decl2.prop] ??= [];\n    decls[decl2.prop].push(decl2.value);\n  });\n  return getColorFromDecls(decls);\n}\nfunction getColor(state, className) {\n  if (state.v4) {\n    let css = state.designSystem.compile([className])[0];\n    let color = getColorFromRoot(state, css);\n    return color;\n  }\n  if (state.jit) {\n    if (state.classNames) {\n      const item2 = dlv2(state.classNames.classNames, [className, \"__info\"]);\n      if (item2 && item2.__rule) {\n        return getColorFromDecls(removeMeta(item2));\n      }\n    }\n    let result;\n    try {\n      result = generateRules(state, [className]);\n    } catch (err) {\n      console.error(`Error generating rules for className: ${className}`);\n      console.error(err);\n      return null;\n    }\n    let { root: root2, rules } = result;\n    if (rules.length === 0)\n      return null;\n    let decls = {};\n    root2.walkDecls((decl2) => {\n      let value = decls[decl2.prop];\n      if (value) {\n        if (Array.isArray(value)) {\n          value.push(decl2.value);\n        } else {\n          decls[decl2.prop] = [value, decl2.value];\n        }\n      } else {\n        decls[decl2.prop] = decl2.value;\n      }\n    });\n    return getColorFromDecls(decls);\n  }\n  let parts = getClassNameParts(state, className);\n  if (!parts)\n    return null;\n  const item = dlv2(state.classNames.classNames, [...parts, \"__info\"]);\n  if (!item.__rule)\n    return null;\n  return getColorFromDecls(removeMeta(item));\n}\nfunction getColorFromValue(value) {\n  if (typeof value !== \"string\")\n    return null;\n  const trimmedValue = value.trim();\n  if (trimmedValue.toLowerCase() === \"transparent\") {\n    return \"transparent\";\n  }\n  if (trimmedValue.toLowerCase() === \"currentcolor\") {\n    return \"currentColor\";\n  }\n  if (!/^\\s*(?:rgba?|hsla?|(?:ok)?(?:lab|lch))\\s*\\([^)]+\\)\\s*$/.test(trimmedValue) && !/^\\s*#[0-9a-f]+\\s*$/i.test(trimmedValue) && !Object.keys(namedColors).includes(trimmedValue)) {\n    return null;\n  }\n  const color = culori.parse(trimmedValue);\n  return color ?? null;\n}\nvar toRgb = culori.converter(\"rgb\");\nfunction culoriColorToVscodeColor(color) {\n  let rgb = culori.clampRgb(toRgb(color));\n  return { red: rgb.r, green: rgb.g, blue: rgb.b, alpha: rgb.alpha ?? 1 };\n}\nfunction formatColor(color) {\n  if (color.alpha === void 0 || color.alpha === 1) {\n    return culori.formatHex(color);\n  }\n  return culori.formatHex8(color);\n}\nvar COLOR_MIX_REGEX = /color-mix\\(in srgb, (.*?) (\\d+|\\.\\d+|\\d+\\.\\d+)%, transparent\\)/g;\nfunction removeColorMixWherePossible(str) {\n  return str.replace(COLOR_MIX_REGEX, (match, color, percentage) => {\n    if (color.startsWith(\"var(\"))\n      return match;\n    let parsed = culori.parse(color);\n    if (!parsed)\n      return match;\n    let alpha = Number(percentage) / 100;\n    if (Number.isNaN(alpha))\n      return match;\n    return culori.formatRgb({ ...parsed, alpha });\n  });\n}\n\n// src/util/languages.ts\nvar htmlLanguages = [\n  \"aspnetcorerazor\",\n  \"astro\",\n  \"astro-markdown\",\n  \"blade\",\n  \"django-html\",\n  \"edge\",\n  \"ejs\",\n  \"erb\",\n  \"gohtml\",\n  \"GoHTML\",\n  \"gohtmltmpl\",\n  \"haml\",\n  \"handlebars\",\n  \"hbs\",\n  \"html\",\n  \"HTML (Eex)\",\n  \"HTML (EEx)\",\n  \"html-eex\",\n  \"htmldjango\",\n  \"jade\",\n  \"leaf\",\n  \"liquid\",\n  \"markdown\",\n  \"mdx\",\n  \"mustache\",\n  \"njk\",\n  \"nunjucks\",\n  \"phoenix-heex\",\n  \"php\",\n  \"razor\",\n  \"slim\",\n  \"surface\",\n  \"twig\"\n];\nvar cssLanguages = [\n  \"css\",\n  \"less\",\n  \"postcss\",\n  \"sass\",\n  \"scss\",\n  \"stylus\",\n  \"sugarss\",\n  \"tailwindcss\"\n];\nvar jsLanguages = [\n  \"javascript\",\n  \"javascriptreact\",\n  \"reason\",\n  \"rescript\",\n  \"typescript\",\n  \"typescriptreact\",\n  \"glimmer-js\",\n  \"glimmer-ts\"\n];\nvar specialLanguages = [\"vue\", \"svelte\"];\nvar languages = [...cssLanguages, ...htmlLanguages, ...jsLanguages, ...specialLanguages];\nvar semicolonlessLanguages = [\"sass\", \"sugarss\", \"stylus\"];\nfunction isSemicolonlessCssLanguage(languageId, userLanguages = {}) {\n  return semicolonlessLanguages.includes(languageId) || semicolonlessLanguages.includes(userLanguages[languageId]);\n}\n\n// src/util/find.ts\nimport lineColumn from \"line-column\";\n\n// src/util/js.ts\nfunction isJsDoc(state, doc) {\n  const userJsLanguages = Object.keys(state.editor.userLanguages).filter(\n    (lang) => jsLanguages.includes(state.editor.userLanguages[lang])\n  );\n  return [...jsLanguages, ...userJsLanguages].indexOf(doc.languageId) !== -1;\n}\nfunction isJsxContext(state, doc, position) {\n  let str = doc.getText({\n    start: { line: 0, character: 0 },\n    end: position\n  });\n  let boundaries = getLanguageBoundaries(state, doc, str);\n  return boundaries ? [\"jsx\", \"tsx\"].includes(boundaries[boundaries.length - 1].type) : false;\n}\n\n// src/util/css.ts\nfunction getCssLanguages(state) {\n  const userCssLanguages = Object.keys(state.editor.userLanguages).filter(\n    (lang) => cssLanguages.includes(state.editor.userLanguages[lang])\n  );\n  return [...cssLanguages, ...userCssLanguages];\n}\nfunction isCssLanguage(state, lang) {\n  return getCssLanguages(state).indexOf(lang) !== -1;\n}\nfunction isCssDoc(state, doc) {\n  return isCssLanguage(state, doc.languageId);\n}\nfunction isCssContext(state, doc, position) {\n  if (isCssDoc(state, doc)) {\n    return true;\n  }\n  if (isHtmlDoc(state, doc) || isVueDoc(doc) || isSvelteDoc(doc) || isJsDoc(state, doc)) {\n    let str = doc.getText({\n      start: { line: 0, character: 0 },\n      end: position\n    });\n    let boundaries = getLanguageBoundaries(state, doc, str);\n    return boundaries ? boundaries[boundaries.length - 1].type === \"css\" : false;\n  }\n  return false;\n}\n\n// src/util/isWithinRange.ts\nfunction isWithinRange(position, range) {\n  if (position.line === range.start.line && position.character >= range.start.character) {\n    if (position.line === range.end.line && position.character > range.end.character) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  if (position.line === range.end.line && position.character <= range.end.character) {\n    if (position.line === range.start.line && position.character < range.end.character) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  if (position.line > range.start.line && position.line < range.end.line) {\n    return true;\n  }\n  return false;\n}\n\n// src/util/lexers.ts\nimport moo from \"moo\";\n\n// src/util/lazy.ts\nvar lazy = (getter) => {\n  let evaluated = false;\n  let _res = null;\n  const res = function() {\n    if (evaluated)\n      return _res;\n    _res = getter.apply(this, arguments);\n    evaluated = true;\n    return _res;\n  };\n  res.isLazy = true;\n  return res;\n};\n\n// src/util/lexers.ts\nvar classAttributeStates = () => ({\n  doubleClassList: {\n    arb: { match: new RegExp(\"(?<!\\\\\\\\)\\\\[\"), push: \"arbitrary\" },\n    lbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\{\"), push: \"interpBrace\" },\n    rbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\}\"), pop: 1 },\n    end: { match: new RegExp('(?<!\\\\\\\\)\"'), pop: 1 },\n    classlist: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  },\n  singleClassList: {\n    lbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\{\"), push: \"interpBrace\" },\n    rbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\}\"), pop: 1 },\n    end: { match: new RegExp(\"(?<!\\\\\\\\)'\"), pop: 1 },\n    classlist: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  },\n  tickClassList: {\n    lbrace: { match: new RegExp(\"(?<=(?<!\\\\\\\\)\\\\$)\\\\{\"), push: \"interpBrace\" },\n    rbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\}\"), pop: 1 },\n    end: { match: new RegExp(\"(?<!\\\\\\\\)`\"), pop: 1 },\n    classlist: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  },\n  interpBrace: {\n    startSingle: { match: new RegExp(\"(?<!\\\\\\\\)'\"), push: \"singleClassList\" },\n    startDouble: { match: new RegExp('(?<!\\\\\\\\)\"'), push: \"doubleClassList\" },\n    startTick: { match: new RegExp(\"(?<!\\\\\\\\)`\"), push: \"tickClassList\" },\n    lbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\{\"), push: \"interpBrace\" },\n    rbrace: { match: new RegExp(\"(?<!\\\\\\\\)\\\\}\"), pop: 1 },\n    text: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  },\n  interpSingle: {\n    startDouble: { match: new RegExp('(?<!\\\\\\\\)\"'), push: \"doubleClassList\" },\n    startTick: { match: new RegExp(\"(?<!\\\\\\\\)`\"), push: \"tickClassList\" },\n    single: { match: new RegExp(\"(?<!\\\\\\\\)'\"), pop: 1 },\n    text: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  },\n  interpDouble: {\n    startSingle: { match: new RegExp(\"(?<!\\\\\\\\)'\"), push: \"singleClassList\" },\n    startTick: { match: new RegExp(\"(?<!\\\\\\\\)`\"), push: \"tickClassList\" },\n    double: { match: new RegExp('(?<!\\\\\\\\)\"'), pop: 1 },\n    text: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  },\n  arbitrary: {\n    arb: { match: new RegExp(\"(?<!\\\\\\\\)\\\\]\"), pop: 1 },\n    space: { match: /\\s/, pop: 1, lineBreaks: true },\n    arb2: { match: new RegExp(\"[\\\\s\\\\S]\"), lineBreaks: true }\n  }\n});\nvar simpleClassAttributeStates = {\n  main: {\n    start: { match: '\"', push: \"doubleClassList\" }\n  },\n  doubleClassList: {\n    end: { match: '\"', pop: 1 },\n    classlist: { match: /[\\s\\S]/, lineBreaks: true }\n  }\n};\nvar getClassAttributeLexer = lazy(() => {\n  let supportsNegativeLookbehind = true;\n  try {\n    new RegExp(\"(?<!)\");\n  } catch (_) {\n    supportsNegativeLookbehind = false;\n  }\n  if (supportsNegativeLookbehind) {\n    return moo.states({\n      main: {\n        start1: { match: '\"', push: \"doubleClassList\" },\n        start2: { match: \"'\", push: \"singleClassList\" },\n        start3: { match: \"{\", push: \"interpBrace\" }\n      },\n      ...classAttributeStates()\n    });\n  }\n  return moo.states(simpleClassAttributeStates);\n});\nvar getComputedClassAttributeLexer = lazy(() => {\n  let supportsNegativeLookbehind = true;\n  try {\n    new RegExp(\"(?<!)\");\n  } catch (_) {\n    supportsNegativeLookbehind = false;\n  }\n  if (supportsNegativeLookbehind) {\n    return moo.states({\n      main: {\n        lbrace: { match: \"{\", push: \"interpBrace\" },\n        single: { match: \"'\", push: \"interpSingle\" },\n        double: { match: '\"', push: \"interpDouble\" }\n      },\n      ...classAttributeStates()\n    });\n  }\n  return moo.states(simpleClassAttributeStates);\n});\n\n// src/util/resolveRange.ts\nfunction resolveRange(range, relativeTo) {\n  return {\n    start: {\n      line: (relativeTo?.start.line || 0) + range.start.line,\n      character: (range.end.line === 0 ? relativeTo?.start.character || 0 : 0) + range.start.character\n    },\n    end: {\n      line: (relativeTo?.start.line || 0) + range.end.line,\n      character: (range.end.line === 0 ? relativeTo?.start.character || 0 : 0) + range.end.character\n    }\n  };\n}\n\n// src/util/doc.ts\nimport moo2 from \"moo\";\nfunction getTextWithoutComments(docOrText, type, range) {\n  let text2 = typeof docOrText === \"string\" ? docOrText : docOrText.getText(range);\n  if (type === \"js\" || type === \"jsx\") {\n    return getJsWithoutComments(text2);\n  }\n  if (type === \"css\") {\n    return text2.replace(/\\/\\*.*?\\*\\//gs, replace);\n  }\n  return text2.replace(/<!--.*?-->/gs, replace);\n}\nfunction replace(match) {\n  return match.replace(/./gs, (char) => char === \"\\n\" ? \"\\n\" : \" \");\n}\nvar jsLexer;\nfunction getJsWithoutComments(text2) {\n  if (!jsLexer) {\n    jsLexer = moo2.states({\n      main: {\n        commentLine: /\\/\\/.*?$/,\n        commentBlock: { match: /\\/\\*[^]*?\\*\\//, lineBreaks: true },\n        stringDouble: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        stringSingle: /'(?:[^'\\\\]|\\\\.)*'/,\n        stringBacktick: /`(?:[^`\\\\]|\\\\.)*`/,\n        other: { match: /[^]/, lineBreaks: true }\n      }\n    });\n  }\n  let str = \"\";\n  jsLexer.reset(text2);\n  for (let token of jsLexer) {\n    if (token.type === \"commentLine\") {\n      str += \" \".repeat(token.value.length);\n    } else if (token.type === \"commentBlock\") {\n      str += token.value.replace(/./g, \" \");\n    } else {\n      str += token.value;\n    }\n  }\n  return str;\n}\n\n// src/util/classes.ts\nfunction* customClassesIn({\n  text: text2,\n  filters,\n  cursor = null\n}) {\n  for (let filter of filters) {\n    let [containerPattern, classPattern] = Array.isArray(filter) ? filter : [filter];\n    let containerRegex = new RegExp(containerPattern, \"gd\");\n    let classRegex = classPattern ? new RegExp(classPattern, \"gd\") : void 0;\n    for (let match of matchesIn(text2, containerRegex, classRegex, cursor)) {\n      yield match;\n    }\n  }\n}\nfunction* matchesIn(text2, containerRegex, classRegex, cursor) {\n  for (let containerMatch of text2.matchAll(containerRegex)) {\n    if (containerMatch[1] === void 0) {\n      console.warn(`Regex /${containerRegex.source}/ must have exactly one capture group`);\n      continue;\n    }\n    const matchStart = containerMatch.indices[1][0];\n    const matchEnd = matchStart + containerMatch[1].length;\n    if (cursor !== null && (cursor < matchStart || cursor > matchEnd)) {\n      continue;\n    }\n    if (!classRegex) {\n      yield {\n        classList: cursor !== null ? containerMatch[1].slice(0, cursor - matchStart) : containerMatch[1],\n        range: [matchStart, matchEnd]\n      };\n      continue;\n    }\n    for (let classMatch of containerMatch[1].matchAll(classRegex)) {\n      if (classMatch[1] === void 0) {\n        console.warn(`Regex /${classRegex.source}/ must have exactly one capture group`);\n        continue;\n      }\n      const classMatchStart = matchStart + classMatch.indices[1][0];\n      const classMatchEnd = classMatchStart + classMatch[1].length;\n      if (cursor !== null && (cursor < classMatchStart || cursor > classMatchEnd)) {\n        continue;\n      }\n      yield {\n        classList: cursor !== null ? classMatch[1].slice(0, cursor - classMatchStart) : classMatch[1],\n        range: [classMatchStart, classMatchEnd]\n      };\n    }\n  }\n}\n\n// src/util/find.ts\nfunction findAll(re, str) {\n  let match;\n  let matches = [];\n  while ((match = re.exec(str)) !== null) {\n    matches.push({ ...match });\n  }\n  return matches;\n}\nfunction findLast(re, str) {\n  const matches = findAll(re, str);\n  if (matches.length === 0) {\n    return null;\n  }\n  return matches[matches.length - 1];\n}\nfunction getClassNamesInClassList({ classList, range, important }, blocklist) {\n  const parts = classList.split(/(\\s+)/);\n  const names = [];\n  let index = 0;\n  for (let i = 0; i < parts.length; i++) {\n    if (i % 2 === 0 && !blocklist.includes(parts[i])) {\n      const start = indexToPosition(classList, index);\n      const end = indexToPosition(classList, index + parts[i].length);\n      names.push({\n        className: parts[i],\n        classList: {\n          classList,\n          range,\n          important\n        },\n        relativeRange: {\n          start,\n          end\n        },\n        range: {\n          start: {\n            line: range.start.line + start.line,\n            character: (end.line === 0 ? range.start.character : 0) + start.character\n          },\n          end: {\n            line: range.start.line + end.line,\n            character: (end.line === 0 ? range.start.character : 0) + end.character\n          }\n        }\n      });\n    }\n    index += parts[i].length;\n  }\n  return names;\n}\nasync function findClassNamesInRange(state, doc, range, mode, includeCustom = true) {\n  const classLists = await findClassListsInRange(state, doc, range, mode, includeCustom);\n  return flatten(\n    classLists.map((classList) => getClassNamesInClassList(classList, state.blocklist))\n  );\n}\nfunction findClassListsInCssRange(state, doc, range, lang) {\n  const text2 = getTextWithoutComments(doc, \"css\", range);\n  let regex = isSemicolonlessCssLanguage(lang ?? doc.languageId, state.editor?.userLanguages) ? /(@apply\\s+)(?<classList>[^}\\r\\n]+?)(?<important>\\s*!important)?(?:\\r|\\n|}|$)/g : /(@apply\\s+)(?<classList>[^;}]+?)(?<important>\\s*!important)?\\s*[;}]/g;\n  const matches = findAll(regex, text2);\n  const globalStart = range ? range.start : { line: 0, character: 0 };\n  return matches.map((match) => {\n    const start = indexToPosition(text2, match.index + match[1].length);\n    const end = indexToPosition(text2, match.index + match[1].length + match.groups.classList.length);\n    return {\n      classList: match.groups.classList,\n      important: Boolean(match.groups.important),\n      range: {\n        start: {\n          line: globalStart.line + start.line,\n          character: (end.line === 0 ? globalStart.character : 0) + start.character\n        },\n        end: {\n          line: globalStart.line + end.line,\n          character: (end.line === 0 ? globalStart.character : 0) + end.character\n        }\n      }\n    };\n  });\n}\nasync function findCustomClassLists(state, doc, range) {\n  const settings = await state.editor.getConfiguration(doc.uri);\n  const regexes = settings.tailwindCSS.experimental.classRegex;\n  if (!Array.isArray(regexes) || regexes.length === 0)\n    return [];\n  const text2 = doc.getText(range ? { ...range, start: doc.positionAt(0) } : void 0);\n  const result = [];\n  try {\n    for (let match of customClassesIn({ text: text2, filters: regexes })) {\n      result.push({\n        classList: match.classList,\n        range: {\n          start: doc.positionAt(match.range[0]),\n          end: doc.positionAt(match.range[1])\n        }\n      });\n    }\n  } catch (err) {\n    console.log(JSON.stringify({ text: text2, filters: regexes }));\n    throw new Error(\"Failed to parse custom class regex\");\n  }\n  return result;\n}\nfunction matchClassAttributes(text2, attributes) {\n  const attrs = attributes.filter((x) => typeof x === \"string\").flatMap((a) => [a, `\\\\[${a}\\\\]`]);\n  const re = /(?:\\s|:|\\()(ATTRS)\\s*=\\s*['\"`{]/;\n  return findAll(new RegExp(re.source.replace(\"ATTRS\", attrs.join(\"|\")), \"gi\"), text2);\n}\nasync function findClassListsInHtmlRange(state, doc, type, range) {\n  const text2 = getTextWithoutComments(doc, type, range);\n  const matches = matchClassAttributes(\n    text2,\n    (await state.editor.getConfiguration(doc.uri)).tailwindCSS.classAttributes\n  );\n  const result = [];\n  matches.forEach((match) => {\n    const subtext = text2.substr(match.index + match[0].length - 1);\n    let lexer = match[0][0] === \":\" || match[1].startsWith(\"[\") && match[1].endsWith(\"]\") ? getComputedClassAttributeLexer() : getClassAttributeLexer();\n    lexer.reset(subtext);\n    let classLists = [];\n    let token;\n    let currentClassList;\n    try {\n      for (let token2 of lexer) {\n        if (token2.type === \"classlist\" || token2.type.startsWith(\"arb\")) {\n          if (currentClassList) {\n            currentClassList.value += token2.value;\n          } else {\n            currentClassList = {\n              value: token2.value,\n              offset: token2.offset\n            };\n          }\n        } else {\n          if (currentClassList) {\n            classLists.push({\n              value: currentClassList.value,\n              offset: currentClassList.offset\n            });\n          }\n          currentClassList = void 0;\n        }\n      }\n    } catch (_) {\n    }\n    if (currentClassList) {\n      classLists.push({\n        value: currentClassList.value,\n        offset: currentClassList.offset\n      });\n    }\n    result.push(\n      ...classLists.map(({ value, offset }) => {\n        if (value.trim() === \"\") {\n          return null;\n        }\n        const before = value.match(/^\\s*/);\n        const beforeOffset = before === null ? 0 : before[0].length;\n        const after = value.match(/\\s*$/);\n        const afterOffset = after === null ? 0 : -after[0].length;\n        const start = indexToPosition(\n          text2,\n          match.index + match[0].length - 1 + offset + beforeOffset\n        );\n        const end = indexToPosition(\n          text2,\n          match.index + match[0].length - 1 + offset + value.length + afterOffset\n        );\n        return {\n          classList: value.substr(beforeOffset, value.length + afterOffset),\n          range: {\n            start: {\n              line: (range?.start.line || 0) + start.line,\n              character: (end.line === 0 ? range?.start.character || 0 : 0) + start.character\n            },\n            end: {\n              line: (range?.start.line || 0) + end.line,\n              character: (end.line === 0 ? range?.start.character || 0 : 0) + end.character\n            }\n          }\n        };\n      }).filter((x) => x !== null)\n    );\n  });\n  return result;\n}\nasync function findClassListsInRange(state, doc, range, mode, includeCustom = true) {\n  let classLists = [];\n  if (mode === \"css\") {\n    classLists = findClassListsInCssRange(state, doc, range);\n  } else if (mode === \"html\" || mode === \"jsx\") {\n    classLists = await findClassListsInHtmlRange(state, doc, mode, range);\n  }\n  return dedupeByRange([\n    ...classLists,\n    ...includeCustom ? await findCustomClassLists(state, doc, range) : []\n  ]);\n}\nasync function findClassListsInDocument(state, doc) {\n  if (isCssDoc(state, doc)) {\n    return findClassListsInCssRange(state, doc);\n  }\n  let boundaries = getLanguageBoundaries(state, doc);\n  if (!boundaries)\n    return [];\n  return dedupeByRange(\n    flatten([\n      ...await Promise.all(\n        boundaries.filter((b) => b.type === \"html\" || b.type === \"jsx\").map(\n          ({ type, range }) => findClassListsInHtmlRange(state, doc, type === \"html\" ? \"html\" : \"jsx\", range)\n        )\n      ),\n      ...boundaries.filter((b) => b.type === \"css\").map(({ range, lang }) => findClassListsInCssRange(state, doc, range, lang)),\n      await findCustomClassLists(state, doc)\n    ])\n  );\n}\nfunction findHelperFunctionsInDocument(state, doc) {\n  if (isCssDoc(state, doc)) {\n    return findHelperFunctionsInRange(doc);\n  }\n  let boundaries = getLanguageBoundaries(state, doc);\n  if (!boundaries)\n    return [];\n  return flatten(\n    boundaries.filter((b) => b.type === \"css\").map(({ range }) => findHelperFunctionsInRange(doc, range))\n  );\n}\nfunction getFirstCommaIndex(str) {\n  let quoteChar;\n  for (let i = 0; i < str.length; i++) {\n    let char = str[i];\n    if (char === \",\" && !quoteChar) {\n      return i;\n    }\n    if (!quoteChar && (char === '\"' || char === \"'\")) {\n      quoteChar = char;\n    } else if (char === quoteChar) {\n      quoteChar = void 0;\n    }\n  }\n  return null;\n}\nfunction findHelperFunctionsInRange(doc, range) {\n  const text2 = getTextWithoutComments(doc, \"css\", range);\n  let matches = findAll(\n    /(?<prefix>[\\s:;/*(){}])(?<helper>config|theme)(?<innerPrefix>\\(\\s*)(?<path>[^)]*?)\\s*\\)/g,\n    text2\n  );\n  return matches.map((match) => {\n    let quotesBefore = \"\";\n    let path = match.groups.path;\n    let commaIndex = getFirstCommaIndex(path);\n    if (commaIndex !== null) {\n      path = path.slice(0, commaIndex).trimEnd();\n    }\n    path = path.replace(/['\"]+$/, \"\").replace(/^['\"]+/, (m) => {\n      quotesBefore = m;\n      return \"\";\n    });\n    let matches2 = path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/);\n    if (matches2) {\n      path = matches2[1];\n    }\n    path = path.replace(/['\"]*\\s*$/, \"\");\n    let startIndex = match.index + match.groups.prefix.length + match.groups.helper.length + match.groups.innerPrefix.length;\n    return {\n      helper: match.groups.helper === \"theme\" ? \"theme\" : \"config\",\n      path,\n      ranges: {\n        full: resolveRange(\n          {\n            start: indexToPosition(text2, startIndex),\n            end: indexToPosition(text2, startIndex + match.groups.path.length)\n          },\n          range\n        ),\n        path: resolveRange(\n          {\n            start: indexToPosition(text2, startIndex + quotesBefore.length),\n            end: indexToPosition(text2, startIndex + quotesBefore.length + path.length)\n          },\n          range\n        )\n      }\n    };\n  });\n}\nfunction indexToPosition(str, index) {\n  const { line, col } = lineColumn(str + \"\\n\").fromIndex(index) ?? { line: 1, col: 1 };\n  return { line: line - 1, character: col - 1 };\n}\nasync function findClassNameAtPosition(state, doc, position) {\n  let classNames = [];\n  const positionOffset = doc.offsetAt(position);\n  const searchRange = {\n    start: doc.positionAt(Math.max(0, positionOffset - 2e3)),\n    end: doc.positionAt(positionOffset + 2e3)\n  };\n  if (isVueDoc(doc)) {\n    let boundaries = getLanguageBoundaries(state, doc);\n    let groups = await Promise.all(\n      boundaries.map(async ({ type, range, lang }) => {\n        if (type === \"css\") {\n          return findClassListsInCssRange(state, doc, range, lang);\n        }\n        if (type === \"html\") {\n          return await findClassListsInHtmlRange(state, doc, \"html\", range);\n        }\n        if (type === \"jsx\") {\n          return await findClassListsInHtmlRange(state, doc, \"jsx\", range);\n        }\n        return [];\n      })\n    );\n    classNames = dedupeByRange(flatten(groups)).flatMap(\n      (classList) => getClassNamesInClassList(classList, state.blocklist)\n    );\n  } else if (isCssContext(state, doc, position)) {\n    classNames = await findClassNamesInRange(state, doc, searchRange, \"css\");\n  } else if (isHtmlContext(state, doc, position)) {\n    classNames = await findClassNamesInRange(state, doc, searchRange, \"html\");\n  } else if (isJsxContext(state, doc, position)) {\n    classNames = await findClassNamesInRange(state, doc, searchRange, \"jsx\");\n  } else {\n    classNames = await findClassNamesInRange(state, doc, searchRange);\n  }\n  if (classNames.length === 0) {\n    return null;\n  }\n  const className = classNames.find(({ range }) => isWithinRange(position, range));\n  if (!className)\n    return null;\n  return className;\n}\n\n// src/util/getLanguageBoundaries.ts\nimport moo3 from \"moo\";\nimport Cache from \"tmp-cache\";\nvar htmlScriptTypes = [\n  // https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html#option-1-use-script-tag\n  \"text/html\",\n  // https://vuejs.org/guide/essentials/component-basics.html#dom-template-parsing-caveats\n  \"text/x-template\",\n  // https://github.com/tailwindlabs/tailwindcss-intellisense/issues/722\n  \"text/x-handlebars-template\"\n];\nvar jsxScriptTypes = [\n  // https://github.com/tailwindlabs/tailwindcss-intellisense/issues/906\n  \"text/babel\"\n];\nvar text = { text: { match: /[^]/, lineBreaks: true } };\nvar states = {\n  main: {\n    cssBlockStart: { match: /<style(?=[>\\s])/, push: \"cssBlock\" },\n    jsBlockStart: { match: \"<script\", push: \"jsBlock\" },\n    ...text\n  },\n  cssBlock: {\n    styleStart: { match: \">\", next: \"style\" },\n    cssBlockEnd: { match: \"/>\", pop: 1 },\n    attrStartDouble: { match: '\"', push: \"attrDouble\" },\n    attrStartSingle: { match: \"'\", push: \"attrSingle\" },\n    interp: { match: \"{\", push: \"interp\" },\n    ...text\n  },\n  jsBlock: {\n    scriptStart: { match: \">\", next: \"script\" },\n    jsBlockEnd: { match: \"/>\", pop: 1 },\n    langAttrStartDouble: { match: 'lang=\"', push: \"langAttrDouble\" },\n    langAttrStartSingle: { match: \"lang='\", push: \"langAttrSingle\" },\n    typeAttrStartDouble: { match: 'type=\"', push: \"typeAttrDouble\" },\n    typeAttrStartSingle: { match: \"type='\", push: \"typeAttrSingle\" },\n    attrStartDouble: { match: '\"', push: \"attrDouble\" },\n    attrStartSingle: { match: \"'\", push: \"attrSingle\" },\n    interp: { match: \"{\", push: \"interp\" },\n    ...text\n  },\n  interp: {\n    interp: { match: \"{\", push: \"interp\" },\n    end: { match: \"}\", pop: 1 },\n    ...text\n  },\n  langAttrDouble: {\n    langAttrEnd: { match: '\"', pop: 1 },\n    lang: { match: /[^\"]+/, lineBreaks: true }\n  },\n  langAttrSingle: {\n    langAttrEnd: { match: \"'\", pop: 1 },\n    lang: { match: /[^']+/, lineBreaks: true }\n  },\n  typeAttrDouble: {\n    langAttrEnd: { match: '\"', pop: 1 },\n    type: { match: /[^\"]+/, lineBreaks: true }\n  },\n  typeAttrSingle: {\n    langAttrEnd: { match: \"'\", pop: 1 },\n    type: { match: /[^']+/, lineBreaks: true }\n  },\n  attrDouble: {\n    attrEnd: { match: '\"', pop: 1 },\n    ...text\n  },\n  attrSingle: {\n    attrEnd: { match: \"'\", pop: 1 },\n    ...text\n  },\n  style: {\n    cssBlockEnd: { match: /<\\/style\\s*>/, pop: 1 },\n    ...text\n  },\n  script: {\n    jsBlockEnd: { match: /<\\/script\\s*>/, pop: 1 },\n    ...text\n  }\n};\nvar vueStates = {\n  ...states,\n  main: {\n    htmlBlockStart: { match: \"<template\", push: \"htmlBlock\" },\n    ...states.main\n  },\n  cssBlock: {\n    langAttrStartDouble: { match: 'lang=\"', push: \"langAttrDouble\" },\n    langAttrStartSingle: { match: \"lang='\", push: \"langAttrSingle\" },\n    ...states.cssBlock\n  },\n  htmlBlock: {\n    htmlStart: { match: \">\", next: \"html\" },\n    htmlBlockEnd: { match: \"/>\", pop: 1 },\n    attrStartDouble: { match: '\"', push: \"attrDouble\" },\n    attrStartSingle: { match: \"'\", push: \"attrSingle\" },\n    interp: { match: \"{\", push: \"interp\" },\n    ...text\n  },\n  html: {\n    htmlBlockEnd: { match: \"</template>\", pop: 1 },\n    nestedBlockStart: { match: \"<template\", push: \"nestedBlock\" },\n    ...text\n  },\n  nestedBlock: {\n    nestedStart: { match: \">\", next: \"nested\" },\n    nestedBlockEnd: { match: \"/>\", pop: 1 },\n    ...text\n  },\n  nested: {\n    nestedBlockEnd: { match: \"</template>\", pop: 1 },\n    nestedBlockStart: { match: \"<template\", push: \"nestedBlock\" },\n    ...text\n  }\n};\nvar defaultLexer = moo3.states(states);\nvar vueLexer = moo3.states(vueStates);\nvar cache = new Cache({ max: 25, maxAge: 1e3 });\nfunction getLanguageBoundaries(state, doc, text2 = doc.getText()) {\n  let cacheKey = `${doc.languageId}:${text2}`;\n  let cachedBoundaries = cache.get(cacheKey);\n  if (cachedBoundaries !== void 0) {\n    return cachedBoundaries;\n  }\n  let isJs = isJsDoc(state, doc);\n  let defaultType = isVueDoc(doc) ? \"none\" : isHtmlDoc(state, doc) || isSvelteDoc(doc) ? \"html\" : isJs ? \"jsx\" : null;\n  if (defaultType === null) {\n    cache.set(cacheKey, null);\n    return null;\n  }\n  text2 = getTextWithoutComments(text2, isJs ? \"js\" : \"html\");\n  let lexer = defaultType === \"none\" ? vueLexer : defaultLexer;\n  lexer.reset(text2);\n  let type = defaultType;\n  let boundaries = [\n    { type: defaultType, range: { start: { line: 0, character: 0 }, end: void 0 } }\n  ];\n  let offset = 0;\n  try {\n    for (let token of lexer) {\n      if (!token.type.startsWith(\"nested\")) {\n        if (token.type.endsWith(\"BlockStart\")) {\n          let position = indexToPosition(text2, offset);\n          if (!boundaries[boundaries.length - 1].range.end) {\n            boundaries[boundaries.length - 1].range.end = position;\n          }\n          type = token.type.replace(/BlockStart$/, \"\");\n          boundaries.push({ type, range: { start: position, end: void 0 } });\n        } else if (token.type.endsWith(\"BlockEnd\")) {\n          let position = indexToPosition(text2, offset);\n          boundaries[boundaries.length - 1].range.end = position;\n          boundaries.push({ type: defaultType, range: { start: position, end: void 0 } });\n        } else if (token.type === \"lang\") {\n          boundaries[boundaries.length - 1].type = token.text;\n        } else if (token.type === \"type\" && htmlScriptTypes.includes(token.text)) {\n          boundaries[boundaries.length - 1].type = \"html\";\n        } else if (token.type === \"type\" && jsxScriptTypes.includes(token.text)) {\n          boundaries[boundaries.length - 1].type = \"jsx\";\n        }\n      }\n      offset += token.text.length;\n    }\n  } catch {\n    cache.set(cacheKey, null);\n    return null;\n  }\n  if (!boundaries[boundaries.length - 1].range.end) {\n    boundaries[boundaries.length - 1].range.end = indexToPosition(text2, offset);\n  }\n  cache.set(cacheKey, boundaries);\n  for (let boundary of boundaries) {\n    if (boundary.type === \"css\")\n      continue;\n    if (!isCssLanguage(state, boundary.type))\n      continue;\n    boundary.lang = boundary.type;\n    boundary.type = \"css\";\n  }\n  return boundaries;\n}\n\n// src/util/html.ts\nfunction isHtmlDoc(state, doc) {\n  const userHtmlLanguages = Object.keys(state.editor.userLanguages).filter(\n    (lang) => htmlLanguages.includes(state.editor.userLanguages[lang])\n  );\n  return [...htmlLanguages, ...userHtmlLanguages].indexOf(doc.languageId) !== -1;\n}\nfunction isVueDoc(doc) {\n  return doc.languageId === \"vue\";\n}\nfunction isSvelteDoc(doc) {\n  return doc.languageId === \"svelte\";\n}\nfunction isHtmlContext(state, doc, position) {\n  let str = doc.getText({\n    start: { line: 0, character: 0 },\n    end: position\n  });\n  let boundaries = getLanguageBoundaries(state, doc, str);\n  return boundaries ? boundaries[boundaries.length - 1].type === \"html\" : false;\n}\n\n// src/util/stringify.ts\nimport dlv3 from \"dlv\";\nimport escapeClassName from \"css.escape\";\nimport stringifyObject from \"stringify-object\";\nfunction stringifyConfigValue(x) {\n  if (isObject(x))\n    return `${Object.keys(x).length} values`;\n  if (typeof x === \"function\")\n    return \"\\u0192\";\n  if (typeof x === \"string\")\n    return x;\n  return stringifyObject(x, {\n    inlineCharacterLimit: Infinity,\n    singleQuotes: false,\n    transform: (obj, prop, originalResult) => {\n      if (typeof obj[prop] === \"function\") {\n        return \"\\u0192\";\n      }\n      return originalResult;\n    }\n  });\n}\nfunction stringifyCss(className, obj, settings) {\n  if (obj.__rule !== true && !Array.isArray(obj))\n    return null;\n  if (Array.isArray(obj)) {\n    const rules = obj.map((x) => stringifyCss(className, x, settings)).filter(Boolean);\n    if (rules.length === 0)\n      return null;\n    return rules.join(\"\\n\\n\");\n  }\n  let css = ``;\n  const indent = \" \".repeat(settings.editor.tabSize);\n  const context = dlv3(obj, \"__context\", []);\n  const props = Object.keys(removeMeta(obj));\n  if (props.length === 0)\n    return null;\n  for (let i = 0; i < context.length; i++) {\n    css += `${indent.repeat(i)}${context[i]} {\n`;\n  }\n  const indentStr = indent.repeat(context.length);\n  const decls = props.reduce((acc, curr, i) => {\n    const propStr = ensureArray(obj[curr]).map((val) => `${indentStr + indent}${curr}: ${val};`).join(\"\\n\");\n    return `${acc}${i === 0 ? \"\" : \"\\n\"}${propStr}`;\n  }, \"\");\n  css += `${indentStr}${augmentClassName(className, obj)} {\n${decls}\n${indentStr}}`;\n  for (let i = context.length - 1; i >= 0; i--) {\n    css += `${indent.repeat(i)}\n}`;\n  }\n  css = addEquivalents(css, settings.tailwindCSS);\n  return css;\n}\nfunction augmentClassName(className, obj) {\n  const pseudo = obj.__pseudo.join(\"\");\n  const scope = obj.__scope ? `${obj.__scope} ` : \"\";\n  return `${scope}.${escapeClassName(className)}${pseudo}`;\n}\n\n// src/util/screens.ts\nfunction isRawScreen(screen) {\n  return isObject(screen) && screen.raw !== void 0;\n}\nfunction stringifyScreen(screen) {\n  if (!screen)\n    return void 0;\n  if (typeof screen === \"string\")\n    return `@media (min-width: ${screen})`;\n  if (isRawScreen(screen)) {\n    return `@media ${screen.raw}`;\n  }\n  let str = (Array.isArray(screen) ? screen : [screen]).map((range) => {\n    return [\n      typeof range.min === \"string\" ? `(min-width: ${range.min})` : null,\n      typeof range.max === \"string\" ? `(max-width: ${range.max})` : null\n    ].filter(Boolean).join(\" and \");\n  }).join(\", \");\n  return str ? `@media ${str}` : void 0;\n}\n\n// src/util/braceLevel.ts\nfunction braceLevel(text2) {\n  let count = 0;\n  for (let i = text2.length - 1; i >= 0; i--) {\n    let char = text2.charCodeAt(i);\n    count += Number(\n      char === 123\n      /* { */\n    ) - Number(\n      char === 125\n      /* } */\n    );\n  }\n  return count;\n}\n\n// src/completionProvider.ts\nimport * as emmetHelper from \"vscode-emmet-helper-bundled\";\n\n// src/util/isValidLocationForEmmetAbbreviation.ts\nfunction isValidLocationForEmmetAbbreviation(document, abbreviationRange) {\n  const startAngle = \"<\";\n  const endAngle = \">\";\n  const escape = \"\\\\\";\n  const question = \"?\";\n  let start = { line: 0, character: 0 };\n  let textToBackTrack = document.getText({\n    start: {\n      line: start.line,\n      character: start.character\n    },\n    end: {\n      line: abbreviationRange.start.line,\n      character: abbreviationRange.start.character\n    }\n  });\n  if (textToBackTrack.length > 500) {\n    textToBackTrack = textToBackTrack.substr(textToBackTrack.length - 500);\n  }\n  if (!textToBackTrack.trim()) {\n    return true;\n  }\n  let valid = true;\n  let foundSpace = false;\n  let i = textToBackTrack.length - 1;\n  if (textToBackTrack[i] === startAngle) {\n    return false;\n  }\n  while (i >= 0) {\n    const char = textToBackTrack[i];\n    i--;\n    if (!foundSpace && /\\s/.test(char)) {\n      foundSpace = true;\n      continue;\n    }\n    if (char === question && textToBackTrack[i] === startAngle) {\n      i--;\n      continue;\n    }\n    if (/\\s/.test(char) && textToBackTrack[i] === startAngle) {\n      i--;\n      continue;\n    }\n    if (char !== startAngle && char !== endAngle) {\n      continue;\n    }\n    if (i >= 0 && textToBackTrack[i] === escape) {\n      i--;\n      continue;\n    }\n    if (char === endAngle) {\n      if (i >= 0 && textToBackTrack[i] === \"=\") {\n        continue;\n      } else {\n        break;\n      }\n    }\n    if (char === startAngle) {\n      valid = !foundSpace;\n      break;\n    }\n  }\n  return valid;\n}\n\n// src/util/naturalExpand.ts\nfunction naturalExpand(value, total) {\n  let length = typeof total === \"number\" ? total.toString().length : 8;\n  return (\"0\".repeat(length) + value).slice(-length);\n}\n\n// src/util/semver.ts\nimport semverGte from \"semver/functions/gte\";\nimport semverLte from \"semver/functions/lte\";\nfunction gte(v1, v2) {\n  if (v1.startsWith(\"0.0.0-insiders\")) {\n    return true;\n  }\n  return semverGte(v1, v2);\n}\n\n// src/util/docsUrl.ts\nfunction docsUrl(version, paths) {\n  let major = 0;\n  let url = \"https://tailwindcss-v0.netlify.app/docs/\";\n  if (gte(version, \"0.99.0\")) {\n    major = 1;\n    url = \"https://v1.tailwindcss.com/docs/\";\n  }\n  if (gte(version, \"1.99.0\")) {\n    major = 2;\n    url = \"https://tailwindcss.com/docs/\";\n  }\n  const path = Array.isArray(paths) ? paths[major] || paths[paths.length - 1] : paths;\n  return `${url}${path}`;\n}\n\n// src/util/getClassNameMeta.ts\nimport dlv4 from \"dlv\";\nfunction getClassNameMeta(state, classNameOrParts) {\n  const parts = Array.isArray(classNameOrParts) ? classNameOrParts : getClassNameParts(state, classNameOrParts);\n  if (!parts)\n    return null;\n  const info = dlv4(state.classNames.classNames, [...parts, \"__info\"]);\n  if (Array.isArray(info)) {\n    return info.map((i) => ({\n      source: i.__source,\n      pseudo: i.__pseudo,\n      scope: i.__scope,\n      context: i.__context\n    }));\n  }\n  return {\n    source: info.__source,\n    pseudo: info.__pseudo,\n    scope: info.__scope,\n    context: info.__context\n  };\n}\n\n// src/util/flagEnabled.ts\nimport dlv5 from \"dlv\";\nfunction flagEnabled(state, flag) {\n  if (state.featureFlags.future.includes(flag)) {\n    return state.config.future === \"all\" || dlv5(state.config, [\"future\", flag], false);\n  }\n  if (state.featureFlags.experimental.includes(flag)) {\n    return state.config.experimental === \"all\" || dlv5(state.config, [\"experimental\", flag], false);\n  }\n  return false;\n}\n\n// src/util/validateApply.ts\nfunction validateApply(state, classNameOrParts) {\n  if (state.jit) {\n    return { isApplyable: true };\n  }\n  const meta = getClassNameMeta(state, classNameOrParts);\n  if (!meta)\n    return null;\n  if (gte(state.version, \"2.0.0-alpha.1\") || flagEnabled(state, \"applyComplexClasses\")) {\n    return { isApplyable: true };\n  }\n  const className = Array.isArray(classNameOrParts) ? classNameOrParts.join(state.separator) : classNameOrParts;\n  let reason;\n  if (Array.isArray(meta)) {\n    reason = `'@apply' cannot be used with '${className}' because it is included in multiple rulesets.`;\n  } else if (meta.source !== \"utilities\") {\n    reason = `'@apply' cannot be used with '${className}' because it is not a utility.`;\n  } else if (meta.context && meta.context.length > 0) {\n    if (meta.context.length === 1) {\n      reason = `'@apply' cannot be used with '${className}' because it is nested inside of an at-rule ('${meta.context[0]}').`;\n    } else {\n      reason = `'@apply' cannot be used with '${className}' because it is nested inside of at-rules (${meta.context.map((c) => `'${c}'`).join(\", \")}).`;\n    }\n  } else if (meta.pseudo && meta.pseudo.length > 0) {\n    if (meta.pseudo.length === 1) {\n      reason = `'@apply' cannot be used with '${className}' because its definition includes a pseudo-selector ('${meta.pseudo[0]}')`;\n    } else {\n      reason = `'@apply' cannot be used with '${className}' because its definition includes pseudo-selectors (${meta.pseudo.map((p) => `'${p}'`).join(\", \")}).`;\n    }\n  }\n  if (reason) {\n    return { isApplyable: false, reason };\n  }\n  return { isApplyable: true };\n}\n\n// src/util/getVariantsFromClassName.ts\nfunction getVariantsFromClassName(state, className) {\n  let allVariants = state.variants.flatMap((variant) => {\n    if (variant.values.length) {\n      return variant.values.map(\n        (value) => value === \"DEFAULT\" ? variant.name : `${variant.name}${variant.hasDash ? \"-\" : \"\"}${value}`\n      );\n    }\n    return [variant.name];\n  });\n  let variants = /* @__PURE__ */ new Set();\n  let offset = 0;\n  let parts = splitAtTopLevelOnly(className, state.separator);\n  if (parts.length < 2) {\n    return { variants: Array.from(variants), offset };\n  }\n  parts = parts.filter(Boolean);\n  for (let part of parts) {\n    if (allVariants.includes(part) || state.jit && (part.includes(\"[\") && part.endsWith(\"]\") || part.includes(\"/\")) && generateRules(state, [`${part}${state.separator}[color:red]`]).rules.length > 0) {\n      variants.add(part);\n      offset += part.length + state.separator.length;\n      continue;\n    }\n    break;\n  }\n  return { variants: Array.from(variants), offset };\n}\nfunction splitAtTopLevelOnly(input, separator) {\n  let stack = [];\n  let parts = [];\n  let lastPos = 0;\n  for (let idx = 0; idx < input.length; idx++) {\n    let char = input[idx];\n    if (stack.length === 0 && char === separator[0]) {\n      if (separator.length === 1 || input.slice(idx, idx + separator.length) === separator) {\n        parts.push(input.slice(lastPos, idx));\n        lastPos = idx + separator.length;\n      }\n    }\n    if (char === \"(\" || char === \"[\" || char === \"{\") {\n      stack.push(char);\n    } else if (char === \")\" && stack[stack.length - 1] === \"(\" || char === \"]\" && stack[stack.length - 1] === \"[\" || char === \"}\" && stack[stack.length - 1] === \"{\") {\n      stack.pop();\n    }\n  }\n  parts.push(input.slice(lastPos));\n  return parts;\n}\n\n// src/completionProvider.ts\nimport * as postcss3 from \"postcss\";\nvar isUtil = (className) => Array.isArray(className.__info) ? className.__info.some((x) => x.__source === \"utilities\") : className.__info.__source === \"utilities\";\nfunction completionsFromClassList(state, classList, classListRange, rootFontSize, filter, context) {\n  let classNames = classList.split(/[\\s+]/);\n  const partialClassName = classNames[classNames.length - 1];\n  let sep = state.separator;\n  let parts = partialClassName.split(sep);\n  let subset;\n  let subsetKey = [];\n  let isSubset = false;\n  let replacementRange = {\n    ...classListRange,\n    start: {\n      ...classListRange.start,\n      character: classListRange.end.character - partialClassName.length\n    }\n  };\n  if (state.v4) {\n    let variantItem = function(item) {\n      return {\n        kind: 9,\n        data: {\n          ...state.completionItemData ?? {},\n          _type: \"variant\"\n        },\n        command: item.insertTextFormat === 2 ? void 0 : {\n          title: \"\",\n          command: \"editor.action.triggerSuggest\"\n        },\n        sortText: \"-\" + naturalExpand(variantOrder++),\n        ...item\n      };\n    };\n    let { variants: existingVariants, offset } = getVariantsFromClassName(state, partialClassName);\n    if (context && (context.triggerKind === 1 || context.triggerKind === 2 && context.triggerCharacter === \"/\") && partialClassName.includes(\"/\")) {\n      let modifiers;\n      let beforeSlash = partialClassName.split(\"/\").slice(0, -1).join(\"/\");\n      let baseClassName = beforeSlash.slice(offset);\n      modifiers = state.classList.find((cls) => Array.isArray(cls) && cls[0] === baseClassName)?.[1]?.modifiers;\n      if (modifiers) {\n        return withDefaults(\n          {\n            isIncomplete: false,\n            items: modifiers.map((modifier, index) => {\n              let className = `${beforeSlash}/${modifier}`;\n              let kind = CompletionItemKind.Constant;\n              let documentation;\n              const color = getColor(state, className);\n              if (color !== null) {\n                kind = CompletionItemKind.Color;\n                if (typeof color !== \"string\" && (color.alpha ?? 1) !== 0) {\n                  documentation = formatColor(color);\n                }\n              }\n              return {\n                label: className,\n                ...documentation ? { documentation } : {},\n                kind,\n                sortText: naturalExpand(index)\n              };\n            })\n          },\n          {\n            range: replacementRange,\n            data: state.completionItemData\n          },\n          state.editor.capabilities.itemDefaults\n        );\n      }\n    }\n    replacementRange.start.character += offset;\n    let important = partialClassName.substr(offset).endsWith(\"!\");\n    if (important) {\n      replacementRange.end.character -= 1;\n    }\n    let items = [];\n    let seenVariants = /* @__PURE__ */ new Set();\n    let variantOrder = 0;\n    for (let variant of state.variants) {\n      if (existingVariants.includes(variant.name)) {\n        continue;\n      }\n      if (seenVariants.has(variant.name)) {\n        continue;\n      }\n      seenVariants.add(variant.name);\n      if (variant.isArbitrary) {\n        items.push(\n          variantItem({\n            label: `${variant.name}${variant.hasDash ? \"-\" : \"\"}[]${sep}`,\n            insertTextFormat: 2,\n            textEditText: `${variant.name}${variant.hasDash ? \"-\" : \"\"}[\\${1}]${sep}\\${0}`\n            // command: {\n            //   title: '',\n            //   command: 'tailwindCSS.onInsertArbitraryVariantSnippet',\n            //   arguments: [variant.name, replacementRange],\n            // },\n          })\n        );\n      } else {\n        let shouldSortVariants = !gte(state.version, \"2.99.0\");\n        let resultingVariants = [...existingVariants, variant.name];\n        if (shouldSortVariants) {\n          let allVariants = state.variants.map(({ name }) => name);\n          resultingVariants = resultingVariants.sort(\n            (a, b) => allVariants.indexOf(b) - allVariants.indexOf(a)\n          );\n        }\n        let selectors = [];\n        try {\n          selectors = variant.selectors();\n        } catch (err) {\n          console.log(\"Error while trying to get selectors for variant\");\n          console.log({\n            variant,\n            err\n          });\n        }\n        if (selectors.length === 0) {\n          continue;\n        }\n        items.push(\n          variantItem({\n            label: `${variant.name}${sep}`,\n            detail: selectors.map((selector) => addPixelEquivalentsToMediaQuery(selector, rootFontSize)).join(\", \"),\n            textEditText: resultingVariants[resultingVariants.length - 1] + sep,\n            additionalTextEdits: shouldSortVariants && resultingVariants.length > 1 ? [\n              {\n                newText: resultingVariants.slice(0, resultingVariants.length - 1).join(sep) + sep,\n                range: {\n                  start: {\n                    ...classListRange.start,\n                    character: classListRange.end.character - partialClassName.length\n                  },\n                  end: {\n                    ...replacementRange.start,\n                    character: replacementRange.start.character\n                  }\n                }\n              }\n            ] : []\n          })\n        );\n      }\n      for (let value of variant.values ?? []) {\n        if (existingVariants.includes(`${variant.name}-${value}`)) {\n          continue;\n        }\n        if (seenVariants.has(`${variant.name}-${value}`)) {\n          continue;\n        }\n        seenVariants.add(`${variant.name}-${value}`);\n        let selectors = [];\n        try {\n          selectors = variant.selectors({ value });\n        } catch (err) {\n          console.log(\"Error while trying to get selectors for variant\");\n          console.log({\n            variant,\n            err\n          });\n        }\n        if (selectors.length === 0) {\n          continue;\n        }\n        items.push(\n          variantItem({\n            label: value === \"DEFAULT\" ? `${variant.name}${sep}` : `${variant.name}${variant.hasDash ? \"-\" : \"\"}${value}${sep}`,\n            detail: selectors.join(\", \")\n          })\n        );\n      }\n    }\n    return withDefaults(\n      {\n        isIncomplete: false,\n        items: items.concat(\n          state.classList.reduce((items2, [className, { color }], index) => {\n            if (state.blocklist?.includes([...existingVariants, className].join(state.separator))) {\n              return items2;\n            }\n            let kind = color ? CompletionItemKind.Color : CompletionItemKind.Constant;\n            let documentation;\n            if (color && typeof color !== \"string\") {\n              documentation = formatColor(color);\n            }\n            items2.push({\n              label: className,\n              kind,\n              ...documentation ? { documentation } : {},\n              sortText: naturalExpand(index, state.classList.length)\n            });\n            return items2;\n          }, [])\n        )\n      },\n      {\n        data: {\n          ...state.completionItemData ?? {},\n          ...important ? { important } : {},\n          variants: existingVariants\n        },\n        range: replacementRange\n      },\n      state.editor.capabilities.itemDefaults\n    );\n  }\n  if (state.jit) {\n    let { variants: existingVariants, offset } = getVariantsFromClassName(state, partialClassName);\n    if (context && (context.triggerKind === 1 || context.triggerKind === 2 && context.triggerCharacter === \"/\") && partialClassName.includes(\"/\")) {\n      let modifiers;\n      let beforeSlash = partialClassName.split(\"/\").slice(0, -1).join(\"/\");\n      if (state.classListContainsMetadata) {\n        let baseClassName = beforeSlash.slice(offset);\n        modifiers = state.classList.find(\n          (cls) => Array.isArray(cls) && cls[0] === baseClassName\n        )?.[1]?.modifiers;\n      } else {\n        let testClass = beforeSlash + \"/[0]\";\n        let { rules } = generateRules(state, [testClass]);\n        if (rules.length > 0) {\n          let opacities = dlv6(state.config, \"theme.opacity\", {});\n          if (!isObject(opacities)) {\n            opacities = {};\n          }\n          modifiers = Object.keys(opacities);\n        }\n      }\n      if (modifiers) {\n        return withDefaults(\n          {\n            isIncomplete: false,\n            items: modifiers.map((modifier, index) => {\n              let className = `${beforeSlash}/${modifier}`;\n              let kind = CompletionItemKind.Constant;\n              let documentation;\n              const color = getColor(state, className);\n              if (color !== null) {\n                kind = CompletionItemKind.Color;\n                if (typeof color !== \"string\" && (color.alpha ?? 1) !== 0) {\n                  documentation = formatColor(color);\n                }\n              }\n              return {\n                label: className,\n                ...documentation ? { documentation } : {},\n                kind,\n                sortText: naturalExpand(index)\n              };\n            })\n          },\n          {\n            range: replacementRange,\n            data: state.completionItemData\n          },\n          state.editor.capabilities.itemDefaults\n        );\n      }\n    }\n    replacementRange.start.character += offset;\n    let important = partialClassName.substr(offset).startsWith(\"!\");\n    if (important) {\n      replacementRange.start.character += 1;\n    }\n    let items = [];\n    let seenVariants = /* @__PURE__ */ new Set();\n    if (!important) {\n      let variantItem = function(item) {\n        return {\n          kind: 9,\n          data: {\n            ...state.completionItemData ?? {},\n            _type: \"variant\"\n          },\n          command: item.insertTextFormat === 2 ? void 0 : {\n            title: \"\",\n            command: \"editor.action.triggerSuggest\"\n          },\n          sortText: \"-\" + naturalExpand(variantOrder++),\n          ...item\n        };\n      };\n      let variantOrder = 0;\n      for (let variant of state.variants) {\n        if (existingVariants.includes(variant.name)) {\n          continue;\n        }\n        if (seenVariants.has(variant.name)) {\n          continue;\n        }\n        seenVariants.add(variant.name);\n        if (variant.isArbitrary) {\n          items.push(\n            variantItem({\n              label: `${variant.name}${variant.hasDash ? \"-\" : \"\"}[]${sep}`,\n              insertTextFormat: 2,\n              textEditText: `${variant.name}${variant.hasDash ? \"-\" : \"\"}[\\${1}]${sep}\\${0}`\n              // command: {\n              //   title: '',\n              //   command: 'tailwindCSS.onInsertArbitraryVariantSnippet',\n              //   arguments: [variant.name, replacementRange],\n              // },\n            })\n          );\n        } else {\n          let shouldSortVariants = !gte(state.version, \"2.99.0\");\n          let resultingVariants = [...existingVariants, variant.name];\n          if (shouldSortVariants) {\n            let allVariants = state.variants.map(({ name }) => name);\n            resultingVariants = resultingVariants.sort(\n              (a, b) => allVariants.indexOf(b) - allVariants.indexOf(a)\n            );\n          }\n          items.push(\n            variantItem({\n              label: `${variant.name}${sep}`,\n              detail: variant.selectors().map((selector) => addPixelEquivalentsToMediaQuery(selector, rootFontSize)).join(\", \"),\n              textEditText: resultingVariants[resultingVariants.length - 1] + sep,\n              additionalTextEdits: shouldSortVariants && resultingVariants.length > 1 ? [\n                {\n                  newText: resultingVariants.slice(0, resultingVariants.length - 1).join(sep) + sep,\n                  range: {\n                    start: {\n                      ...classListRange.start,\n                      character: classListRange.end.character - partialClassName.length\n                    },\n                    end: {\n                      ...replacementRange.start,\n                      character: replacementRange.start.character\n                    }\n                  }\n                }\n              ] : []\n            })\n          );\n        }\n        for (let value of variant.values ?? []) {\n          if (existingVariants.includes(`${variant.name}-${value}`)) {\n            continue;\n          }\n          if (seenVariants.has(`${variant.name}-${value}`)) {\n            continue;\n          }\n          seenVariants.add(`${variant.name}-${value}`);\n          items.push(\n            variantItem({\n              label: value === \"DEFAULT\" ? `${variant.name}${sep}` : `${variant.name}${variant.hasDash ? \"-\" : \"\"}${value}${sep}`,\n              detail: variant.selectors({ value }).join(\", \")\n            })\n          );\n        }\n      }\n    }\n    if (state.classList) {\n      return withDefaults(\n        {\n          isIncomplete: false,\n          items: items.concat(\n            state.classList.reduce((items2, [className, { color }], index) => {\n              if (state.blocklist?.includes([...existingVariants, className].join(state.separator))) {\n                return items2;\n              }\n              let kind = color ? CompletionItemKind.Color : CompletionItemKind.Constant;\n              let documentation;\n              if (color && typeof color !== \"string\") {\n                documentation = formatColor(color);\n              }\n              items2.push({\n                label: className,\n                kind,\n                ...documentation ? { documentation } : {},\n                sortText: naturalExpand(index, state.classList.length)\n              });\n              return items2;\n            }, [])\n          )\n        },\n        {\n          data: {\n            ...state.completionItemData ?? {},\n            ...important ? { important } : {},\n            variants: existingVariants\n          },\n          range: replacementRange\n        },\n        state.editor.capabilities.itemDefaults\n      );\n    }\n    return withDefaults(\n      {\n        isIncomplete: false,\n        items: items.concat(\n          Object.keys(state.classNames.classNames).filter((className) => {\n            let item = state.classNames.classNames[className];\n            if (existingVariants.length === 0) {\n              return item.__info;\n            }\n            return item.__info && isUtil(item);\n          }).map((className, index, classNames2) => {\n            let kind = CompletionItemKind.Constant;\n            let documentation;\n            const color = getColor(state, className);\n            if (color !== null) {\n              kind = CompletionItemKind.Color;\n              if (typeof color !== \"string\" && (color.alpha ?? 1) !== 0) {\n                documentation = formatColor(color);\n              }\n            }\n            return {\n              label: className,\n              kind,\n              ...documentation ? { documentation } : {},\n              sortText: naturalExpand(index, classNames2.length)\n            };\n          })\n        ).filter((item) => {\n          if (item === null) {\n            return false;\n          }\n          if (filter && !filter(item)) {\n            return false;\n          }\n          return true;\n        })\n      },\n      {\n        range: replacementRange,\n        data: {\n          ...state.completionItemData ?? {},\n          variants: existingVariants,\n          ...important ? { important } : {}\n        }\n      },\n      state.editor.capabilities.itemDefaults\n    );\n  }\n  for (let i = parts.length - 1; i > 0; i--) {\n    let keys = parts.slice(0, i).filter(Boolean);\n    subset = dlv6(state.classNames.classNames, keys);\n    if (typeof subset !== \"undefined\" && typeof dlv6(subset, [\"__info\", \"__rule\"]) === \"undefined\") {\n      isSubset = true;\n      subsetKey = keys;\n      replacementRange = {\n        ...replacementRange,\n        start: {\n          ...replacementRange.start,\n          character: replacementRange.start.character + keys.join(sep).length + sep.length\n        }\n      };\n      break;\n    }\n  }\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: Object.keys(isSubset ? subset : state.classNames.classNames).filter((k) => k !== \"__info\").filter((className) => isContextItem(state, [...subsetKey, className])).map((className, index, classNames2) => {\n        return {\n          label: className + sep,\n          kind: 9,\n          command: {\n            title: \"\",\n            command: \"editor.action.triggerSuggest\"\n          },\n          sortText: \"-\" + naturalExpand(index, classNames2.length),\n          data: {\n            ...state.completionItemData ?? {},\n            className,\n            variants: subsetKey\n          }\n        };\n      }).concat(\n        Object.keys(isSubset ? subset : state.classNames.classNames).filter(\n          (className) => dlv6(state.classNames.classNames, [...subsetKey, className, \"__info\"])\n        ).map((className, index, classNames2) => {\n          let kind = CompletionItemKind.Constant;\n          let documentation;\n          const color = getColor(state, className);\n          if (color !== null) {\n            kind = CompletionItemKind.Color;\n            if (typeof color !== \"string\" && (color.alpha ?? 1) !== 0) {\n              documentation = formatColor(color);\n            }\n          }\n          return {\n            label: className,\n            kind,\n            ...documentation ? { documentation } : {},\n            sortText: naturalExpand(index, classNames2.length)\n          };\n        })\n      ).filter((item) => {\n        if (item === null) {\n          return false;\n        }\n        if (filter && !filter(item)) {\n          return false;\n        }\n        return true;\n      })\n    },\n    {\n      range: replacementRange,\n      data: {\n        ...state.completionItemData ?? {},\n        variants: subsetKey\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nasync function provideClassAttributeCompletions(state, document, position, context) {\n  let str = document.getText({\n    start: document.positionAt(Math.max(0, document.offsetAt(position) - 2e3)),\n    end: position\n  });\n  let settings = (await state.editor.getConfiguration(document.uri)).tailwindCSS;\n  let matches = matchClassAttributes(str, settings.classAttributes);\n  if (matches.length === 0) {\n    return null;\n  }\n  let match = matches[matches.length - 1];\n  const lexer = match[0][0] === \":\" || match[1].startsWith(\"[\") && match[1].endsWith(\"]\") ? getComputedClassAttributeLexer() : getClassAttributeLexer();\n  lexer.reset(str.substr(match.index + match[0].length - 1));\n  try {\n    let tokens = Array.from(lexer);\n    let last = tokens[tokens.length - 1];\n    if (last.type.startsWith(\"start\") || last.type === \"classlist\" || last.type.startsWith(\"arb\")) {\n      let classList = \"\";\n      for (let i = tokens.length - 1; i >= 0; i--) {\n        if (tokens[i].type === \"classlist\" || tokens[i].type.startsWith(\"arb\")) {\n          classList = tokens[i].value + classList;\n        } else {\n          break;\n        }\n      }\n      return completionsFromClassList(\n        state,\n        classList,\n        {\n          start: {\n            line: position.line,\n            character: position.character - classList.length\n          },\n          end: position\n        },\n        settings.rootFontSize,\n        void 0,\n        context\n      );\n    }\n  } catch (_) {\n  }\n  return null;\n}\nasync function provideCustomClassNameCompletions(state, document, position, context) {\n  const settings = await state.editor.getConfiguration(document.uri);\n  const filters = settings.tailwindCSS.experimental.classRegex;\n  if (filters.length === 0)\n    return null;\n  const cursor = document.offsetAt(position);\n  let text2 = document.getText({\n    start: document.positionAt(0),\n    end: document.positionAt(cursor + 2e3)\n  });\n  for (let match of customClassesIn({ text: text2, cursor, filters })) {\n    return completionsFromClassList(\n      state,\n      match.classList,\n      {\n        start: {\n          line: position.line,\n          character: position.character - match.classList.length\n        },\n        end: position\n      },\n      settings.tailwindCSS.rootFontSize,\n      void 0,\n      context\n    );\n  }\n  return null;\n}\nfunction provideThemeVariableCompletions(state, document, position, _context) {\n  if (!isCssContext(state, document, position))\n    return null;\n  let text2 = getTextWithoutComments(document, \"css\", {\n    start: { line: 0, character: 0 },\n    end: position\n  });\n  if (!text2.endsWith(\"-\"))\n    return null;\n  let themeBlock = text2.lastIndexOf(\"@theme\");\n  if (themeBlock === -1)\n    return null;\n  if (braceLevel(text2.slice(themeBlock)) !== 1)\n    return null;\n  function themeVar(label) {\n    return {\n      label,\n      kind: CompletionItemKind.Variable\n      // insertTextFormat: InsertTextFormat.Snippet,\n      // textEditText: `${label}-[\\${1}]`,\n    };\n  }\n  function themeNamespace(label) {\n    return {\n      label: `${label}-`,\n      kind: CompletionItemKind.Variable\n      // insertTextFormat: InsertTextFormat.Snippet,\n      // textEditText: `${label}-[\\${1}]`,\n    };\n  }\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: [\n        themeVar(\"--default-transition-duration\"),\n        themeVar(\"--default-transition-timing-function\"),\n        themeVar(\"--default-font-family\"),\n        themeVar(\"--default-font-feature-settings\"),\n        themeVar(\"--default-font-variation-settings\"),\n        themeVar(\"--default-mono-font-family\"),\n        themeVar(\"--default-mono-font-feature-settings\"),\n        themeVar(\"--default-mono-font-variation-settings\"),\n        themeNamespace(\"--breakpoint\"),\n        themeNamespace(\"--color\"),\n        themeNamespace(\"--animate\"),\n        themeNamespace(\"--blur\"),\n        themeNamespace(\"--radius\"),\n        themeNamespace(\"--shadow\"),\n        themeNamespace(\"--inset-shadow\"),\n        themeNamespace(\"--drop-shadow\"),\n        themeNamespace(\"--spacing\"),\n        themeNamespace(\"--width\"),\n        themeNamespace(\"--font-family\"),\n        themeNamespace(\"--font-size\"),\n        themeNamespace(\"--letter-spacing\"),\n        themeNamespace(\"--line-height\"),\n        themeNamespace(\"--transition-timing-function\")\n      ]\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {}\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nasync function provideAtApplyCompletions(state, document, position, context) {\n  let settings = (await state.editor.getConfiguration(document.uri)).tailwindCSS;\n  let str = document.getText({\n    start: { line: Math.max(position.line - 30, 0), character: 0 },\n    end: position\n  });\n  const match = findLast(/@apply\\s+(?<classList>[^;}]*)$/gi, str);\n  if (match === null) {\n    return null;\n  }\n  const classList = match.groups.classList;\n  return completionsFromClassList(\n    state,\n    classList,\n    {\n      start: {\n        line: position.line,\n        character: position.character - classList.length\n      },\n      end: position\n    },\n    settings.rootFontSize,\n    (item) => {\n      if (item.kind === 9) {\n        return gte(state.version, \"2.0.0-alpha.1\") || flagEnabled(state, \"applyComplexClasses\");\n      }\n      let variants = item.data?.variants ?? [];\n      let className = item.data?.className ?? item.label;\n      let validated = validateApply(state, [...variants, className]);\n      return validated !== null && validated.isApplyable === true;\n    },\n    context\n  );\n}\nvar NUMBER_REGEX = /^(\\d+\\.?|\\d*\\.\\d+)$/;\nfunction isNumber(str) {\n  return NUMBER_REGEX.test(str);\n}\nasync function provideClassNameCompletions(state, document, position, context) {\n  if (isCssContext(state, document, position)) {\n    return provideAtApplyCompletions(state, document, position, context);\n  }\n  if (isHtmlContext(state, document, position) || isJsxContext(state, document, position)) {\n    return provideClassAttributeCompletions(state, document, position, context);\n  }\n  return null;\n}\nfunction provideCssHelperCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  let text2 = document.getText({\n    start: { line: position.line, character: 0 },\n    // read one extra character so we can see if it's a ] later\n    end: { line: position.line, character: position.character + 1 }\n  });\n  const match = text2.substr(0, text2.length - 1).match(/[\\s:;/*(){}](?<helper>config|theme)\\(\\s*['\"]?(?<path>[^)'\"]*)$/);\n  if (match === null) {\n    return null;\n  }\n  let alpha;\n  let path = match.groups.path.replace(/^['\"]+/g, \"\");\n  let matches = path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]*))$/);\n  if (matches) {\n    path = matches[1];\n    alpha = matches[2];\n  }\n  if (alpha !== void 0) {\n    return null;\n  }\n  let base = match.groups.helper === \"config\" ? state.config : dlv6(state.config, \"theme\", {});\n  let parts = path.split(/([\\[\\].]+)/);\n  let keys = parts.filter((_, i) => i % 2 === 0);\n  let separators = parts.filter((_, i) => i % 2 !== 0);\n  function totalLength(arr) {\n    return arr.reduce((acc, cur) => acc + cur.length, 0);\n  }\n  let obj;\n  let offset = keys[keys.length - 1].length;\n  let separator = separators.length ? separators[separators.length - 1] : null;\n  if (keys.length === 1) {\n    obj = base;\n  } else {\n    for (let i = keys.length - 1; i > 0; i--) {\n      let o = dlv6(base, keys.slice(0, i));\n      if (isObject(o)) {\n        obj = o;\n        offset = totalLength(parts.slice(i * 2));\n        separator = separators[i - 1];\n        break;\n      }\n    }\n  }\n  if (!obj)\n    return null;\n  let editRange = {\n    start: {\n      line: position.line,\n      character: position.character - offset\n    },\n    end: position\n  };\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: Object.keys(obj).sort((a, z) => {\n        let aIsNumber = isNumber(a);\n        let zIsNumber = isNumber(z);\n        if (aIsNumber && !zIsNumber) {\n          return -1;\n        }\n        if (!aIsNumber && zIsNumber) {\n          return 1;\n        }\n        if (aIsNumber && zIsNumber) {\n          return parseFloat(a) - parseFloat(z);\n        }\n        return 0;\n      }).map((item, index, items) => {\n        let color = getColorFromValue(obj[item]);\n        const replaceDot = item.indexOf(\".\") !== -1 && separator && separator.endsWith(\".\");\n        const insertClosingBrace = text2.charAt(text2.length - 1) !== \"]\" && (replaceDot || separator && separator.endsWith(\"[\"));\n        const detail = stringifyConfigValue(obj[item]);\n        return {\n          label: item,\n          sortText: naturalExpand(index, items.length),\n          commitCharacters: [!item.includes(\".\") && \".\", !item.includes(\"[\") && \"[\"].filter(\n            Boolean\n          ),\n          kind: color ? 16 : isObject(obj[item]) ? 9 : 10,\n          // VS Code bug causes some values to not display in some cases\n          detail: detail === \"0\" || detail === \"transparent\" ? `${detail} ` : detail,\n          ...color && typeof color !== \"string\" && (color.alpha ?? 1) !== 0 ? { documentation: formatColor(color) } : {},\n          ...insertClosingBrace ? { textEditText: `${item}]` } : {},\n          additionalTextEdits: replaceDot ? [\n            {\n              newText: \"[\",\n              range: {\n                start: {\n                  ...editRange.start,\n                  character: editRange.start.character - 1\n                },\n                end: editRange.start\n              }\n            }\n          ] : []\n        };\n      })\n    },\n    {\n      range: editRange,\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"helper\"\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nfunction provideTailwindDirectiveCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  let text2 = document.getText({\n    start: { line: position.line, character: 0 },\n    end: position\n  });\n  const match = text2.match(/^\\s*@tailwind\\s+(?<partial>[^\\s]*)$/i);\n  if (match === null)\n    return null;\n  let items = [\n    gte(state.version, \"1.0.0-beta.1\") ? {\n      label: \"base\",\n      documentation: {\n        kind: \"markdown\",\n        value: `This injects Tailwind\\u2019s base styles and any base styles registered by plugins.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#tailwind\"\n        )})`\n      }\n    } : {\n      label: \"preflight\",\n      documentation: {\n        kind: \"markdown\",\n        value: `This injects Tailwind\\u2019s base styles, which is a combination of Normalize.css and some additional base styles.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#tailwind\"\n        )})`\n      }\n    },\n    {\n      label: \"components\",\n      documentation: {\n        kind: \"markdown\",\n        value: `This injects Tailwind\\u2019s component classes and any component classes registered by plugins.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#tailwind\"\n        )})`\n      }\n    },\n    {\n      label: \"utilities\",\n      documentation: {\n        kind: \"markdown\",\n        value: `This injects Tailwind\\u2019s utility classes and any utility classes registered by plugins.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#tailwind\"\n        )})`\n      }\n    },\n    state.jit && gte(state.version, \"2.1.99\") ? {\n      label: \"variants\",\n      documentation: {\n        kind: \"markdown\",\n        value: `Use this directive to control where Tailwind injects the utility variants.\n\nThis directive is considered an advanced escape hatch and it is recommended to omit it whenever possible. If omitted, Tailwind will append these classes to the very end of your stylesheet by default.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"just-in-time-mode#variants-are-inserted-at-tailwind-variants\"\n        )})`\n      }\n    } : {\n      label: \"screens\",\n      documentation: {\n        kind: \"markdown\",\n        value: `Use this directive to control where Tailwind injects the responsive variations of each utility.\n\nIf omitted, Tailwind will append these classes to the very end of your stylesheet by default.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#tailwind\"\n        )})`\n      }\n    }\n  ];\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: items.map((item) => ({\n        ...item,\n        kind: 21\n      }))\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"@tailwind\"\n      },\n      range: {\n        start: {\n          line: position.line,\n          character: position.character - match.groups.partial.length\n        },\n        end: position\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nfunction provideVariantsDirectiveCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  if (gte(state.version, \"2.99.0\")) {\n    return null;\n  }\n  let text2 = document.getText({\n    start: { line: position.line, character: 0 },\n    end: position\n  });\n  const match = text2.match(/^\\s*@variants\\s+(?<partial>[^}]*)$/i);\n  if (match === null)\n    return null;\n  const parts = match.groups.partial.split(/\\s*,\\s*/);\n  if (/\\s+/.test(parts[parts.length - 1]))\n    return null;\n  let possibleVariants = state.variants.flatMap((variant) => {\n    if (variant.values.length) {\n      return variant.values.map(\n        (value) => value === \"DEFAULT\" ? variant.name : `${variant.name}${variant.hasDash ? \"-\" : \"\"}${value}`\n      );\n    }\n    return [variant.name];\n  });\n  const existingVariants = parts.slice(0, parts.length - 1);\n  if (state.jit) {\n    possibleVariants.unshift(\"responsive\");\n    possibleVariants = possibleVariants.filter((v) => !state.screens.includes(v));\n  }\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: possibleVariants.filter((v) => existingVariants.indexOf(v) === -1).map((variant, index, variants) => ({\n        // TODO: detail\n        label: variant,\n        kind: 21,\n        sortText: naturalExpand(index, variants.length)\n      }))\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"variant\"\n      },\n      range: {\n        start: {\n          line: position.line,\n          character: position.character - parts[parts.length - 1].length\n        },\n        end: position\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nfunction provideLayerDirectiveCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  let text2 = document.getText({\n    start: { line: position.line, character: 0 },\n    end: position\n  });\n  const match = text2.match(/^\\s*@layer\\s+(?<partial>[^\\s]*)$/i);\n  if (match === null)\n    return null;\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: [\"base\", \"components\", \"utilities\"].map((layer, index, layers) => ({\n        label: layer,\n        kind: 21,\n        sortText: naturalExpand(index, layers.length)\n      }))\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"layer\"\n      },\n      range: {\n        start: {\n          line: position.line,\n          character: position.character - match.groups.partial.length\n        },\n        end: position\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nfunction withDefaults(completionList, defaults, supportedDefaults) {\n  let defaultData = supportedDefaults.includes(\"data\");\n  let defaultRange = supportedDefaults.includes(\"editRange\");\n  return {\n    ...completionList,\n    ...defaultData || defaultRange ? {\n      itemDefaults: {\n        ...defaultData && defaults.data ? { data: defaults.data } : {},\n        ...defaultRange && defaults.range ? { editRange: defaults.range } : {}\n      }\n    } : {},\n    items: defaultData && defaultRange ? completionList.items : completionList.items.map(({ textEditText, ...item }) => ({\n      ...item,\n      ...defaultData || !defaults.data || item.data ? {} : { data: defaults.data },\n      ...defaultRange || !defaults.range ? textEditText ? { textEditText } : {} : {\n        textEdit: {\n          newText: textEditText ?? item.label,\n          range: defaults.range\n        }\n      }\n    }))\n  };\n}\nfunction provideScreenDirectiveCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  let text2 = document.getText({\n    start: { line: position.line, character: 0 },\n    end: position\n  });\n  const match = text2.match(/^\\s*@screen\\s+(?<partial>[^\\s]*)$/i);\n  if (match === null)\n    return null;\n  const screens = dlv6(state.config, [\"screens\"], dlv6(state.config, [\"theme\", \"screens\"], {}));\n  if (!isObject(screens))\n    return null;\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: Object.keys(screens).map((screen, index) => ({\n        label: screen,\n        kind: 21,\n        sortText: naturalExpand(index)\n      }))\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"screen\"\n      },\n      range: {\n        start: {\n          line: position.line,\n          character: position.character - match.groups.partial.length\n        },\n        end: position\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nfunction provideCssDirectiveCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  let text2 = document.getText({\n    start: { line: position.line, character: 0 },\n    end: position\n  });\n  const match = text2.match(/^\\s*@(?<partial>[a-z]*)$/i);\n  if (match === null)\n    return null;\n  const items = [\n    {\n      label: \"@tailwind\",\n      documentation: {\n        kind: \"markdown\",\n        value: `Use the \\`@tailwind\\` directive to insert Tailwind\\u2019s \\`base\\`, \\`components\\`, \\`utilities\\` and \\`${state.jit && gte(state.version, \"2.1.99\") ? \"variants\" : \"screens\"}\\` styles into your CSS.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#tailwind\"\n        )})`\n      }\n    },\n    {\n      label: \"@screen\",\n      documentation: {\n        kind: \"markdown\",\n        value: `The \\`@screen\\` directive allows you to create media queries that reference your breakpoints by name instead of duplicating their values in your own CSS.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#screen\"\n        )})`\n      }\n    },\n    {\n      label: \"@apply\",\n      documentation: {\n        kind: \"markdown\",\n        value: `Use \\`@apply\\` to inline any existing utility classes into your own custom CSS.\n\n[Tailwind CSS Documentation](${docsUrl(\n          state.version,\n          \"functions-and-directives/#apply\"\n        )})`\n      }\n    },\n    ...gte(state.version, \"1.8.0\") ? [\n      {\n        label: \"@layer\",\n        documentation: {\n          kind: \"markdown\",\n          value: `Use the \\`@layer\\` directive to tell Tailwind which \"bucket\" a set of custom styles belong to. Valid layers are \\`base\\`, \\`components\\`, and \\`utilities\\`.\n\n[Tailwind CSS Documentation](${docsUrl(\n            state.version,\n            \"functions-and-directives/#layer\"\n          )})`\n        }\n      }\n    ] : [],\n    ...gte(state.version, \"2.99.0\") ? [] : [\n      {\n        label: \"@variants\",\n        documentation: {\n          kind: \"markdown\",\n          value: `You can generate \\`responsive\\`, \\`hover\\`, \\`focus\\`, \\`active\\`, and other variants of your own utilities by wrapping their definitions in the \\`@variants\\` directive.\n\n[Tailwind CSS Documentation](${docsUrl(\n            state.version,\n            \"functions-and-directives/#variants\"\n          )})`\n        }\n      },\n      {\n        label: \"@responsive\",\n        documentation: {\n          kind: \"markdown\",\n          value: `You can generate responsive variants of your own classes by wrapping their definitions in the \\`@responsive\\` directive.\n\n[Tailwind CSS Documentation](${docsUrl(\n            state.version,\n            \"functions-and-directives/#responsive\"\n          )})`\n        }\n      }\n    ],\n    ...gte(state.version, \"3.2.0\") ? [\n      {\n        label: \"@config\",\n        documentation: {\n          kind: \"markdown\",\n          value: `Use the \\`@config\\` directive to specify which config file Tailwind should use when compiling that CSS file.\n\n[Tailwind CSS Documentation](${docsUrl(\n            state.version,\n            \"functions-and-directives/#config\"\n          )})`\n        }\n      }\n    ] : [],\n    ...gte(state.version, \"4.0.0\") ? [\n      {\n        label: \"@theme\",\n        documentation: {\n          kind: \"markdown\",\n          value: `Use the \\`@theme\\` directive to specify which config file Tailwind should use when compiling that CSS file.\n\n[Tailwind CSS Documentation](${docsUrl(\n            state.version,\n            \"functions-and-directives/#config\"\n          )})`\n        }\n      }\n    ] : []\n  ];\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: items.map((item) => ({\n        ...item,\n        kind: 14\n      }))\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"directive\"\n      },\n      range: {\n        start: {\n          line: position.line,\n          character: position.character - match.groups.partial.length - 1\n        },\n        end: position\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nasync function provideConfigDirectiveCompletions(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  if (!gte(state.version, \"3.2.0\")) {\n    return null;\n  }\n  let text2 = document.getText({ start: { line: position.line, character: 0 }, end: position });\n  let match = text2.match(/@config\\s*(?<partial>'[^']*|\"[^\"]*)$/);\n  if (!match) {\n    return null;\n  }\n  let partial = match.groups.partial.slice(1);\n  let valueBeforeLastSlash = partial.substring(0, partial.lastIndexOf(\"/\"));\n  let valueAfterLastSlash = partial.substring(partial.lastIndexOf(\"/\") + 1);\n  return withDefaults(\n    {\n      isIncomplete: false,\n      items: (await state.editor.readDirectory(document, valueBeforeLastSlash || \".\")).filter(([name, type]) => type.isDirectory || /\\.c?js$/.test(name)).map(([name, type]) => ({\n        label: type.isDirectory ? name + \"/\" : name,\n        kind: type.isDirectory ? 19 : 17,\n        command: type.isDirectory ? { command: \"editor.action.triggerSuggest\", title: \"\" } : void 0\n      }))\n    },\n    {\n      data: {\n        ...state.completionItemData ?? {},\n        _type: \"filesystem\"\n      },\n      range: {\n        start: {\n          line: position.line,\n          character: position.character - valueAfterLastSlash.length\n        },\n        end: position\n      }\n    },\n    state.editor.capabilities.itemDefaults\n  );\n}\nasync function provideEmmetCompletions(state, document, position) {\n  let settings = await state.editor.getConfiguration(document.uri);\n  if (settings.tailwindCSS.emmetCompletions !== true)\n    return null;\n  const isHtml = !isJsDoc(state, document) && isHtmlContext(state, document, position);\n  const isJs = isJsDoc(state, document) || isJsxContext(state, document, position);\n  const syntax = isHtml ? \"html\" : isJs ? \"jsx\" : null;\n  if (syntax === null) {\n    return null;\n  }\n  const extractAbbreviationResults = emmetHelper.extractAbbreviation(document, position, true);\n  if (!extractAbbreviationResults || !emmetHelper.isAbbreviationValid(syntax, extractAbbreviationResults.abbreviation)) {\n    return null;\n  }\n  if (!isValidLocationForEmmetAbbreviation(document, extractAbbreviationResults.abbreviationRange)) {\n    return null;\n  }\n  if (isJs) {\n    const abbreviation = extractAbbreviationResults.abbreviation;\n    if (abbreviation.startsWith(\"this.\")) {\n      return null;\n    }\n    const symbols = await state.editor.getDocumentSymbols(document.uri);\n    if (symbols && symbols.find(\n      (symbol) => abbreviation === symbol.name || abbreviation.startsWith(symbol.name + \".\") && !/>|\\*|\\+/.test(abbreviation)\n    )) {\n      return null;\n    }\n  }\n  const emmetItems = emmetHelper.doComplete(document, position, syntax, {});\n  if (!emmetItems || !emmetItems.items || emmetItems.items.length !== 1) {\n    return null;\n  }\n  if (emmetItems.items[0].label === \"widows: ;\") {\n    return null;\n  }\n  const parts = emmetItems.items[0].label.split(\".\");\n  if (parts.length < 2)\n    return null;\n  return completionsFromClassList(\n    state,\n    parts[parts.length - 1],\n    {\n      start: {\n        line: position.line,\n        character: position.character - parts[parts.length - 1].length\n      },\n      end: position\n    },\n    settings.tailwindCSS.rootFontSize\n  );\n}\nasync function doComplete2(state, document, position, context) {\n  if (state === null)\n    return { items: [], isIncomplete: false };\n  const result = await provideClassNameCompletions(state, document, position, context) || provideCssHelperCompletions(state, document, position) || provideCssDirectiveCompletions(state, document, position) || provideScreenDirectiveCompletions(state, document, position) || provideVariantsDirectiveCompletions(state, document, position) || provideTailwindDirectiveCompletions(state, document, position) || provideLayerDirectiveCompletions(state, document, position) || await provideConfigDirectiveCompletions(state, document, position) || await provideCustomClassNameCompletions(state, document, position, context) || provideThemeVariableCompletions(state, document, position, context);\n  if (result)\n    return result;\n  return provideEmmetCompletions(state, document, position);\n}\nasync function resolveCompletionItem(state, item) {\n  if ([\"helper\", \"directive\", \"variant\", \"layer\", \"@tailwind\", \"filesystem\"].includes(\n    item.data?._type\n  )) {\n    return item;\n  }\n  if (item.data?._type === \"screen\") {\n    let screens = dlv6(state.config, [\"theme\", \"screens\"], dlv6(state.config, [\"screens\"], {}));\n    if (!isObject(screens))\n      screens = {};\n    item.detail = stringifyScreen(screens[item.label]);\n    return item;\n  }\n  let className = item.data?.className ?? item.label;\n  if (item.data?.important) {\n    className = `!${className}`;\n  }\n  let variants = item.data?.variants ?? [];\n  if (state.v4) {\n    if (item.kind === 9)\n      return item;\n    if (item.detail && item.documentation)\n      return item;\n    let root2 = state.designSystem.compile([[...variants, className].join(state.separator)])[0];\n    let rules2 = root2.nodes.filter((node) => node.type === \"rule\");\n    if (rules2.length === 0)\n      return item;\n    if (!item.detail) {\n      if (rules2.length === 1) {\n        let decls = [];\n        root2.walkDecls((node) => {\n          decls.push(node);\n        });\n        item.detail = await stringifyDecls(\n          state,\n          postcss3.rule({\n            nodes: decls\n          })\n        );\n      } else {\n        item.detail = `${rules2.length} rules`;\n      }\n    }\n    if (!item.documentation) {\n      item.documentation = {\n        kind: \"markdown\",\n        value: [\n          \"```css\",\n          await stringifyRoot(state, postcss3.root({ nodes: rules2 })),\n          \"```\"\n        ].join(\"\\n\")\n      };\n    }\n    return item;\n  }\n  if (state.jit) {\n    if (item.kind === 9)\n      return item;\n    if (item.detail && item.documentation)\n      return item;\n    let { root: root2, rules: rules2 } = generateRules(state, [[...variants, className].join(state.separator)]);\n    if (rules2.length === 0)\n      return item;\n    if (!item.detail) {\n      if (rules2.length === 1) {\n        item.detail = await stringifyDecls(state, rules2[0]);\n      } else {\n        item.detail = `${rules2.length} rules`;\n      }\n    }\n    if (!item.documentation) {\n      item.documentation = {\n        kind: \"markdown\",\n        value: [\"```css\", await stringifyRoot(state, root2), \"```\"].join(\"\\n\")\n      };\n    }\n    return item;\n  }\n  const rules = dlv6(state.classNames.classNames, [...variants, className, \"__info\"]);\n  if (item.kind === 9) {\n    item.detail = state.classNames.context[className].join(\", \");\n  } else {\n    item.detail = await getCssDetail(state, rules);\n    if (!item.documentation) {\n      const settings = await state.editor.getConfiguration();\n      const css = stringifyCss([...variants, className].join(\":\"), rules, settings);\n      if (css) {\n        item.documentation = {\n          kind: \"markdown\",\n          value: [\"```css\", css, \"```\"].join(\"\\n\")\n        };\n      }\n    }\n  }\n  return item;\n}\nfunction isContextItem(state, keys) {\n  const item = dlv6(state.classNames.classNames, keys);\n  if (!isObject(item)) {\n    return false;\n  }\n  if (!state.classNames.context[keys[keys.length - 1]]) {\n    return false;\n  }\n  if (Object.keys(item).filter((x) => x !== \"__info\").length > 0) {\n    return true;\n  }\n  return isObject(item.__info) && !item.__info.__rule;\n}\nfunction stringifyDecls2(obj, settings) {\n  let props = Object.keys(obj);\n  let nonCustomProps = props.filter((prop) => !prop.startsWith(\"--\"));\n  if (props.length !== nonCustomProps.length && nonCustomProps.length !== 0) {\n    props = nonCustomProps;\n  }\n  return props.map(\n    (prop) => ensureArray(obj[prop]).map((value) => {\n      if (settings.tailwindCSS.showPixelEquivalents) {\n        value = addPixelEquivalentsToValue(value, settings.tailwindCSS.rootFontSize);\n      }\n      return `${prop}: ${value};`;\n    }).join(\" \")\n  ).join(\" \");\n}\nasync function getCssDetail(state, className) {\n  if (Array.isArray(className)) {\n    return `${className.length} rules`;\n  }\n  if (className.__rule === true) {\n    const settings = await state.editor.getConfiguration();\n    return stringifyDecls2(removeMeta(className), settings);\n  }\n  return null;\n}\n\n// src/diagnostics/types.ts\nvar DiagnosticKind = /* @__PURE__ */ ((DiagnosticKind2) => {\n  DiagnosticKind2[\"CssConflict\"] = \"cssConflict\";\n  DiagnosticKind2[\"InvalidApply\"] = \"invalidApply\";\n  DiagnosticKind2[\"InvalidScreen\"] = \"invalidScreen\";\n  DiagnosticKind2[\"InvalidVariant\"] = \"invalidVariant\";\n  DiagnosticKind2[\"InvalidConfigPath\"] = \"invalidConfigPath\";\n  DiagnosticKind2[\"InvalidTailwindDirective\"] = \"invalidTailwindDirective\";\n  DiagnosticKind2[\"RecommendedVariantOrder\"] = \"recommendedVariantOrder\";\n  return DiagnosticKind2;\n})(DiagnosticKind || {});\nfunction isCssConflictDiagnostic(diagnostic) {\n  return diagnostic.code === \"cssConflict\" /* CssConflict */;\n}\nfunction isInvalidApplyDiagnostic(diagnostic) {\n  return diagnostic.code === \"invalidApply\" /* InvalidApply */;\n}\nfunction isInvalidScreenDiagnostic(diagnostic) {\n  return diagnostic.code === \"invalidScreen\" /* InvalidScreen */;\n}\nfunction isInvalidVariantDiagnostic(diagnostic) {\n  return diagnostic.code === \"invalidVariant\" /* InvalidVariant */;\n}\nfunction isInvalidConfigPathDiagnostic(diagnostic) {\n  return diagnostic.code === \"invalidConfigPath\" /* InvalidConfigPath */;\n}\nfunction isInvalidTailwindDirectiveDiagnostic(diagnostic) {\n  return diagnostic.code === \"invalidTailwindDirective\" /* InvalidTailwindDirective */;\n}\nfunction isRecommendedVariantOrderDiagnostic(diagnostic) {\n  return diagnostic.code === \"recommendedVariantOrder\" /* RecommendedVariantOrder */;\n}\n\n// src/util/joinWithAnd.ts\nfunction joinWithAnd(strings) {\n  return strings.reduce((acc, cur, i) => {\n    if (i === 0) {\n      return cur;\n    }\n    if (strings.length > 1 && i === strings.length - 1) {\n      return `${acc} and ${cur}`;\n    }\n    return `${acc}, ${cur}`;\n  }, \"\");\n}\n\n// src/util/getClassNameDecls.ts\nimport dlv7 from \"dlv\";\nfunction getClassNameDecls(state, className) {\n  const parts = getClassNameParts(state, className);\n  if (!parts)\n    return null;\n  const info = dlv7(state.classNames.classNames, [...parts, \"__info\"]);\n  if (Array.isArray(info)) {\n    return info.map(removeMeta);\n  }\n  return removeMeta(info);\n}\n\n// src/diagnostics/getCssConflictDiagnostics.ts\nfunction isAtRule2(node) {\n  return node.type === \"atrule\";\n}\nfunction isKeyframes(rule2) {\n  let parent = rule2.parent;\n  if (!parent) {\n    return false;\n  }\n  if (isAtRule2(parent) && parent.name === \"keyframes\") {\n    return true;\n  }\n  return false;\n}\nfunction getRuleProperties(rule2) {\n  let properties = [];\n  rule2.walkDecls(({ prop }) => {\n    properties.push(prop);\n  });\n  return properties;\n}\nasync function getCssConflictDiagnostics(state, document, settings) {\n  let severity = settings.tailwindCSS.lint.cssConflict;\n  if (severity === \"ignore\")\n    return [];\n  let diagnostics = [];\n  const classLists = await findClassListsInDocument(state, document);\n  classLists.forEach((classList) => {\n    const classNames = getClassNamesInClassList(classList, state.blocklist);\n    if (state.v4) {\n      const groups = recordClassDetails(state, classNames);\n      for (let [className, conflictingClassNames] of findConflicts(classNames, groups)) {\n        diagnostics.push({\n          code: \"cssConflict\" /* CssConflict */,\n          className,\n          otherClassNames: conflictingClassNames,\n          range: className.range,\n          severity: severity === \"error\" ? 1 : 2,\n          message: `'${className.className}' applies the same CSS properties as ${joinWithAnd(\n            conflictingClassNames.map(\n              (conflictingClassName) => `'${conflictingClassName.className}'`\n            )\n          )}.`,\n          relatedInformation: conflictingClassNames.map((conflictingClassName) => {\n            return {\n              message: conflictingClassName.className,\n              location: {\n                uri: document.uri,\n                range: conflictingClassName.range\n              }\n            };\n          })\n        });\n      }\n      return;\n    }\n    classNames.forEach((className, index) => {\n      if (state.jit) {\n        let { rules } = generateRules(\n          state,\n          [className.className],\n          (rule2) => !isKeyframes(rule2)\n        );\n        if (rules.length === 0) {\n          return;\n        }\n        let info = rules.map((rule2) => {\n          let properties2 = getRuleProperties(rule2);\n          let context = getRuleContext(state, rule2, className.className);\n          return { context, properties: properties2 };\n        });\n        let otherClassNames2 = classNames.filter((_className, i) => i !== index);\n        let conflictingClassNames2 = otherClassNames2.filter((otherClassName) => {\n          let { rules: otherRules } = generateRules(\n            state,\n            [otherClassName.className],\n            (rule2) => !isKeyframes(rule2)\n          );\n          if (otherRules.length !== rules.length) {\n            return false;\n          }\n          let propertiesAreComparable = false;\n          for (let i = 0; i < otherRules.length; i++) {\n            let otherRule = otherRules[i];\n            let properties2 = getRuleProperties(otherRule);\n            if (info[i].properties.length > 0 && properties2.length > 0) {\n              propertiesAreComparable = true;\n            }\n            if (!equal(info[i].properties, properties2)) {\n              return false;\n            }\n            let context = getRuleContext(state, otherRule, otherClassName.className);\n            if (!equal(info[i].context, context)) {\n              return false;\n            }\n          }\n          if (!propertiesAreComparable) {\n            return false;\n          }\n          return true;\n        });\n        if (conflictingClassNames2.length === 0)\n          return;\n        diagnostics.push({\n          code: \"cssConflict\" /* CssConflict */,\n          className,\n          otherClassNames: conflictingClassNames2,\n          range: className.range,\n          severity: severity === \"error\" ? 1 : 2,\n          message: `'${className.className}' applies the same CSS properties as ${joinWithAnd(\n            conflictingClassNames2.map(\n              (conflictingClassName) => `'${conflictingClassName.className}'`\n            )\n          )}.`,\n          relatedInformation: conflictingClassNames2.map((conflictingClassName) => {\n            return {\n              message: conflictingClassName.className,\n              location: {\n                uri: document.uri,\n                range: conflictingClassName.range\n              }\n            };\n          })\n        });\n        return;\n      }\n      let decls = getClassNameDecls(state, className.className);\n      if (!decls)\n        return;\n      let properties = Object.keys(decls);\n      let meta = getClassNameMeta(state, className.className);\n      let otherClassNames = classNames.filter((_className, i) => i !== index);\n      let conflictingClassNames = otherClassNames.filter((otherClassName) => {\n        let otherDecls = getClassNameDecls(state, otherClassName.className);\n        if (!otherDecls)\n          return false;\n        let otherMeta = getClassNameMeta(state, otherClassName.className);\n        return equal(properties, Object.keys(otherDecls)) && !Array.isArray(meta) && !Array.isArray(otherMeta) && equal(meta.context, otherMeta.context) && equal(meta.pseudo, otherMeta.pseudo) && meta.scope === otherMeta.scope;\n      });\n      if (conflictingClassNames.length === 0)\n        return;\n      diagnostics.push({\n        code: \"cssConflict\" /* CssConflict */,\n        className,\n        otherClassNames: conflictingClassNames,\n        range: className.range,\n        severity: severity === \"error\" ? 1 : 2,\n        message: `'${className.className}' applies the same CSS ${properties.length === 1 ? \"property\" : \"properties\"} as ${joinWithAnd(\n          conflictingClassNames.map(\n            (conflictingClassName) => `'${conflictingClassName.className}'`\n          )\n        )}.`,\n        relatedInformation: conflictingClassNames.map((conflictingClassName) => {\n          return {\n            message: conflictingClassName.className,\n            location: {\n              uri: document.uri,\n              range: conflictingClassName.range\n            }\n          };\n        })\n      });\n    });\n  });\n  return diagnostics;\n}\nfunction visit(nodes, cb, path = []) {\n  for (let child of nodes) {\n    path = [...path, child];\n    cb(child, path);\n    if (\"nodes\" in child && child.nodes && child.nodes.length > 0) {\n      visit(child.nodes, cb, path);\n    }\n  }\n}\nfunction recordClassDetails(state, classes) {\n  const groups = {};\n  let roots = state.designSystem.compile(classes.map((c) => c.className));\n  for (let [idx, root2] of roots.entries()) {\n    let { className } = classes[idx];\n    visit([root2], (node, path) => {\n      if (node.type !== \"rule\" && node.type !== \"atrule\")\n        return;\n      let properties = [];\n      for (let child of node.nodes ?? []) {\n        if (child.type !== \"decl\")\n          continue;\n        properties.push(child.prop);\n      }\n      if (properties.length === 0)\n        return;\n      groups[className] ??= [];\n      groups[className].push({\n        properties,\n        context: path.map((node2) => {\n          if (node2.type === \"rule\") {\n            return node2.selector;\n          } else if (node2.type === \"atrule\") {\n            return `@${node2.name} ${node2.params}`;\n          }\n          return \"\";\n        }).filter(Boolean).slice(1)\n      });\n    });\n  }\n  return groups;\n}\nfunction* findConflicts(classes, groups) {\n  for (let className of classes) {\n    let entries = groups[className.className] ?? [];\n    let conflictingClassNames = [];\n    for (let otherClassName of classes) {\n      if (className === otherClassName)\n        continue;\n      let otherEntries = groups[otherClassName.className] ?? [];\n      if (entries.length !== otherEntries.length)\n        continue;\n      let hasConflict = false;\n      for (let i = 0; i < entries.length; i++) {\n        let entry = entries[i];\n        let otherEntry = otherEntries[i];\n        if (entry.properties.length !== otherEntry.properties.length) {\n          hasConflict = false;\n          break;\n        }\n        if (entry.context.length !== otherEntry.context.length) {\n          hasConflict = false;\n          break;\n        }\n        if (!equal(entry.properties, otherEntry.properties)) {\n          hasConflict = false;\n          break;\n        }\n        if (!equal(entry.context, otherEntry.context)) {\n          hasConflict = false;\n          break;\n        }\n        if (entry.properties.length === 0 && otherEntry.properties.length === 0) {\n          continue;\n        }\n        hasConflict = true;\n      }\n      if (!hasConflict)\n        continue;\n      conflictingClassNames.push(otherClassName);\n    }\n    if (conflictingClassNames.length === 0)\n      return;\n    yield [className, conflictingClassNames];\n  }\n}\n\n// src/diagnostics/getInvalidApplyDiagnostics.ts\nasync function getInvalidApplyDiagnostics(state, document, settings) {\n  let severity = settings.tailwindCSS.lint.invalidApply;\n  if (severity === \"ignore\")\n    return [];\n  const classNames = await findClassNamesInRange(state, document, void 0, \"css\", false);\n  let diagnostics = classNames.map((className) => {\n    let result = validateApply(state, className.className);\n    if (result === null || result.isApplyable === true) {\n      return null;\n    }\n    return {\n      code: \"invalidApply\" /* InvalidApply */,\n      severity: severity === \"error\" ? 1 : 2,\n      range: className.range,\n      message: result.reason,\n      className\n    };\n  });\n  return diagnostics.filter(Boolean);\n}\n\n// src/util/closest.ts\nimport sift from \"sift-string\";\nfunction closest(input, options) {\n  return options.concat([]).sort((a, b) => sift(input, a) - sift(input, b))[0];\n}\n\n// src/util/absoluteRange.ts\nfunction absoluteRange(range, reference) {\n  return {\n    start: {\n      line: (reference?.start.line || 0) + range.start.line,\n      character: (range.end.line === 0 ? reference?.start.character || 0 : 0) + range.start.character\n    },\n    end: {\n      line: (reference?.start.line || 0) + range.end.line,\n      character: (range.end.line === 0 ? reference?.start.character || 0 : 0) + range.end.character\n    }\n  };\n}\n\n// src/diagnostics/getInvalidScreenDiagnostics.ts\nfunction getInvalidScreenDiagnostics(state, document, settings) {\n  let severity = settings.tailwindCSS.lint.invalidScreen;\n  if (severity === \"ignore\")\n    return [];\n  let diagnostics = [];\n  let ranges = [];\n  if (isCssDoc(state, document)) {\n    ranges.push(void 0);\n  } else {\n    let boundaries = getLanguageBoundaries(state, document);\n    if (!boundaries)\n      return [];\n    ranges.push(...boundaries.filter((b) => b.type === \"css\").map(({ range }) => range));\n  }\n  ranges.forEach((range) => {\n    let text2 = getTextWithoutComments(document, \"css\", range);\n    let matches = findAll(/(?:\\s|^)@screen\\s+(?<screen>[^\\s{]+)/g, text2);\n    matches.forEach((match) => {\n      if (state.screens.includes(match.groups.screen)) {\n        return null;\n      }\n      let message = `The screen '${match.groups.screen}' does not exist in your theme config.`;\n      let suggestions = [];\n      let suggestion = closest(match.groups.screen, state.screens);\n      if (suggestion) {\n        suggestions.push(suggestion);\n        message += ` Did you mean '${suggestion}'?`;\n      }\n      diagnostics.push({\n        code: \"invalidScreen\" /* InvalidScreen */,\n        range: absoluteRange(\n          {\n            start: indexToPosition(\n              text2,\n              match.index + match[0].length - match.groups.screen.length\n            ),\n            end: indexToPosition(text2, match.index + match[0].length)\n          },\n          range\n        ),\n        severity: severity === \"error\" ? 1 : 2,\n        message,\n        suggestions\n      });\n    });\n  });\n  return diagnostics;\n}\n\n// src/diagnostics/getInvalidVariantDiagnostics.ts\nfunction getInvalidVariantDiagnostics(state, document, settings) {\n  let severity = settings.tailwindCSS.lint.invalidVariant;\n  if (severity === \"ignore\")\n    return [];\n  if (gte(state.version, \"2.99.0\")) {\n    return [];\n  }\n  let diagnostics = [];\n  let ranges = [];\n  if (isCssDoc(state, document)) {\n    ranges.push(void 0);\n  } else {\n    let boundaries = getLanguageBoundaries(state, document);\n    if (!boundaries)\n      return [];\n    ranges.push(...boundaries.filter((b) => b.type === \"css\").map(({ range }) => range));\n  }\n  let possibleVariants = state.variants.flatMap((variant) => {\n    if (variant.values.length) {\n      return variant.values.map(\n        (value) => value === \"DEFAULT\" ? variant.name : `${variant.name}${variant.hasDash ? \"-\" : \"\"}${value}`\n      );\n    }\n    return [variant.name];\n  });\n  if (state.jit) {\n    possibleVariants.unshift(\"responsive\");\n    possibleVariants = possibleVariants.filter((v) => !state.screens.includes(v));\n  }\n  ranges.forEach((range) => {\n    let text2 = getTextWithoutComments(document, \"css\", range);\n    let matches = findAll(/(?:\\s|^)@variants\\s+(?<variants>[^{]+)/g, text2);\n    matches.forEach((match) => {\n      let variants = match.groups.variants.split(/(\\s*,\\s*)/);\n      let listStartIndex = match.index + match[0].length - match.groups.variants.length;\n      for (let i = 0; i < variants.length; i += 2) {\n        let variant = variants[i].trim();\n        if (possibleVariants.includes(variant)) {\n          continue;\n        }\n        let message = `The variant '${variant}' does not exist.`;\n        let suggestions = [];\n        let suggestion = closest(variant, possibleVariants);\n        if (suggestion) {\n          suggestions.push(suggestion);\n          message += ` Did you mean '${suggestion}'?`;\n        }\n        let variantStartIndex = listStartIndex + variants.slice(0, i).join(\"\").length;\n        diagnostics.push({\n          code: \"invalidVariant\" /* InvalidVariant */,\n          range: absoluteRange(\n            {\n              start: indexToPosition(text2, variantStartIndex),\n              end: indexToPosition(text2, variantStartIndex + variant.length)\n            },\n            range\n          ),\n          severity: severity === \"error\" ? 1 : 2,\n          message,\n          suggestions\n        });\n      }\n    });\n  });\n  return diagnostics;\n}\n\n// src/util/stringToPath.ts\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g;\nfunction stringToPath(string) {\n  let result = [];\n  if (string.charCodeAt(0) === 46) {\n    result.push(\"\");\n  }\n  string.replace(rePropName, (match, number, quote, subString) => {\n    result.push(quote ? subString.replace(reEscapeChar, \"$1\") : number || match);\n  });\n  return result;\n}\n\n// src/diagnostics/getInvalidConfigPathDiagnostics.ts\nimport dlv8 from \"dlv\";\nfunction pathToString(path) {\n  if (typeof path === \"string\")\n    return path;\n  return path.reduce((acc, cur, i) => {\n    if (i === 0)\n      return cur;\n    if (cur.includes(\".\"))\n      return `${acc}[${cur}]`;\n    return `${acc}.${cur}`;\n  }, \"\");\n}\nfunction validateConfigPath(state, path, base = []) {\n  let keys = Array.isArray(path) ? path : stringToPath(path);\n  let fullPath = [...base, ...keys];\n  let value = dlv8(state.config, fullPath);\n  let suggestions = [];\n  let transformThemeValue = state.modules?.transformThemeValue?.module ?? ((_) => (value2) => value2);\n  if (fullPath[0] === \"theme\" && fullPath[1]) {\n    value = transformThemeValue(fullPath[1])(value);\n  }\n  function findAlternativePath() {\n    let points = combinations(\"123456789\".substr(0, keys.length - 1)).map(\n      (x) => x.split(\"\").map((x2) => parseInt(x2, 10))\n    );\n    let possibilities = points.map((p) => {\n      let result = [];\n      let i = 0;\n      p.forEach((x) => {\n        result.push(keys.slice(i, x).join(\".\"));\n        i = x;\n      });\n      result.push(keys.slice(i).join(\".\"));\n      return result;\n    }).slice(1);\n    return possibilities.find((possibility) => validateConfigPath(state, possibility, base).isValid);\n  }\n  if (typeof value === \"undefined\") {\n    let reason = `'${pathToString(path)}' does not exist in your theme config.`;\n    let parentPath = [...base, ...keys.slice(0, keys.length - 1)];\n    let parentValue = dlv8(state.config, parentPath);\n    if (isObject(parentValue)) {\n      let closestValidKey = closest(\n        keys[keys.length - 1],\n        Object.keys(parentValue).filter(\n          (key) => validateConfigPath(state, [...parentPath, key]).isValid\n        )\n      );\n      if (closestValidKey) {\n        suggestions.push(pathToString([...keys.slice(0, keys.length - 1), closestValidKey]));\n        reason += ` Did you mean '${suggestions[0]}'?`;\n      }\n    } else {\n      let altPath = findAlternativePath();\n      if (altPath) {\n        return {\n          isValid: false,\n          reason: `${reason} Did you mean '${pathToString(altPath)}'?`,\n          suggestions: [pathToString(altPath)]\n        };\n      }\n    }\n    return {\n      isValid: false,\n      reason,\n      suggestions\n    };\n  }\n  if (!(typeof value === \"string\" || typeof value === \"number\" || value instanceof String || value instanceof Number || Array.isArray(value) || typeof value === \"function\")) {\n    let reason = `'${pathToString(path)}' was found but does not resolve to a valid theme value.`;\n    if (isObject(value)) {\n      let validKeys = Object.keys(value).filter(\n        (key) => validateConfigPath(state, [...keys, key], base).isValid\n      );\n      if (validKeys.length) {\n        suggestions.push(...validKeys.map((validKey) => pathToString([...keys, validKey])));\n        reason += ` Did you mean something like '${suggestions[0]}'?`;\n      }\n    }\n    return {\n      isValid: false,\n      reason,\n      suggestions\n    };\n  }\n  let isValid = true;\n  for (let i = keys.length - 1; i >= 0; i--) {\n    let key = keys[i];\n    let parentValue = dlv8(state.config, [...base, ...keys.slice(0, i)]);\n    if (/^[0-9]+$/.test(key)) {\n      if (!isObject(parentValue) && !Array.isArray(parentValue)) {\n        isValid = false;\n        break;\n      }\n    } else if (!isObject(parentValue)) {\n      isValid = false;\n      break;\n    }\n  }\n  if (!isValid) {\n    let reason = `'${pathToString(path)}' does not exist in your theme config.`;\n    let altPath = findAlternativePath();\n    if (altPath) {\n      return {\n        isValid: false,\n        reason: `${reason} Did you mean '${pathToString(altPath)}'?`,\n        suggestions: [pathToString(altPath)]\n      };\n    }\n    return {\n      isValid: false,\n      reason,\n      suggestions: []\n    };\n  }\n  return {\n    isValid: true,\n    value\n  };\n}\nfunction getInvalidConfigPathDiagnostics(state, document, settings) {\n  let severity = settings.tailwindCSS.lint.invalidConfigPath;\n  if (severity === \"ignore\")\n    return [];\n  let diagnostics = [];\n  findHelperFunctionsInDocument(state, document).forEach((helperFn) => {\n    let base = helperFn.helper === \"theme\" ? [\"theme\"] : [];\n    let result = validateConfigPath(state, helperFn.path, base);\n    if (result.isValid === true) {\n      return;\n    }\n    diagnostics.push({\n      code: \"invalidConfigPath\" /* InvalidConfigPath */,\n      range: helperFn.ranges.path,\n      severity: severity === \"error\" ? 1 : 2,\n      message: result.reason,\n      suggestions: result.suggestions\n    });\n  });\n  return diagnostics;\n}\n\n// src/diagnostics/getInvalidTailwindDirectiveDiagnostics.ts\nfunction getInvalidTailwindDirectiveDiagnostics(state, document, settings) {\n  let severity = settings.tailwindCSS.lint.invalidTailwindDirective;\n  if (severity === \"ignore\")\n    return [];\n  let diagnostics = [];\n  let ranges = [];\n  if (isCssDoc(state, document)) {\n    ranges.push(void 0);\n  } else {\n    let boundaries = getLanguageBoundaries(state, document);\n    if (!boundaries)\n      return [];\n    ranges.push(...boundaries.filter((b) => b.type === \"css\").map(({ range }) => range));\n  }\n  let regex;\n  if (isSemicolonlessCssLanguage(document.languageId, state.editor?.userLanguages)) {\n    regex = /(?:\\s|^)@tailwind\\s+(?<value>[^\\r\\n]+)/g;\n  } else {\n    regex = /(?:\\s|^)@tailwind\\s+(?<value>[^;]+)/g;\n  }\n  let hasVariantsDirective = state.jit && gte(state.version, \"2.1.99\");\n  ranges.forEach((range) => {\n    let text2 = getTextWithoutComments(document, \"css\", range);\n    let matches = findAll(regex, text2);\n    let valid = [\n      \"utilities\",\n      \"components\",\n      \"screens\",\n      gte(state.version, \"1.0.0-beta.1\") ? \"base\" : \"preflight\",\n      hasVariantsDirective && \"variants\"\n    ].filter(Boolean);\n    let suggestable = valid;\n    if (hasVariantsDirective) {\n      suggestable = suggestable.filter((value) => value !== \"screens\");\n    }\n    matches.forEach((match) => {\n      if (valid.includes(match.groups.value)) {\n        return null;\n      }\n      let message = `'${match.groups.value}' is not a valid value.`;\n      let suggestions = [];\n      if (match.groups.value === \"preflight\") {\n        suggestions.push(\"base\");\n        message += ` Did you mean 'base'?`;\n      } else {\n        let suggestion = closest(match.groups.value, suggestable);\n        if (suggestion) {\n          suggestions.push(suggestion);\n          message += ` Did you mean '${suggestion}'?`;\n        }\n      }\n      diagnostics.push({\n        code: \"invalidTailwindDirective\" /* InvalidTailwindDirective */,\n        range: absoluteRange(\n          {\n            start: indexToPosition(text2, match.index + match[0].length - match.groups.value.length),\n            end: indexToPosition(text2, match.index + match[0].length)\n          },\n          range\n        ),\n        severity: severity === \"error\" ? 1 : 2,\n        message,\n        suggestions\n      });\n    });\n  });\n  return diagnostics;\n}\n\n// src/diagnostics/getRecommendedVariantOrderDiagnostics.ts\nasync function getRecommendedVariantOrderDiagnostics(state, document, settings) {\n  if (state.v4)\n    return [];\n  if (!state.jit)\n    return [];\n  if (gte(state.version, \"2.99.0\"))\n    return [];\n  let severity = settings.tailwindCSS.lint.recommendedVariantOrder;\n  if (severity === \"ignore\")\n    return [];\n  let diagnostics = [];\n  const classLists = await findClassListsInDocument(state, document);\n  classLists.forEach((classList) => {\n    const classNames = getClassNamesInClassList(classList, state.blocklist);\n    classNames.forEach((className) => {\n      let { rules } = generateRules(state, [className.className]);\n      if (rules.length === 0) {\n        return;\n      }\n      let order = state.jitContext.variantOrder ?? state.jitContext.offsets.variantOffsets;\n      let { variants, offset } = getVariantsFromClassName(state, className.className);\n      let sortedVariants = [...variants].sort((a, b) => bigSign(order.get(b) - order.get(a)));\n      if (!equalExact(variants, sortedVariants)) {\n        diagnostics.push({\n          code: \"recommendedVariantOrder\" /* RecommendedVariantOrder */,\n          suggestions: [\n            [...sortedVariants, className.className.substr(offset)].join(state.separator)\n          ],\n          range: className.range,\n          severity: severity === \"error\" ? 1 : 2,\n          message: \"Variants are not in the recommended order, which may cause unexpected CSS output.\"\n        });\n      }\n    });\n  });\n  return diagnostics;\n}\n\n// src/diagnostics/diagnosticsProvider.ts\nasync function doValidate(state, document, only = [\n  \"cssConflict\" /* CssConflict */,\n  \"invalidApply\" /* InvalidApply */,\n  \"invalidScreen\" /* InvalidScreen */,\n  \"invalidVariant\" /* InvalidVariant */,\n  \"invalidConfigPath\" /* InvalidConfigPath */,\n  \"invalidTailwindDirective\" /* InvalidTailwindDirective */,\n  \"recommendedVariantOrder\" /* RecommendedVariantOrder */\n]) {\n  const settings = await state.editor.getConfiguration(document.uri);\n  return settings.tailwindCSS.validate ? [\n    ...only.includes(\"cssConflict\" /* CssConflict */) ? await getCssConflictDiagnostics(state, document, settings) : [],\n    ...only.includes(\"invalidApply\" /* InvalidApply */) ? await getInvalidApplyDiagnostics(state, document, settings) : [],\n    ...only.includes(\"invalidScreen\" /* InvalidScreen */) ? getInvalidScreenDiagnostics(state, document, settings) : [],\n    ...only.includes(\"invalidVariant\" /* InvalidVariant */) ? getInvalidVariantDiagnostics(state, document, settings) : [],\n    ...only.includes(\"invalidConfigPath\" /* InvalidConfigPath */) ? getInvalidConfigPathDiagnostics(state, document, settings) : [],\n    ...only.includes(\"invalidTailwindDirective\" /* InvalidTailwindDirective */) ? getInvalidTailwindDirectiveDiagnostics(state, document, settings) : [],\n    ...only.includes(\"recommendedVariantOrder\" /* RecommendedVariantOrder */) ? await getRecommendedVariantOrderDiagnostics(state, document, settings) : []\n  ] : [];\n}\n\n// src/hoverProvider.ts\nimport dlv9 from \"dlv\";\nasync function doHover(state, document, position) {\n  return await provideClassNameHover(state, document, position) || await provideCssHelperHover(state, document, position);\n}\nasync function provideCssHelperHover(state, document, position) {\n  if (!isCssContext(state, document, position)) {\n    return null;\n  }\n  const settings = await state.editor.getConfiguration(document.uri);\n  let helperFns = findHelperFunctionsInRange(document, {\n    start: { line: position.line, character: 0 },\n    end: { line: position.line + 1, character: 0 }\n  });\n  for (let helperFn of helperFns) {\n    if (!isWithinRange(position, helperFn.ranges.path))\n      continue;\n    let validated = validateConfigPath(\n      state,\n      helperFn.path,\n      helperFn.helper === \"theme\" ? [\"theme\"] : []\n    );\n    let value = validated.isValid ? stringifyConfigValue(validated.value) : null;\n    if (value === null)\n      return null;\n    if (settings.tailwindCSS.showPixelEquivalents) {\n      value = addPixelEquivalentsToValue(value, settings.tailwindCSS.rootFontSize);\n    }\n    return {\n      contents: { kind: \"markdown\", value: [\"```plaintext\", value, \"```\"].join(\"\\n\") },\n      range: helperFn.ranges.path\n    };\n  }\n  return null;\n}\nasync function provideClassNameHover(state, document, position) {\n  let className = await findClassNameAtPosition(state, document, position);\n  if (className === null)\n    return null;\n  if (state.v4) {\n    let root2 = state.designSystem.compile([className.className])[0];\n    if (root2.nodes.length === 0) {\n      return null;\n    }\n    return {\n      contents: {\n        language: \"css\",\n        value: await stringifyRoot(state, root2, document.uri)\n      },\n      range: className.range\n    };\n  }\n  if (state.jit) {\n    let { root: root2, rules } = generateRules(state, [className.className]);\n    if (rules.length === 0) {\n      return null;\n    }\n    return {\n      contents: {\n        language: \"css\",\n        value: await stringifyRoot(state, root2, document.uri)\n      },\n      range: className.range\n    };\n  }\n  const parts = getClassNameParts(state, className.className);\n  if (!parts)\n    return null;\n  if (isCssContext(state, document, position)) {\n    let validated = validateApply(state, parts);\n    if (validated === null || validated.isApplyable === false) {\n      return null;\n    }\n  }\n  const settings = await state.editor.getConfiguration(document.uri);\n  const css = stringifyCss(\n    className.className,\n    dlv9(state.classNames.classNames, [...parts, \"__info\"]),\n    settings\n  );\n  if (!css)\n    return null;\n  return {\n    contents: {\n      language: \"css\",\n      value: css\n    },\n    range: className.range\n  };\n}\n\n// src/util/removeRangesFromString.ts\nimport lineColumn2 from \"line-column\";\nfunction removeRangesFromString(str, rangeOrRanges) {\n  let ranges = ensureArray(rangeOrRanges);\n  let finder = lineColumn2(str + \"\\n\", { origin: 0 });\n  let indexRanges = [];\n  ranges.forEach((range) => {\n    let start = finder.toIndex(range.start.line, range.start.character);\n    let end = finder.toIndex(range.end.line, range.end.character);\n    for (let i2 = start - 1; i2 >= 0; i2--) {\n      if (/\\s/.test(str.charAt(i2))) {\n        start = i2;\n      } else {\n        break;\n      }\n    }\n    indexRanges.push({ start, end });\n  });\n  indexRanges.sort((a, b) => a.start - b.start);\n  let result = \"\";\n  let i = 0;\n  indexRanges.forEach((indexRange) => {\n    result += str.substring(i, indexRange.start);\n    i = indexRange.end;\n  });\n  result += str.substring(i);\n  return result.trim();\n}\n\n// src/codeActions/provideCssConflictCodeActions.ts\nasync function provideCssConflictCodeActions(_state, params, diagnostic) {\n  return [\n    {\n      title: `Delete ${joinWithAnd(\n        diagnostic.otherClassNames.map((otherClassName) => `'${otherClassName.className}'`)\n      )}`,\n      kind: \"quickfix\",\n      // CodeActionKind.QuickFix,\n      diagnostics: [diagnostic],\n      edit: {\n        changes: {\n          [params.textDocument.uri]: [\n            {\n              range: diagnostic.className.classList.range,\n              newText: removeRangesFromString(\n                diagnostic.className.classList.classList,\n                diagnostic.otherClassNames.map((otherClassName) => otherClassName.relativeRange)\n              )\n            }\n          ]\n        }\n      }\n    }\n  ];\n}\n\n// src/codeActions/provideInvalidApplyCodeActions.ts\nimport dlv10 from \"dlv\";\nimport detectIndent from \"detect-indent\";\n\n// src/util/cssObjToAst.ts\nvar IMPORTANT = /\\s*!important\\s*$/i;\nvar unitless = {\n  \"box-flex\": true,\n  \"box-flex-group\": true,\n  \"column-count\": true,\n  flex: true,\n  \"flex-grow\": true,\n  \"flex-positive\": true,\n  \"flex-shrink\": true,\n  \"flex-negative\": true,\n  \"font-weight\": true,\n  \"line-clamp\": true,\n  \"line-height\": true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  \"tab-size\": true,\n  widows: true,\n  \"z-index\": true,\n  zoom: true,\n  \"fill-opacity\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true\n};\nfunction dashify(str) {\n  return str.replace(/([A-Z])/g, \"-$1\").replace(/^ms-/, \"-ms-\").toLowerCase();\n}\nfunction decl(parent, name, value, postcss4) {\n  if (value === false || value === null)\n    return;\n  name = dashify(name);\n  if (typeof value === \"number\") {\n    if (value === 0 || unitless[name]) {\n      value = value.toString();\n    } else {\n      value = value.toString() + \"px\";\n    }\n  }\n  if (name === \"css-float\")\n    name = \"float\";\n  if (IMPORTANT.test(value)) {\n    value = value.replace(IMPORTANT, \"\");\n    parent.push(postcss4.decl({ prop: name, value, important: true }));\n  } else {\n    parent.push(postcss4.decl({ prop: name, value }));\n  }\n}\nfunction atRule(parent, parts, value, postcss4) {\n  var node = postcss4.atRule({ name: parts[1], params: parts[3] || \"\" });\n  if (typeof value === \"object\") {\n    node.nodes = [];\n    parse2(value, node, postcss4);\n  }\n  parent.push(node);\n}\nfunction parse2(obj, parent, postcss4) {\n  var name, value, node, i;\n  for (name in obj) {\n    if (obj.hasOwnProperty(name)) {\n      value = obj[name];\n      if (value === null || typeof value === \"undefined\") {\n        continue;\n      } else if (name[0] === \"@\") {\n        var parts = name.match(/@([^\\s]+)(\\s+([\\w\\W]*)\\s*)?/);\n        if (Array.isArray(value)) {\n          for (i = 0; i < value.length; i++) {\n            atRule(parent, parts, value[i], postcss4);\n          }\n        } else {\n          atRule(parent, parts, value, postcss4);\n        }\n      } else if (Array.isArray(value)) {\n        for (i = 0; i < value.length; i++) {\n          decl(parent, name, value[i], postcss4);\n        }\n      } else if (typeof value === \"object\") {\n        node = postcss4.rule({ selector: name });\n        parse2(value, node, postcss4);\n        parent.push(node);\n      } else {\n        decl(parent, name, value, postcss4);\n      }\n    }\n  }\n}\nfunction cssObjToAst(obj, postcss4) {\n  var root2 = postcss4.root();\n  parse2(obj, root2, postcss4);\n  return root2;\n}\n\n// src/codeActions/provideInvalidApplyCodeActions.ts\nimport { dset } from \"dset\";\nimport selectorParser from \"postcss-selector-parser\";\nasync function provideInvalidApplyCodeActions(state, document, diagnostic) {\n  if (!document)\n    return [];\n  let documentText = getTextWithoutComments(document, \"css\");\n  let cssRange;\n  let cssText = documentText;\n  const { postcss: postcss4 } = state.modules;\n  let changes = [];\n  let totalClassNamesInClassList = diagnostic.className.classList.classList.split(/\\s+/).length;\n  let className = diagnostic.className.className;\n  let classNameParts = getClassNameParts(state, className);\n  let classNameInfo = dlv10(state.classNames.classNames, classNameParts);\n  if (Array.isArray(classNameInfo)) {\n    return [];\n  }\n  if (!isCssDoc(state, document)) {\n    let languageBoundaries = getLanguageBoundaries(state, document);\n    if (!languageBoundaries)\n      return [];\n    cssRange = languageBoundaries.filter((b) => b.type === \"css\").find(({ range }) => isWithinRange(diagnostic.range.start, range))?.range;\n    if (!cssRange)\n      return [];\n    cssText = getTextWithoutComments(document, \"css\", cssRange);\n  }\n  try {\n    await postcss4.module([\n      // TODO: use plain function?\n      // @ts-ignore\n      postcss4.module.plugin(\"\", (_options = {}) => {\n        return (root2) => {\n          root2.walkRules((rule2) => {\n            if (changes.length)\n              return false;\n            rule2.walkAtRules(\"apply\", (atRule2) => {\n              let atRuleRange = postcssSourceToRange(atRule2.source);\n              if (cssRange) {\n                atRuleRange = absoluteRange(atRuleRange, cssRange);\n              }\n              if (!isWithinRange(diagnostic.range.start, atRuleRange))\n                return void 0;\n              let ast = classNameToAst(\n                state,\n                classNameParts,\n                rule2.selector,\n                diagnostic.className.classList.important\n              );\n              if (!ast)\n                return false;\n              rule2.after(ast.nodes);\n              let insertedRule = rule2.next();\n              if (!insertedRule)\n                return false;\n              if (totalClassNamesInClassList === 1) {\n                atRule2.remove();\n              } else {\n                changes.push({\n                  range: diagnostic.className.classList.range,\n                  newText: removeRangesFromString(\n                    diagnostic.className.classList.classList,\n                    diagnostic.className.relativeRange\n                  )\n                });\n              }\n              let ruleRange = postcssSourceToRange(rule2.source);\n              if (cssRange) {\n                ruleRange = absoluteRange(ruleRange, cssRange);\n              }\n              let outputIndent;\n              let documentIndent = detectIndent(cssText);\n              changes.push({\n                range: ruleRange,\n                newText: rule2.toString() + (insertedRule.raws.before || \"\\n\\n\") + insertedRule.toString().replace(/\\n\\s*\\n/g, \"\\n\").replace(/(@apply [^;\\n]+)$/gm, \"$1;\").replace(/([^\\s^]){$/gm, \"$1 {\").replace(/^\\s+/gm, (m) => {\n                  if (typeof outputIndent === \"undefined\")\n                    outputIndent = m;\n                  return m.replace(new RegExp(outputIndent, \"g\"), documentIndent.indent);\n                }).replace(/^(\\s+)(.*?[^{}]\\n)([^\\s}])/gm, \"$1$2$1$3\")\n              });\n              return false;\n            });\n            return void 0;\n          });\n        };\n      })\n    ]).process(cssText, { from: void 0 });\n  } catch (_) {\n    return [];\n  }\n  if (!changes.length) {\n    return [];\n  }\n  return [\n    {\n      title: \"Extract to new rule\",\n      kind: \"quickfix\",\n      // CodeActionKind.QuickFix,\n      diagnostics: [diagnostic],\n      edit: {\n        changes: {\n          [document.uri]: changes\n        }\n      }\n    }\n  ];\n}\nfunction postcssSourceToRange(source) {\n  return {\n    start: {\n      line: source.start.line - 1,\n      character: source.start.column - 1\n    },\n    end: {\n      line: source.end.line - 1,\n      character: source.end.column\n    }\n  };\n}\nfunction classNameToAst(state, classNameParts, selector, important = false) {\n  const baseClassName = classNameParts[classNameParts.length - 1];\n  const validatedBaseClassName = validateApply(state, [baseClassName]);\n  if (validatedBaseClassName === null || validatedBaseClassName.isApplyable === false) {\n    return null;\n  }\n  const meta = getClassNameMeta(state, classNameParts);\n  if (Array.isArray(meta))\n    return null;\n  let context = meta.context;\n  let pseudo = meta.pseudo;\n  const globalContexts = state.classNames.context;\n  const path = [];\n  for (let i = 0; i < classNameParts.length - 1; i++) {\n    let part = classNameParts[i];\n    let common = globalContexts[part];\n    if (!common)\n      return null;\n    if (state.screens.includes(part)) {\n      path.push(`@screen ${part}`);\n      context = context.filter((con) => !common.includes(con));\n    }\n  }\n  path.push(...context);\n  let obj = {};\n  for (let i = 1; i <= path.length; i++) {\n    dset(obj, path.slice(0, i), {});\n  }\n  selector = appendPseudosToSelector(selector, pseudo);\n  if (selector === null)\n    return null;\n  let rule2 = {\n    [selector]: {\n      [`@apply ${baseClassName}${important ? \" !important\" : \"\"}`]: \"\"\n    }\n  };\n  if (path.length) {\n    dset(obj, path, rule2);\n  } else {\n    obj = rule2;\n  }\n  return cssObjToAst(obj, state.modules.postcss);\n}\nfunction appendPseudosToSelector(selector, pseudos) {\n  if (pseudos.length === 0)\n    return selector;\n  let canTransform = true;\n  let transformedSelector = selectorParser((selectors) => {\n    flatten(selectors.split((_) => true)).forEach((sel) => {\n      for (let i = sel.nodes.length - 1; i >= 0; i--) {\n        if (sel.nodes[i].type !== \"pseudo\") {\n          break;\n        } else if (pseudos.includes(sel.nodes[i].value)) {\n          canTransform = false;\n          break;\n        }\n      }\n      if (canTransform) {\n        pseudos.forEach((p) => {\n          sel.append(selectorParser.pseudo({ value: p }));\n        });\n      }\n    });\n  }).processSync(selector);\n  if (!canTransform)\n    return null;\n  return transformedSelector;\n}\n\n// src/codeActions/provideSuggestionCodeActions.ts\nfunction provideSuggestionCodeActions(_state, params, diagnostic) {\n  return diagnostic.suggestions.map((suggestion) => ({\n    title: `Replace with '${suggestion}'`,\n    kind: \"quickfix\",\n    // CodeActionKind.QuickFix,\n    diagnostics: [diagnostic],\n    edit: {\n      changes: {\n        [params.textDocument.uri]: [\n          {\n            range: diagnostic.range,\n            newText: suggestion\n          }\n        ]\n      }\n    }\n  }));\n}\n\n// src/codeActions/codeActionProvider.ts\nasync function getDiagnosticsFromCodeActionParams(state, params, document, only) {\n  if (!document)\n    return [];\n  let diagnostics = await doValidate(state, document, only);\n  return params.context.diagnostics.map((diagnostic) => {\n    return diagnostics.find((d) => {\n      return d.code === diagnostic.code && d.message === diagnostic.message && rangesEqual(d.range, diagnostic.range);\n    });\n  }).filter(Boolean);\n}\nasync function doCodeActions(state, params, document) {\n  if (!state.enabled) {\n    return [];\n  }\n  let diagnostics = await getDiagnosticsFromCodeActionParams(\n    state,\n    params,\n    document,\n    params.context.diagnostics.map((diagnostic) => diagnostic.code).filter(Boolean)\n  );\n  return Promise.all(\n    diagnostics.map((diagnostic) => {\n      if (isInvalidApplyDiagnostic(diagnostic)) {\n        return provideInvalidApplyCodeActions(state, document, diagnostic);\n      }\n      if (isCssConflictDiagnostic(diagnostic)) {\n        return provideCssConflictCodeActions(state, params, diagnostic);\n      }\n      if (isInvalidConfigPathDiagnostic(diagnostic) || isInvalidTailwindDirectiveDiagnostic(diagnostic) || isInvalidScreenDiagnostic(diagnostic) || isInvalidVariantDiagnostic(diagnostic) || isRecommendedVariantOrderDiagnostic(diagnostic)) {\n        return provideSuggestionCodeActions(state, params, diagnostic);\n      }\n      return [];\n    })\n  ).then(flatten).then((x) => dedupeBy(x, (item) => JSON.stringify(item.edit)));\n}\n\n// src/documentColorProvider.ts\nimport dlv11 from \"dlv\";\nasync function getDocumentColors(state, document) {\n  let colors = [];\n  if (!state.enabled)\n    return colors;\n  let settings = await state.editor.getConfiguration(document.uri);\n  if (settings.tailwindCSS.colorDecorators === false)\n    return colors;\n  let classLists = await findClassListsInDocument(state, document);\n  classLists.forEach((classList) => {\n    let classNames = getClassNamesInClassList(classList, state.blocklist);\n    classNames.forEach((className) => {\n      let color = getColor(state, className.className);\n      if (color === null || typeof color === \"string\" || (color.alpha ?? 1) === 0) {\n        return;\n      }\n      colors.push({\n        range: className.range,\n        color: culoriColorToVscodeColor(color)\n      });\n    });\n  });\n  let helperFns = findHelperFunctionsInDocument(state, document);\n  helperFns.forEach((fn) => {\n    let keys = stringToPath(fn.path);\n    let base = fn.helper === \"theme\" ? [\"theme\"] : [];\n    let value = dlv11(state.config, [...base, ...keys]);\n    let color = getColorFromValue(value);\n    if (color && typeof color !== \"string\" && (color.alpha ?? 1) !== 0) {\n      colors.push({ range: fn.ranges.path, color: culoriColorToVscodeColor(color) });\n    }\n  });\n  return dedupeByRange(colors);\n}\nexport {\n  DiagnosticKind,\n  completionsFromClassList,\n  culoriColorToVscodeColor,\n  doCodeActions,\n  doComplete2 as doComplete,\n  doHover,\n  doValidate,\n  formatColor,\n  getColor,\n  getColorFromValue,\n  getDocumentColors,\n  isCssConflictDiagnostic,\n  isInvalidApplyDiagnostic,\n  isInvalidConfigPathDiagnostic,\n  isInvalidScreenDiagnostic,\n  isInvalidTailwindDirectiveDiagnostic,\n  isInvalidVariantDiagnostic,\n  isRecommendedVariantOrderDiagnostic,\n  resolveCompletionItem\n};\n", "export const doComplete = null\r\nexport const extractAbbreviation = null\r\nexport const isAbbreviationValid = null\r\n", "export default null\r\n", "export function dset(obj, keys, val) {\n\tkeys.split && (keys=keys.split('.'));\n\tvar i=0, l=keys.length, t=obj, x, k;\n\twhile (i < l) {\n\t\tk = keys[i++];\n\t\tif (k === '__proto__' || k === 'constructor' || k === 'prototype') break;\n\t\tt = t[k] = (i === l) ? val : (typeof(x=t[k])===typeof(keys)) ? x : (keys[i]*0 !== 0 || !!~(''+keys[i]).indexOf('.')) ? {} : [];\n\t}\n}\n", "import {\r\n  type AugmentedDiagnostic,\r\n  doCodeActions,\r\n  doComplete,\r\n  doHover,\r\n  doValidate,\r\n  type EditorState,\r\n  getColor,\r\n  getDocumentColors,\r\n  resolveCompletionItem\r\n} from '@tailwindcss/language-service'\r\nimport { type MonacoTailwindcssOptions, type TailwindConfig } from 'monaco-tailwindcss'\r\nimport { type TailwindWorkerOptions } from 'monaco-tailwindcss/tailwindcss.worker'\r\nimport { initialize as initializeWorker } from 'monaco-worker-manager/worker'\r\nimport postcss from 'postcss'\r\nimport postcssSelectorParser from 'postcss-selector-parser'\r\nimport { type Config } from 'tailwindcss'\r\nimport expandApplyAtRules from 'tailwindcss/src/lib/expandApplyAtRules.js'\r\nimport { generateRules } from 'tailwindcss/src/lib/generateRules.js'\r\nimport { type ChangedContent, createContext } from 'tailwindcss/src/lib/setupContextUtils.js'\r\nimport processTailwindFeatures from 'tailwindcss/src/processTailwindFeatures.js'\r\nimport resolveConfig from 'tailwindcss/src/public/resolve-config.js'\r\nimport {\r\n  type CodeAction,\r\n  type CodeActionContext,\r\n  type ColorInformation,\r\n  type CompletionContext,\r\n  type CompletionItem,\r\n  type CompletionList,\r\n  type Hover,\r\n  type Position,\r\n  type Range\r\n} from 'vscode-languageserver-protocol'\r\nimport { TextDocument } from 'vscode-languageserver-textdocument'\r\n\r\nimport { type JitState } from './types.js'\r\n\r\nexport interface TailwindcssWorker {\r\n  doCodeActions: (\r\n    uri: string,\r\n    languageId: string,\r\n    range: Range,\r\n    context: CodeActionContext\r\n  ) => CodeAction[] | undefined\r\n\r\n  doComplete: (\r\n    uri: string,\r\n    languageId: string,\r\n    position: Position,\r\n    context: CompletionContext\r\n  ) => CompletionList | undefined\r\n\r\n  doHover: (uri: string, languageId: string, position: Position) => Hover | undefined\r\n\r\n  doValidate: (uri: string, languageId: string) => AugmentedDiagnostic[] | undefined\r\n\r\n  generateStylesFromContent: (css: string, content: ChangedContent[]) => string\r\n\r\n  getDocumentColors: (uri: string, languageId: string) => ColorInformation[] | undefined\r\n\r\n  resolveCompletionItem: (item: CompletionItem) => CompletionItem\r\n}\r\n\r\nasync function stateFromConfig(\r\n  configPromise: PromiseLike<TailwindConfig> | TailwindConfig\r\n): Promise<JitState> {\r\n  const preparedTailwindConfig = await configPromise\r\n  const config = resolveConfig(preparedTailwindConfig)\r\n  const jitContext = createContext(config)\r\n\r\n  const state: JitState = {\r\n    version: '3.0.0',\r\n    blocklist: [],\r\n    config,\r\n    enabled: true,\r\n    modules: {\r\n      postcss: {\r\n        module: postcss,\r\n        version: ''\r\n      },\r\n      postcssSelectorParser: { module: postcssSelectorParser },\r\n      jit: {\r\n        createContext: { module: createContext },\r\n        expandApplyAtRules: { module: expandApplyAtRules },\r\n        generateRules: { module: generateRules }\r\n      }\r\n    },\r\n    classNames: {\r\n      classNames: {},\r\n      context: {}\r\n    },\r\n    jit: true,\r\n    jitContext,\r\n    separator: config.separator,\r\n    screens: config.theme?.screens ? Object.keys(config.theme.screens) : [],\r\n    variants: jitContext.getVariants(),\r\n    editor: {\r\n      userLanguages: {},\r\n      capabilities: {\r\n        configuration: true,\r\n        diagnosticRelatedInformation: true,\r\n        itemDefaults: []\r\n      },\r\n      // eslint-disable-next-line require-await\r\n      async getConfiguration() {\r\n        return {\r\n          editor: { tabSize: 2 },\r\n          // Default values are based on\r\n          // https://github.com/tailwindlabs/tailwindcss-intellisense/blob/v0.9.1/packages/tailwindcss-language-server/src/server.ts#L259-L287\r\n          tailwindCSS: {\r\n            emmetCompletions: false,\r\n            classAttributes: ['class', 'className', 'ngClass'],\r\n            codeActions: true,\r\n            hovers: true,\r\n            suggestions: true,\r\n            validate: true,\r\n            colorDecorators: true,\r\n            rootFontSize: 16,\r\n            lint: {\r\n              cssConflict: 'warning',\r\n              invalidApply: 'error',\r\n              invalidScreen: 'error',\r\n              invalidVariant: 'error',\r\n              invalidConfigPath: 'error',\r\n              invalidTailwindDirective: 'error',\r\n              recommendedVariantOrder: 'warning'\r\n            },\r\n            showPixelEquivalents: true,\r\n            includeLanguages: {},\r\n            files: {\r\n              // Upstream defines these values, but we don\u2019t need them.\r\n              exclude: []\r\n            },\r\n            experimental: {\r\n              classRegex: [],\r\n              // Upstream types are wrong\r\n              configFile: {}\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // This option takes some properties that we don\u2019t have nor need.\r\n    } as Partial<EditorState> as EditorState\r\n  }\r\n\r\n  state.classList = jitContext\r\n    .getClassList()\r\n    .filter((className) => className !== '*')\r\n    .map((className) => [className, { color: getColor(state, className) }])\r\n\r\n  return state\r\n}\r\n\r\nexport function initialize(tailwindWorkerOptions?: TailwindWorkerOptions): void {\r\n  initializeWorker<TailwindcssWorker, MonacoTailwindcssOptions>((ctx, options) => {\r\n    const preparedTailwindConfig =\r\n      tailwindWorkerOptions?.prepareTailwindConfig?.(options.tailwindConfig) ??\r\n      options.tailwindConfig ??\r\n      ({} as Config)\r\n    if (typeof preparedTailwindConfig !== 'object') {\r\n      throw new TypeError(\r\n        `Expected tailwindConfig to resolve to an object, but got: ${JSON.stringify(\r\n          preparedTailwindConfig\r\n        )}`\r\n      )\r\n    }\r\n\r\n    const statePromise = stateFromConfig(preparedTailwindConfig)\r\n\r\n    const withDocument =\r\n      <A extends unknown[], R>(\r\n        fn: (state: JitState, document: TextDocument, ...args: A) => Promise<R>\r\n      ) =>\r\n      (uri: string, languageId: string, ...args: A): Promise<R> | undefined => {\r\n        const models = ctx.getMirrorModels()\r\n        for (const model of models) {\r\n          if (String(model.uri) === uri) {\r\n            return statePromise.then((state) =>\r\n              fn(\r\n                state,\r\n                TextDocument.create(uri, languageId, model.version, model.getValue()),\r\n                ...args\r\n              )\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n    return {\r\n      doCodeActions: withDocument((state, textDocument, range, context) =>\r\n        doCodeActions(state, { range, context, textDocument }, textDocument)\r\n      ),\r\n\r\n      doComplete: withDocument(doComplete),\r\n\r\n      doHover: withDocument(doHover),\r\n\r\n      doValidate: withDocument(doValidate),\r\n\r\n      async generateStylesFromContent(css, content) {\r\n        const { config } = await statePromise\r\n        const tailwind = processTailwindFeatures(\r\n          (processOptions) => () => processOptions.createContext(config, content)\r\n        )\r\n\r\n        const processor = postcss([tailwind])\r\n\r\n        const result = await processor.process(css)\r\n        return result.css\r\n      },\r\n\r\n      getDocumentColors: withDocument(getDocumentColors),\r\n\r\n      async resolveCompletionItem(item) {\r\n        return resolveCompletionItem(await statePromise, item)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// Side effect initialization - but this function can be called more than once. Last applies.\r\ninitialize()\r\n", "import postcss from 'postcss'\nimport parser from 'postcss-selector-parser'\n\nimport { resolveMatches } from './generateRules'\nimport escapeClassName from '../util/escapeClassName'\nimport { applyImportantSelector } from '../util/applyImportantSelector'\nimport { movePseudos } from '../util/pseudoElements'\n\n/** @typedef {Map<string, [any, import('postcss').Rule[]]>} ApplyCache */\n\nfunction extractClasses(node) {\n  /** @type {Map<string, Set<string>>} */\n  let groups = new Map()\n\n  let container = postcss.root({ nodes: [node.clone()] })\n\n  container.walkRules((rule) => {\n    parser((selectors) => {\n      selectors.walkClasses((classSelector) => {\n        let parentSelector = classSelector.parent.toString()\n\n        let classes = groups.get(parentSelector)\n        if (!classes) {\n          groups.set(parentSelector, (classes = new Set()))\n        }\n\n        classes.add(classSelector.value)\n      })\n    }).processSync(rule.selector)\n  })\n\n  let normalizedGroups = Array.from(groups.values(), (classes) => Array.from(classes))\n  let classes = normalizedGroups.flat()\n\n  return Object.assign(classes, { groups: normalizedGroups })\n}\n\nlet selectorExtractor = parser()\n\n/**\n * @param {string} ruleSelectors\n */\nfunction extractSelectors(ruleSelectors) {\n  return selectorExtractor.astSync(ruleSelectors)\n}\n\nfunction extractBaseCandidates(candidates, separator) {\n  let baseClasses = new Set()\n\n  for (let candidate of candidates) {\n    baseClasses.add(candidate.split(separator).pop())\n  }\n\n  return Array.from(baseClasses)\n}\n\nfunction prefix(context, selector) {\n  let prefix = context.tailwindConfig.prefix\n  return typeof prefix === 'function' ? prefix(selector) : prefix + selector\n}\n\nfunction* pathToRoot(node) {\n  yield node\n  while (node.parent) {\n    yield node.parent\n    node = node.parent\n  }\n}\n\n/**\n * Only clone the node itself and not its children\n *\n * @param {*} node\n * @param {*} overrides\n * @returns\n */\nfunction shallowClone(node, overrides = {}) {\n  let children = node.nodes\n  node.nodes = []\n\n  let tmp = node.clone(overrides)\n\n  node.nodes = children\n\n  return tmp\n}\n\n/**\n * Clone just the nodes all the way to the top that are required to represent\n * this singular rule in the tree.\n *\n * For example, if we have CSS like this:\n * ```css\n * @media (min-width: 768px) {\n *   @supports (display: grid) {\n *     .foo {\n *       display: grid;\n *       grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n *     }\n *   }\n *\n *   @supports (backdrop-filter: blur(1px)) {\n *     .bar {\n *       backdrop-filter: blur(1px);\n *     }\n *   }\n *\n *   .baz {\n *     color: orange;\n *   }\n * }\n * ```\n *\n * And we're cloning `.bar` it'll return a cloned version of what's required for just that single node:\n *\n * ```css\n * @media (min-width: 768px) {\n *   @supports (backdrop-filter: blur(1px)) {\n *     .bar {\n *       backdrop-filter: blur(1px);\n *     }\n *   }\n * }\n * ```\n *\n * @param {import('postcss').Node} node\n */\nfunction nestedClone(node) {\n  for (let parent of pathToRoot(node)) {\n    if (node === parent) {\n      continue\n    }\n\n    if (parent.type === 'root') {\n      break\n    }\n\n    node = shallowClone(parent, {\n      nodes: [node],\n    })\n  }\n\n  return node\n}\n\n/**\n * @param {import('postcss').Root} root\n */\nfunction buildLocalApplyCache(root, context) {\n  /** @type {ApplyCache} */\n  let cache = new Map()\n\n  root.walkRules((rule) => {\n    // Ignore rules generated by Tailwind\n    for (let node of pathToRoot(rule)) {\n      if (node.raws.tailwind?.layer !== undefined) {\n        return\n      }\n    }\n\n    // Clone what's required to represent this singular rule in the tree\n    let container = nestedClone(rule)\n    let sort = context.offsets.create('user')\n\n    for (let className of extractClasses(rule)) {\n      let list = cache.get(className) || []\n      cache.set(className, list)\n\n      list.push([\n        {\n          layer: 'user',\n          sort,\n          important: false,\n        },\n        container,\n      ])\n    }\n  })\n\n  return cache\n}\n\n/**\n * @returns {ApplyCache}\n */\nfunction buildApplyCache(applyCandidates, context) {\n  for (let candidate of applyCandidates) {\n    if (context.notClassCache.has(candidate) || context.applyClassCache.has(candidate)) {\n      continue\n    }\n\n    if (context.classCache.has(candidate)) {\n      context.applyClassCache.set(\n        candidate,\n        context.classCache.get(candidate).map(([meta, rule]) => [meta, rule.clone()])\n      )\n      continue\n    }\n\n    let matches = Array.from(resolveMatches(candidate, context))\n\n    if (matches.length === 0) {\n      context.notClassCache.add(candidate)\n      continue\n    }\n\n    context.applyClassCache.set(candidate, matches)\n  }\n\n  return context.applyClassCache\n}\n\n/**\n * Build a cache only when it's first used\n *\n * @param {() => ApplyCache} buildCacheFn\n * @returns {ApplyCache}\n */\nfunction lazyCache(buildCacheFn) {\n  let cache = null\n\n  return {\n    get: (name) => {\n      cache = cache || buildCacheFn()\n\n      return cache.get(name)\n    },\n    has: (name) => {\n      cache = cache || buildCacheFn()\n\n      return cache.has(name)\n    },\n  }\n}\n\n/**\n * Take a series of multiple caches and merge\n * them so they act like one large cache\n *\n * @param {ApplyCache[]} caches\n * @returns {ApplyCache}\n */\nfunction combineCaches(caches) {\n  return {\n    get: (name) => caches.flatMap((cache) => cache.get(name) || []),\n    has: (name) => caches.some((cache) => cache.has(name)),\n  }\n}\n\nfunction extractApplyCandidates(params) {\n  let candidates = params.split(/[\\s\\t\\n]+/g)\n\n  if (candidates[candidates.length - 1] === '!important') {\n    return [candidates.slice(0, -1), true]\n  }\n\n  return [candidates, false]\n}\n\nfunction processApply(root, context, localCache) {\n  let applyCandidates = new Set()\n\n  // Collect all @apply rules and candidates\n  let applies = []\n  root.walkAtRules('apply', (rule) => {\n    let [candidates] = extractApplyCandidates(rule.params)\n\n    for (let util of candidates) {\n      applyCandidates.add(util)\n    }\n\n    applies.push(rule)\n  })\n\n  // Start the @apply process if we have rules with @apply in them\n  if (applies.length === 0) {\n    return\n  }\n\n  // Fill up some caches!\n  let applyClassCache = combineCaches([localCache, buildApplyCache(applyCandidates, context)])\n\n  /**\n   * When we have an apply like this:\n   *\n   * .abc {\n   *    @apply hover:font-bold;\n   * }\n   *\n   * What we essentially will do is resolve to this:\n   *\n   * .abc {\n   *    @apply .hover\\:font-bold:hover {\n   *      font-weight: 500;\n   *    }\n   * }\n   *\n   * Notice that the to-be-applied class is `.hover\\:font-bold:hover` and that the utility candidate was `hover:font-bold`.\n   * What happens in this function is that we prepend a `.` and escape the candidate.\n   * This will result in `.hover\\:font-bold`\n   * Which means that we can replace `.hover\\:font-bold` with `.abc` in `.hover\\:font-bold:hover` resulting in `.abc:hover`\n   *\n   * @param {string} selector\n   * @param {string} utilitySelectors\n   * @param {string} candidate\n   */\n  function replaceSelector(selector, utilitySelectors, candidate) {\n    let selectorList = extractSelectors(selector)\n    let utilitySelectorsList = extractSelectors(utilitySelectors)\n    let candidateList = extractSelectors(`.${escapeClassName(candidate)}`)\n    let candidateClass = candidateList.nodes[0].nodes[0]\n\n    selectorList.each((sel) => {\n      /** @type {Set<import('postcss-selector-parser').Selector>} */\n      let replaced = new Set()\n\n      utilitySelectorsList.each((utilitySelector) => {\n        let hasReplaced = false\n        utilitySelector = utilitySelector.clone()\n\n        utilitySelector.walkClasses((node) => {\n          if (node.value !== candidateClass.value) {\n            return\n          }\n\n          // Don't replace multiple instances of the same class\n          // This is theoretically correct but only partially\n          // We'd need to generate every possible permutation of the replacement\n          // For example with `.foo + .foo { \u2026 }` and `section { @apply foo; }`\n          // We'd need to generate all of these:\n          // - `.foo + .foo`\n          // - `.foo + section`\n          // - `section + .foo`\n          // - `section + section`\n          if (hasReplaced) {\n            return\n          }\n\n          // Since you can only `@apply` class names this is sufficient\n          // We want to replace the matched class name with the selector the user is using\n          // Ex: Replace `.text-blue-500` with `.foo.bar:is(.something-cool)`\n          node.replaceWith(...sel.nodes.map((node) => node.clone()))\n\n          // Record that we did something and we want to use this new selector\n          replaced.add(utilitySelector)\n\n          hasReplaced = true\n        })\n      })\n\n      // Sort tag names before class names (but only sort each group (separated by a combinator)\n      // separately and not in total)\n      // This happens when replacing `.bar` in `.foo.bar` with a tag like `section`\n      for (let sel of replaced) {\n        let groups = [[]]\n        for (let node of sel.nodes) {\n          if (node.type === 'combinator') {\n            groups.push(node)\n            groups.push([])\n          } else {\n            let last = groups[groups.length - 1]\n            last.push(node)\n          }\n        }\n\n        sel.nodes = []\n\n        for (let group of groups) {\n          if (Array.isArray(group)) {\n            group.sort((a, b) => {\n              if (a.type === 'tag' && b.type === 'class') {\n                return -1\n              } else if (a.type === 'class' && b.type === 'tag') {\n                return 1\n              } else if (a.type === 'class' && b.type === 'pseudo' && b.value.startsWith('::')) {\n                return -1\n              } else if (a.type === 'pseudo' && a.value.startsWith('::') && b.type === 'class') {\n                return 1\n              }\n\n              return 0\n            })\n          }\n\n          sel.nodes = sel.nodes.concat(group)\n        }\n      }\n\n      sel.replaceWith(...replaced)\n    })\n\n    return selectorList.toString()\n  }\n\n  let perParentApplies = new Map()\n\n  // Collect all apply candidates and their rules\n  for (let apply of applies) {\n    let [candidates] = perParentApplies.get(apply.parent) || [[], apply.source]\n\n    perParentApplies.set(apply.parent, [candidates, apply.source])\n\n    let [applyCandidates, important] = extractApplyCandidates(apply.params)\n\n    if (apply.parent.type === 'atrule') {\n      if (apply.parent.name === 'screen') {\n        let screenType = apply.parent.params\n\n        throw apply.error(\n          `@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${applyCandidates\n            .map((c) => `${screenType}:${c}`)\n            .join(' ')} instead.`\n        )\n      }\n\n      throw apply.error(\n        `@apply is not supported within nested at-rules like @${apply.parent.name}. You can fix this by un-nesting @${apply.parent.name}.`\n      )\n    }\n\n    for (let applyCandidate of applyCandidates) {\n      if ([prefix(context, 'group'), prefix(context, 'peer')].includes(applyCandidate)) {\n        // TODO: Link to specific documentation page with error code.\n        throw apply.error(`@apply should not be used with the '${applyCandidate}' utility`)\n      }\n\n      if (!applyClassCache.has(applyCandidate)) {\n        throw apply.error(\n          `The \\`${applyCandidate}\\` class does not exist. If \\`${applyCandidate}\\` is a custom class, make sure it is defined within a \\`@layer\\` directive.`\n        )\n      }\n\n      let rules = applyClassCache.get(applyCandidate)\n\n      candidates.push([applyCandidate, important, rules])\n    }\n  }\n\n  for (let [parent, [candidates, atApplySource]] of perParentApplies) {\n    let siblings = []\n\n    for (let [applyCandidate, important, rules] of candidates) {\n      let potentialApplyCandidates = [\n        applyCandidate,\n        ...extractBaseCandidates([applyCandidate], context.tailwindConfig.separator),\n      ]\n\n      for (let [meta, node] of rules) {\n        let parentClasses = extractClasses(parent)\n        let nodeClasses = extractClasses(node)\n\n        // When we encounter a rule like `.dark .a, .b { \u2026 }` we only want to be left with `[.dark, .a]` if the base applyCandidate is `.a` or with `[.b]` if the base applyCandidate is `.b`\n        // So we've split them into groups\n        nodeClasses = nodeClasses.groups\n          .filter((classList) =>\n            classList.some((className) => potentialApplyCandidates.includes(className))\n          )\n          .flat()\n\n        // Add base utility classes from the @apply node to the list of\n        // classes to check whether it intersects and therefore results in a\n        // circular dependency or not.\n        //\n        // E.g.:\n        // .foo {\n        //   @apply hover:a; // This applies \"a\" but with a modifier\n        // }\n        //\n        // We only have to do that with base classes of the `node`, not of the `parent`\n        // E.g.:\n        // .hover\\:foo {\n        //   @apply bar;\n        // }\n        // .bar {\n        //   @apply foo;\n        // }\n        //\n        // This should not result in a circular dependency because we are\n        // just applying `.foo` and the rule above is `.hover\\:foo` which is\n        // unrelated. However, if we were to apply `hover:foo` then we _did_\n        // have to include this one.\n        nodeClasses = nodeClasses.concat(\n          extractBaseCandidates(nodeClasses, context.tailwindConfig.separator)\n        )\n\n        let intersects = parentClasses.some((selector) => nodeClasses.includes(selector))\n        if (intersects) {\n          throw node.error(\n            `You cannot \\`@apply\\` the \\`${applyCandidate}\\` utility here because it creates a circular dependency.`\n          )\n        }\n\n        let root = postcss.root({ nodes: [node.clone()] })\n\n        // Make sure every node in the entire tree points back at the @apply rule that generated it\n        root.walk((node) => {\n          node.source = atApplySource\n        })\n\n        let canRewriteSelector =\n          node.type !== 'atrule' || (node.type === 'atrule' && node.name !== 'keyframes')\n\n        if (canRewriteSelector) {\n          root.walkRules((rule) => {\n            // Let's imagine you have the following structure:\n            //\n            // .foo {\n            //   @apply bar;\n            // }\n            //\n            // @supports (a: b) {\n            //   .bar {\n            //     color: blue\n            //   }\n            //\n            //   .something-unrelated {}\n            // }\n            //\n            // In this case we want to apply `.bar` but it happens to be in\n            // an atrule node. We clone that node instead of the nested one\n            // because we still want that @supports rule to be there once we\n            // applied everything.\n            //\n            // However it happens to be that the `.something-unrelated` is\n            // also in that same shared @supports atrule. This is not good,\n            // and this should not be there. The good part is that this is\n            // a clone already and it can be safely removed. The question is\n            // how do we know we can remove it. Basically what we can do is\n            // match it against the applyCandidate that you want to apply. If\n            // it doesn't match the we can safely delete it.\n            //\n            // If we didn't do this, then the `replaceSelector` function\n            // would have replaced this with something that didn't exist and\n            // therefore it removed the selector altogether. In this specific\n            // case it would result in `{}` instead of `.something-unrelated {}`\n            if (!extractClasses(rule).some((candidate) => candidate === applyCandidate)) {\n              rule.remove()\n              return\n            }\n\n            // Strip the important selector from the parent selector if at the beginning\n            let importantSelector =\n              typeof context.tailwindConfig.important === 'string'\n                ? context.tailwindConfig.important\n                : null\n\n            // We only want to move the \"important\" selector if this is a Tailwind-generated utility\n            // We do *not* want to do this for user CSS that happens to be structured the same\n            let isGenerated = parent.raws.tailwind !== undefined\n\n            let parentSelector =\n              isGenerated && importantSelector && parent.selector.indexOf(importantSelector) === 0\n                ? parent.selector.slice(importantSelector.length)\n                : parent.selector\n\n            // If the selector becomes empty after replacing the important selector\n            // This means that it's the same as the parent selector and we don't want to replace it\n            // Otherwise we'll crash\n            if (parentSelector === '') {\n              parentSelector = parent.selector\n            }\n\n            rule.selector = replaceSelector(parentSelector, rule.selector, applyCandidate)\n\n            // And then re-add it if it was removed\n            if (importantSelector && parentSelector !== parent.selector) {\n              rule.selector = applyImportantSelector(rule.selector, importantSelector)\n            }\n\n            rule.walkDecls((d) => {\n              d.important = meta.important || important\n            })\n\n            // Move pseudo elements to the end of the selector (if necessary)\n            let selector = parser().astSync(rule.selector)\n            selector.each((sel) => movePseudos(sel))\n            rule.selector = selector.toString()\n          })\n        }\n\n        // It could be that the node we were inserted was removed because the class didn't match\n        // If that was the *only* rule in the parent, then we have nothing add so we skip it\n        if (!root.nodes[0]) {\n          continue\n        }\n\n        // Insert it\n        siblings.push([meta.sort, root.nodes[0]])\n      }\n    }\n\n    // Inject the rules, sorted, correctly\n    let nodes = context.offsets.sort(siblings).map((s) => s[1])\n\n    // `parent` refers to the node at `.abc` in: .abc { @apply mt-2 }\n    parent.after(nodes)\n  }\n\n  for (let apply of applies) {\n    // If there are left-over declarations, just remove the @apply\n    if (apply.parent.nodes.length > 1) {\n      apply.remove()\n    } else {\n      // The node is empty, drop the full node\n      apply.parent.remove()\n    }\n  }\n\n  // Do it again, in case we have other `@apply` rules\n  processApply(root, context, localCache)\n}\n\nexport default function expandApplyAtRules(context) {\n  return (root) => {\n    // Build a cache of the user's CSS so we can use it to resolve classes used by @apply\n    let localCache = lazyCache(() => buildLocalApplyCache(root, context))\n\n    processApply(root, context, localCache)\n  }\n}\n", "import postcss from 'postcss'\nimport selectorParser from 'postcss-selector-parser'\nimport parseObjectStyles from '../util/parseObjectStyles'\nimport isPlainObject from '../util/isPlainObject'\nimport prefixSelector from '../util/prefixSelector'\nimport { updateAllClasses, getMatchingTypes } from '../util/pluginUtils'\nimport log from '../util/log'\nimport * as sharedState from './sharedState'\nimport {\n  formatVariantSelector,\n  finalizeSelector,\n  eliminateIrrelevantSelectors,\n} from '../util/formatVariantSelector'\nimport { asClass } from '../util/nameClass'\nimport { normalize } from '../util/dataTypes'\nimport { isValidVariantFormatString, parseVariant, INTERNAL_FEATURES } from './setupContextUtils'\nimport isValidArbitraryValue from '../util/isSyntacticallyValidPropertyValue'\nimport { splitAtTopLevelOnly } from '../util/splitAtTopLevelOnly.js'\nimport { flagEnabled } from '../featureFlags'\nimport { applyImportantSelector } from '../util/applyImportantSelector'\n\nlet classNameParser = selectorParser((selectors) => {\n  return selectors.first.filter(({ type }) => type === 'class').pop().value\n})\n\nexport function getClassNameFromSelector(selector) {\n  return classNameParser.transformSync(selector)\n}\n\n// Generate match permutations for a class candidate, like:\n// ['ring-offset-blue', '100']\n// ['ring-offset', 'blue-100']\n// ['ring', 'offset-blue-100']\n// Example with dynamic classes:\n// ['grid-cols', '[[linename],1fr,auto]']\n// ['grid', 'cols-[[linename],1fr,auto]']\nfunction* candidatePermutations(candidate) {\n  let lastIndex = Infinity\n\n  while (lastIndex >= 0) {\n    let dashIdx\n    let wasSlash = false\n\n    if (lastIndex === Infinity && candidate.endsWith(']')) {\n      let bracketIdx = candidate.indexOf('[')\n\n      // If character before `[` isn't a dash or a slash, this isn't a dynamic class\n      // eg. string[]\n      if (candidate[bracketIdx - 1] === '-') {\n        dashIdx = bracketIdx - 1\n      } else if (candidate[bracketIdx - 1] === '/') {\n        dashIdx = bracketIdx - 1\n        wasSlash = true\n      } else {\n        dashIdx = -1\n      }\n    } else if (lastIndex === Infinity && candidate.includes('/')) {\n      dashIdx = candidate.lastIndexOf('/')\n      wasSlash = true\n    } else {\n      dashIdx = candidate.lastIndexOf('-', lastIndex)\n    }\n\n    if (dashIdx < 0) {\n      break\n    }\n\n    let prefix = candidate.slice(0, dashIdx)\n    let modifier = candidate.slice(wasSlash ? dashIdx : dashIdx + 1)\n\n    lastIndex = dashIdx - 1\n\n    // TODO: This feels a bit hacky\n    if (prefix === '' || modifier === '/') {\n      continue\n    }\n\n    yield [prefix, modifier]\n  }\n}\n\nfunction applyPrefix(matches, context) {\n  if (matches.length === 0 || context.tailwindConfig.prefix === '') {\n    return matches\n  }\n\n  for (let match of matches) {\n    let [meta] = match\n    if (meta.options.respectPrefix) {\n      let container = postcss.root({ nodes: [match[1].clone()] })\n      let classCandidate = match[1].raws.tailwind.classCandidate\n\n      container.walkRules((r) => {\n        // If this is a negative utility with a dash *before* the prefix we\n        // have to ensure that the generated selector matches the candidate\n\n        // Not doing this will cause `-tw-top-1` to generate the class `.tw--top-1`\n        // The disconnect between candidate <-> class can cause @apply to hard crash.\n        let shouldPrependNegative = classCandidate.startsWith('-')\n\n        r.selector = prefixSelector(\n          context.tailwindConfig.prefix,\n          r.selector,\n          shouldPrependNegative\n        )\n      })\n\n      match[1] = container.nodes[0]\n    }\n  }\n\n  return matches\n}\n\nfunction applyImportant(matches, classCandidate) {\n  if (matches.length === 0) {\n    return matches\n  }\n\n  let result = []\n\n  for (let [meta, rule] of matches) {\n    let container = postcss.root({ nodes: [rule.clone()] })\n\n    container.walkRules((r) => {\n      let ast = selectorParser().astSync(r.selector)\n\n      // Remove extraneous selectors that do not include the base candidate\n      ast.each((sel) => eliminateIrrelevantSelectors(sel, classCandidate))\n\n      // Update all instances of the base candidate to include the important marker\n      updateAllClasses(ast, (className) =>\n        className === classCandidate ? `!${className}` : className\n      )\n\n      r.selector = ast.toString()\n\n      r.walkDecls((d) => (d.important = true))\n    })\n\n    result.push([{ ...meta, important: true }, container.nodes[0]])\n  }\n\n  return result\n}\n\n// Takes a list of rule tuples and applies a variant like `hover`, sm`,\n// whatever to it. We used to do some extra caching here to avoid generating\n// a variant of the same rule more than once, but this was never hit because\n// we cache at the entire selector level further up the tree.\n//\n// Technically you can get a cache hit if you have `hover:focus:text-center`\n// and `focus:hover:text-center` in the same project, but it doesn't feel\n// worth the complexity for that case.\n\nfunction applyVariant(variant, matches, context) {\n  if (matches.length === 0) {\n    return matches\n  }\n\n  /** @type {{modifier: string | null, value: string | null}} */\n  let args = { modifier: null, value: sharedState.NONE }\n\n  // Retrieve \"modifier\"\n  {\n    let [baseVariant, ...modifiers] = splitAtTopLevelOnly(variant, '/')\n\n    // This is a hack to support variants with `/` in them, like `ar-1/10/20:text-red-500`\n    // In this case 1/10 is a value but /20 is a modifier\n    if (modifiers.length > 1) {\n      baseVariant = baseVariant + '/' + modifiers.slice(0, -1).join('/')\n      modifiers = modifiers.slice(-1)\n    }\n\n    if (modifiers.length && !context.variantMap.has(variant)) {\n      variant = baseVariant\n      args.modifier = modifiers[0]\n\n      if (!flagEnabled(context.tailwindConfig, 'generalizedModifiers')) {\n        return []\n      }\n    }\n  }\n\n  // Retrieve \"arbitrary value\"\n  if (variant.endsWith(']') && !variant.startsWith('[')) {\n    // We either have:\n    //   @[200px]\n    //   group-[:hover]\n    //\n    // But we don't want:\n    //   @-[200px]        (`-` is incorrect)\n    //   group[:hover]    (`-` is missing)\n    let match = /(.)(-?)\\[(.*)\\]/g.exec(variant)\n    if (match) {\n      let [, char, separator, value] = match\n      // @-[200px] case\n      if (char === '@' && separator === '-') return []\n      // group[:hover] case\n      if (char !== '@' && separator === '') return []\n\n      variant = variant.replace(`${separator}[${value}]`, '')\n      args.value = value\n    }\n  }\n\n  // Register arbitrary variants\n  if (isArbitraryValue(variant) && !context.variantMap.has(variant)) {\n    let sort = context.offsets.recordVariant(variant)\n\n    let selector = normalize(variant.slice(1, -1))\n    let selectors = splitAtTopLevelOnly(selector, ',')\n\n    // We do not support multiple selectors for arbitrary variants\n    if (selectors.length > 1) {\n      return []\n    }\n\n    if (!selectors.every(isValidVariantFormatString)) {\n      return []\n    }\n\n    let records = selectors.map((sel, idx) => [\n      context.offsets.applyParallelOffset(sort, idx),\n      parseVariant(sel.trim()),\n    ])\n\n    context.variantMap.set(variant, records)\n  }\n\n  if (context.variantMap.has(variant)) {\n    let isArbitraryVariant = isArbitraryValue(variant)\n    let internalFeatures = context.variantOptions.get(variant)?.[INTERNAL_FEATURES] ?? {}\n    let variantFunctionTuples = context.variantMap.get(variant).slice()\n    let result = []\n\n    let respectPrefix = (() => {\n      if (isArbitraryVariant) return false\n      if (internalFeatures.respectPrefix === false) return false\n      return true\n    })()\n\n    for (let [meta, rule] of matches) {\n      // Don't generate variants for user css\n      if (meta.layer === 'user') {\n        continue\n      }\n\n      let container = postcss.root({ nodes: [rule.clone()] })\n\n      for (let [variantSort, variantFunction, containerFromArray] of variantFunctionTuples) {\n        let clone = (containerFromArray ?? container).clone()\n        let collectedFormats = []\n\n        function prepareBackup() {\n          // Already prepared, chicken out\n          if (clone.raws.neededBackup) {\n            return\n          }\n          clone.raws.neededBackup = true\n          clone.walkRules((rule) => (rule.raws.originalSelector = rule.selector))\n        }\n\n        function modifySelectors(modifierFunction) {\n          prepareBackup()\n          clone.each((rule) => {\n            if (rule.type !== 'rule') {\n              return\n            }\n\n            rule.selectors = rule.selectors.map((selector) => {\n              return modifierFunction({\n                get className() {\n                  return getClassNameFromSelector(selector)\n                },\n                selector,\n              })\n            })\n          })\n\n          return clone\n        }\n\n        let ruleWithVariant = variantFunction({\n          // Public API\n          get container() {\n            prepareBackup()\n            return clone\n          },\n          separator: context.tailwindConfig.separator,\n          modifySelectors,\n\n          // Private API for now\n          wrap(wrapper) {\n            let nodes = clone.nodes\n            clone.removeAll()\n            wrapper.append(nodes)\n            clone.append(wrapper)\n          },\n          format(selectorFormat) {\n            collectedFormats.push({\n              format: selectorFormat,\n              respectPrefix,\n            })\n          },\n          args,\n        })\n\n        // It can happen that a list of format strings is returned from within the function. In that\n        // case, we have to process them as well. We can use the existing `variantSort`.\n        if (Array.isArray(ruleWithVariant)) {\n          for (let [idx, variantFunction] of ruleWithVariant.entries()) {\n            // This is a little bit scary since we are pushing to an array of items that we are\n            // currently looping over. However, you can also think of it like a processing queue\n            // where you keep handling jobs until everything is done and each job can queue more\n            // jobs if needed.\n            variantFunctionTuples.push([\n              context.offsets.applyParallelOffset(variantSort, idx),\n              variantFunction,\n\n              // If the clone has been modified we have to pass that back\n              // though so each rule can use the modified container\n              clone.clone(),\n            ])\n          }\n          continue\n        }\n\n        if (typeof ruleWithVariant === 'string') {\n          collectedFormats.push({\n            format: ruleWithVariant,\n            respectPrefix,\n          })\n        }\n\n        if (ruleWithVariant === null) {\n          continue\n        }\n\n        // We had to backup selectors, therefore we assume that somebody touched\n        // `container` or `modifySelectors`. Let's see if they did, so that we\n        // can restore the selectors, and collect the format strings.\n        if (clone.raws.neededBackup) {\n          delete clone.raws.neededBackup\n          clone.walkRules((rule) => {\n            let before = rule.raws.originalSelector\n            if (!before) return\n            delete rule.raws.originalSelector\n            if (before === rule.selector) return // No mutation happened\n\n            let modified = rule.selector\n\n            // Rebuild the base selector, this is what plugin authors would do\n            // as well. E.g.: `${variant}${separator}${className}`.\n            // However, plugin authors probably also prepend or append certain\n            // classes, pseudos, ids, ...\n            let rebuiltBase = selectorParser((selectors) => {\n              selectors.walkClasses((classNode) => {\n                classNode.value = `${variant}${context.tailwindConfig.separator}${classNode.value}`\n              })\n            }).processSync(before)\n\n            // Now that we know the original selector, the new selector, and\n            // the rebuild part in between, we can replace the part that plugin\n            // authors need to rebuild with `&`, and eventually store it in the\n            // collectedFormats. Similar to what `format('...')` would do.\n            //\n            // E.g.:\n            //                   variant: foo\n            //                  selector: .markdown > p\n            //      modified (by plugin): .foo .foo\\\\:markdown > p\n            //    rebuiltBase (internal): .foo\\\\:markdown > p\n            //                    format: .foo &\n            collectedFormats.push({\n              format: modified.replace(rebuiltBase, '&'),\n              respectPrefix,\n            })\n            rule.selector = before\n          })\n        }\n\n        // This tracks the originating layer for the variant\n        // For example:\n        // .sm:underline {} is a variant of something in the utilities layer\n        // .sm:container {} is a variant of the container component\n        clone.nodes[0].raws.tailwind = { ...clone.nodes[0].raws.tailwind, parentLayer: meta.layer }\n\n        let withOffset = [\n          {\n            ...meta,\n            sort: context.offsets.applyVariantOffset(\n              meta.sort,\n              variantSort,\n              Object.assign(args, context.variantOptions.get(variant))\n            ),\n            collectedFormats: (meta.collectedFormats ?? []).concat(collectedFormats),\n          },\n          clone.nodes[0],\n        ]\n        result.push(withOffset)\n      }\n    }\n\n    return result\n  }\n\n  return []\n}\n\nfunction parseRules(rule, cache, options = {}) {\n  // PostCSS node\n  if (!isPlainObject(rule) && !Array.isArray(rule)) {\n    return [[rule], options]\n  }\n\n  // Tuple\n  if (Array.isArray(rule)) {\n    return parseRules(rule[0], cache, rule[1])\n  }\n\n  // Simple object\n  if (!cache.has(rule)) {\n    cache.set(rule, parseObjectStyles(rule))\n  }\n\n  return [cache.get(rule), options]\n}\n\nconst IS_VALID_PROPERTY_NAME = /^[a-z_-]/\n\nfunction isValidPropName(name) {\n  return IS_VALID_PROPERTY_NAME.test(name)\n}\n\n/**\n * @param {string} declaration\n * @returns {boolean}\n */\nfunction looksLikeUri(declaration) {\n  // Quick bailout for obvious non-urls\n  // This doesn't support schemes that don't use a leading // but that's unlikely to be a problem\n  if (!declaration.includes('://')) {\n    return false\n  }\n\n  try {\n    const url = new URL(declaration)\n    return url.scheme !== '' && url.host !== ''\n  } catch (err) {\n    // Definitely not a valid url\n    return false\n  }\n}\n\nfunction isParsableNode(node) {\n  let isParsable = true\n\n  node.walkDecls((decl) => {\n    if (!isParsableCssValue(decl.prop, decl.value)) {\n      isParsable = false\n      return false\n    }\n  })\n\n  return isParsable\n}\n\nfunction isParsableCssValue(property, value) {\n  // We don't want to to treat [https://example.com] as a custom property\n  // Even though, according to the CSS grammar, it's a totally valid CSS declaration\n  // So we short-circuit here by checking if the custom property looks like a url\n  if (looksLikeUri(`${property}:${value}`)) {\n    return false\n  }\n\n  try {\n    postcss.parse(`a{${property}:${value}}`).toResult()\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nfunction extractArbitraryProperty(classCandidate, context) {\n  let [, property, value] = classCandidate.match(/^\\[([a-zA-Z0-9-_]+):(\\S+)\\]$/) ?? []\n\n  if (value === undefined) {\n    return null\n  }\n\n  if (!isValidPropName(property)) {\n    return null\n  }\n\n  if (!isValidArbitraryValue(value)) {\n    return null\n  }\n\n  let normalized = normalize(value, { property })\n\n  if (!isParsableCssValue(property, normalized)) {\n    return null\n  }\n\n  let sort = context.offsets.arbitraryProperty()\n\n  return [\n    [\n      { sort, layer: 'utilities' },\n      () => ({\n        [asClass(classCandidate)]: {\n          [property]: normalized,\n        },\n      }),\n    ],\n  ]\n}\n\nfunction* resolveMatchedPlugins(classCandidate, context) {\n  if (context.candidateRuleMap.has(classCandidate)) {\n    yield [context.candidateRuleMap.get(classCandidate), 'DEFAULT']\n  }\n\n  yield* (function* (arbitraryPropertyRule) {\n    if (arbitraryPropertyRule !== null) {\n      yield [arbitraryPropertyRule, 'DEFAULT']\n    }\n  })(extractArbitraryProperty(classCandidate, context))\n\n  let candidatePrefix = classCandidate\n  let negative = false\n\n  const twConfigPrefix = context.tailwindConfig.prefix\n\n  const twConfigPrefixLen = twConfigPrefix.length\n\n  const hasMatchingPrefix =\n    candidatePrefix.startsWith(twConfigPrefix) || candidatePrefix.startsWith(`-${twConfigPrefix}`)\n\n  if (candidatePrefix[twConfigPrefixLen] === '-' && hasMatchingPrefix) {\n    negative = true\n    candidatePrefix = twConfigPrefix + candidatePrefix.slice(twConfigPrefixLen + 1)\n  }\n\n  if (negative && context.candidateRuleMap.has(candidatePrefix)) {\n    yield [context.candidateRuleMap.get(candidatePrefix), '-DEFAULT']\n  }\n\n  for (let [prefix, modifier] of candidatePermutations(candidatePrefix)) {\n    if (context.candidateRuleMap.has(prefix)) {\n      yield [context.candidateRuleMap.get(prefix), negative ? `-${modifier}` : modifier]\n    }\n  }\n}\n\nfunction splitWithSeparator(input, separator) {\n  if (input === sharedState.NOT_ON_DEMAND) {\n    return [sharedState.NOT_ON_DEMAND]\n  }\n\n  return splitAtTopLevelOnly(input, separator)\n}\n\nfunction* recordCandidates(matches, classCandidate) {\n  for (const match of matches) {\n    match[1].raws.tailwind = {\n      ...match[1].raws.tailwind,\n      classCandidate,\n      preserveSource: match[0].options?.preserveSource ?? false,\n    }\n\n    yield match\n  }\n}\n\nfunction* resolveMatches(candidate, context) {\n  let separator = context.tailwindConfig.separator\n  let [classCandidate, ...variants] = splitWithSeparator(candidate, separator).reverse()\n  let important = false\n\n  if (classCandidate.startsWith('!')) {\n    important = true\n    classCandidate = classCandidate.slice(1)\n  }\n\n  // TODO: Reintroduce this in ways that doesn't break on false positives\n  // function sortAgainst(toSort, against) {\n  //   return toSort.slice().sort((a, z) => {\n  //     return bigSign(against.get(a)[0] - against.get(z)[0])\n  //   })\n  // }\n  // let sorted = sortAgainst(variants, context.variantMap)\n  // if (sorted.toString() !== variants.toString()) {\n  //   let corrected = sorted.reverse().concat(classCandidate).join(':')\n  //   throw new Error(`Class ${candidate} should be written as ${corrected}`)\n  // }\n\n  for (let matchedPlugins of resolveMatchedPlugins(classCandidate, context)) {\n    let matches = []\n    let typesByMatches = new Map()\n\n    let [plugins, modifier] = matchedPlugins\n    let isOnlyPlugin = plugins.length === 1\n\n    for (let [sort, plugin] of plugins) {\n      let matchesPerPlugin = []\n\n      if (typeof plugin === 'function') {\n        for (let ruleSet of [].concat(plugin(modifier, { isOnlyPlugin }))) {\n          let [rules, options] = parseRules(ruleSet, context.postCssNodeCache)\n          for (let rule of rules) {\n            matchesPerPlugin.push([{ ...sort, options: { ...sort.options, ...options } }, rule])\n          }\n        }\n      }\n      // Only process static plugins on exact matches\n      else if (modifier === 'DEFAULT' || modifier === '-DEFAULT') {\n        let ruleSet = plugin\n        let [rules, options] = parseRules(ruleSet, context.postCssNodeCache)\n        for (let rule of rules) {\n          matchesPerPlugin.push([{ ...sort, options: { ...sort.options, ...options } }, rule])\n        }\n      }\n\n      if (matchesPerPlugin.length > 0) {\n        let matchingTypes = Array.from(\n          getMatchingTypes(\n            sort.options?.types ?? [],\n            modifier,\n            sort.options ?? {},\n            context.tailwindConfig\n          )\n        ).map(([_, type]) => type)\n\n        if (matchingTypes.length > 0) {\n          typesByMatches.set(matchesPerPlugin, matchingTypes)\n        }\n\n        matches.push(matchesPerPlugin)\n      }\n    }\n\n    if (isArbitraryValue(modifier)) {\n      if (matches.length > 1) {\n        // Partition plugins in 2 categories so that we can start searching in the plugins that\n        // don't have `any` as a type first.\n        let [withAny, withoutAny] = matches.reduce(\n          (group, plugin) => {\n            let hasAnyType = plugin.some(([{ options }]) =>\n              options.types.some(({ type }) => type === 'any')\n            )\n\n            if (hasAnyType) {\n              group[0].push(plugin)\n            } else {\n              group[1].push(plugin)\n            }\n            return group\n          },\n          [[], []]\n        )\n\n        function findFallback(matches) {\n          // If only a single plugin matches, let's take that one\n          if (matches.length === 1) {\n            return matches[0]\n          }\n\n          // Otherwise, find the plugin that creates a valid rule given the arbitrary value, and\n          // also has the correct type which preferOnConflicts the plugin in case of clashes.\n          return matches.find((rules) => {\n            let matchingTypes = typesByMatches.get(rules)\n            return rules.some(([{ options }, rule]) => {\n              if (!isParsableNode(rule)) {\n                return false\n              }\n\n              return options.types.some(\n                ({ type, preferOnConflict }) => matchingTypes.includes(type) && preferOnConflict\n              )\n            })\n          })\n        }\n\n        // Try to find a fallback plugin, because we already know that multiple plugins matched for\n        // the given arbitrary value.\n        let fallback = findFallback(withoutAny) ?? findFallback(withAny)\n        if (fallback) {\n          matches = [fallback]\n        }\n\n        // We couldn't find a fallback plugin which means that there are now multiple plugins that\n        // generated css for the current candidate. This means that the result is ambiguous and this\n        // should not happen. We won't generate anything right now, so let's report this to the user\n        // by logging some options about what they can do.\n        else {\n          let typesPerPlugin = matches.map(\n            (match) => new Set([...(typesByMatches.get(match) ?? [])])\n          )\n\n          // Remove duplicates, so that we can detect proper unique types for each plugin.\n          for (let pluginTypes of typesPerPlugin) {\n            for (let type of pluginTypes) {\n              let removeFromOwnGroup = false\n\n              for (let otherGroup of typesPerPlugin) {\n                if (pluginTypes === otherGroup) continue\n\n                if (otherGroup.has(type)) {\n                  otherGroup.delete(type)\n                  removeFromOwnGroup = true\n                }\n              }\n\n              if (removeFromOwnGroup) pluginTypes.delete(type)\n            }\n          }\n\n          let messages = []\n\n          for (let [idx, group] of typesPerPlugin.entries()) {\n            for (let type of group) {\n              let rules = matches[idx]\n                .map(([, rule]) => rule)\n                .flat()\n                .map((rule) =>\n                  rule\n                    .toString()\n                    .split('\\n')\n                    .slice(1, -1) // Remove selector and closing '}'\n                    .map((line) => line.trim())\n                    .map((x) => `      ${x}`) // Re-indent\n                    .join('\\n')\n                )\n                .join('\\n\\n')\n\n              messages.push(\n                `  Use \\`${candidate.replace('[', `[${type}:`)}\\` for \\`${rules.trim()}\\``\n              )\n              break\n            }\n          }\n\n          log.warn([\n            `The class \\`${candidate}\\` is ambiguous and matches multiple utilities.`,\n            ...messages,\n            `If this is content and not a class, replace it with \\`${candidate\n              .replace('[', '&lsqb;')\n              .replace(']', '&rsqb;')}\\` to silence this warning.`,\n          ])\n          continue\n        }\n      }\n\n      matches = matches.map((list) => list.filter((match) => isParsableNode(match[1])))\n    }\n\n    matches = matches.flat()\n    matches = Array.from(recordCandidates(matches, classCandidate))\n    matches = applyPrefix(matches, context)\n\n    if (important) {\n      matches = applyImportant(matches, classCandidate)\n    }\n\n    for (let variant of variants) {\n      matches = applyVariant(variant, matches, context)\n    }\n\n    for (let match of matches) {\n      match[1].raws.tailwind = { ...match[1].raws.tailwind, candidate }\n\n      // Apply final format selector\n      match = applyFinalFormat(match, { context, candidate })\n\n      // Skip rules with invalid selectors\n      // This will cause the candidate to be added to the \"not class\"\n      // cache skipping it entirely for future builds\n      if (match === null) {\n        continue\n      }\n\n      yield match\n    }\n  }\n}\n\nfunction applyFinalFormat(match, { context, candidate }) {\n  if (!match[0].collectedFormats) {\n    return match\n  }\n\n  let isValid = true\n  let finalFormat\n\n  try {\n    finalFormat = formatVariantSelector(match[0].collectedFormats, {\n      context,\n      candidate,\n    })\n  } catch {\n    // The format selector we produced is invalid\n    // This could be because:\n    // - A bug exists\n    // - A plugin introduced an invalid variant selector (ex: `addVariant('foo', '&;foo')`)\n    // - The user used an invalid arbitrary variant (ex: `[&;foo]:underline`)\n    // Either way the build will fail because of this\n    // We would rather that the build pass \"silently\" given that this could\n    // happen because of picking up invalid things when scanning content\n    // So we'll throw out the candidate instead\n\n    return null\n  }\n\n  let container = postcss.root({ nodes: [match[1].clone()] })\n\n  container.walkRules((rule) => {\n    if (inKeyframes(rule)) {\n      return\n    }\n\n    try {\n      let selector = finalizeSelector(rule.selector, finalFormat, {\n        candidate,\n        context,\n      })\n\n      // Finalize Selector determined that this candidate is irrelevant\n      // TODO: This elimination should happen earlier so this never happens\n      if (selector === null) {\n        rule.remove()\n        return\n      }\n\n      rule.selector = selector\n    } catch {\n      // If this selector is invalid we also want to skip it\n      // But it's likely that being invalid here means there's a bug in a plugin rather than too loosely matching content\n      isValid = false\n      return false\n    }\n  })\n\n  if (!isValid) {\n    return null\n  }\n\n  match[1] = container.nodes[0]\n\n  return match\n}\n\nfunction inKeyframes(rule) {\n  return rule.parent && rule.parent.type === 'atrule' && rule.parent.name === 'keyframes'\n}\n\nfunction getImportantStrategy(important) {\n  if (important === true) {\n    return (rule) => {\n      if (inKeyframes(rule)) {\n        return\n      }\n\n      rule.walkDecls((d) => {\n        if (d.parent.type === 'rule' && !inKeyframes(d.parent)) {\n          d.important = true\n        }\n      })\n    }\n  }\n\n  if (typeof important === 'string') {\n    return (rule) => {\n      if (inKeyframes(rule)) {\n        return\n      }\n\n      rule.selectors = rule.selectors.map((selector) => {\n        return applyImportantSelector(selector, important)\n      })\n    }\n  }\n}\n\nfunction generateRules(candidates, context, isSorting = false) {\n  let allRules = []\n  let strategy = getImportantStrategy(context.tailwindConfig.important)\n\n  for (let candidate of candidates) {\n    if (context.notClassCache.has(candidate)) {\n      continue\n    }\n\n    if (context.candidateRuleCache.has(candidate)) {\n      allRules = allRules.concat(Array.from(context.candidateRuleCache.get(candidate)))\n      continue\n    }\n\n    let matches = Array.from(resolveMatches(candidate, context))\n\n    if (matches.length === 0) {\n      context.notClassCache.add(candidate)\n      continue\n    }\n\n    context.classCache.set(candidate, matches)\n\n    let rules = context.candidateRuleCache.get(candidate) ?? new Set()\n    context.candidateRuleCache.set(candidate, rules)\n\n    for (const match of matches) {\n      let [{ sort, options }, rule] = match\n\n      if (options.respectImportant && strategy) {\n        let container = postcss.root({ nodes: [rule.clone()] })\n        container.walkRules(strategy)\n        rule = container.nodes[0]\n      }\n\n      // Note: We have to clone rules during sorting\n      // so we eliminate some shared mutable state\n      let newEntry = [sort, isSorting ? rule.clone() : rule]\n      rules.add(newEntry)\n      context.ruleCache.add(newEntry)\n      allRules.push(newEntry)\n    }\n  }\n\n  return allRules\n}\n\nfunction isArbitraryValue(input) {\n  return input.startsWith('[') && input.endsWith(']')\n}\n\nexport { resolveMatches, generateRules }\n", "import postcss from 'postcss'\nimport postcssNested from 'postcss-nested'\nimport postcssJs from 'postcss-js'\n\nexport default function parseObjectStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseObjectStyles([styles])\n  }\n\n  return styles.flatMap((style) => {\n    return postcss([\n      postcssNested({\n        bubble: ['screen'],\n      }),\n    ]).process(style, {\n      parser: postcssJs,\n    }).root.nodes\n  })\n}\n", "export default function isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n  return prototype === null || Object.getPrototypeOf(prototype) === null\n}\n", "import parser from 'postcss-selector-parser'\n\n/**\n * @template {string | import('postcss-selector-parser').Root} T\n *\n * Prefix all classes in the selector with the given prefix\n *\n * It can take either a string or a selector AST and will return the same type\n *\n * @param {string} prefix\n * @param {T} selector\n * @param {boolean} prependNegative\n * @returns {T}\n */\nexport default function (prefix, selector, prependNegative = false) {\n  if (prefix === '') {\n    return selector\n  }\n\n  /** @type {import('postcss-selector-parser').Root} */\n  let ast = typeof selector === 'string' ? parser().astSync(selector) : selector\n\n  ast.walkClasses((classSelector) => {\n    let baseClass = classSelector.value\n    let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith('-')\n\n    classSelector.value = shouldPlaceNegativeBeforePrefix\n      ? `-${prefix}${baseClass.slice(1)}`\n      : `${prefix}${baseClass}`\n  })\n\n  return typeof selector === 'string' ? ast.toString() : ast\n}\n", "export default function escapeCommas(className) {\n  return className.replace(/\\\\,/g, '\\\\2c ')\n}\n", "export default {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50],\n}\n", "import namedColors from './colorNames'\n\nlet HEX = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i\nlet SHORT_HEX = /^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i\nlet VALUE = /(?:\\d+|\\d*\\.\\d+)%?/\nlet SEP = /(?:\\s*,\\s*|\\s+)/\nlet ALPHA_SEP = /\\s*[,/]\\s*/\nlet CUSTOM_PROPERTY = /var\\(--(?:[^ )]*?)(?:,(?:[^ )]*?|var\\(--[^ )]*?\\)))?\\)/\n\nlet RGB = new RegExp(\n  `^(rgba?)\\\\(\\\\s*(${VALUE.source}|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\\\s*\\\\)$`\n)\nlet HSL = new RegExp(\n  `^(hsla?)\\\\(\\\\s*((?:${VALUE.source})(?:deg|rad|grad|turn)?|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\\\s*\\\\)$`\n)\n\n// In \"loose\" mode the color may contain fewer than 3 parts, as long as at least\n// one of the parts is variable.\nexport function parseColor(value, { loose = false } = {}) {\n  if (typeof value !== 'string') {\n    return null\n  }\n\n  value = value.trim()\n  if (value === 'transparent') {\n    return { mode: 'rgb', color: ['0', '0', '0'], alpha: '0' }\n  }\n\n  if (value in namedColors) {\n    return { mode: 'rgb', color: namedColors[value].map((v) => v.toString()) }\n  }\n\n  let hex = value\n    .replace(SHORT_HEX, (_, r, g, b, a) => ['#', r, r, g, g, b, b, a ? a + a : ''].join(''))\n    .match(HEX)\n\n  if (hex !== null) {\n    return {\n      mode: 'rgb',\n      color: [parseInt(hex[1], 16), parseInt(hex[2], 16), parseInt(hex[3], 16)].map((v) =>\n        v.toString()\n      ),\n      alpha: hex[4] ? (parseInt(hex[4], 16) / 255).toString() : undefined,\n    }\n  }\n\n  let match = value.match(RGB) ?? value.match(HSL)\n\n  if (match === null) {\n    return null\n  }\n\n  let color = [match[2], match[3], match[4]].filter(Boolean).map((v) => v.toString())\n\n  // rgba(var(--my-color), 0.1)\n  // hsla(var(--my-color), 0.1)\n  if (color.length === 2 && color[0].startsWith('var(')) {\n    return {\n      mode: match[1],\n      color: [color[0]],\n      alpha: color[1],\n    }\n  }\n\n  if (!loose && color.length !== 3) {\n    return null\n  }\n\n  if (color.length < 3 && !color.some((part) => /^var\\(.*?\\)$/.test(part))) {\n    return null\n  }\n\n  return {\n    mode: match[1],\n    color,\n    alpha: match[5]?.toString?.(),\n  }\n}\n\nexport function formatColor({ mode, color, alpha }) {\n  let hasAlpha = alpha !== undefined\n\n  if (mode === 'rgba' || mode === 'hsla') {\n    return `${mode}(${color.join(', ')}${hasAlpha ? `, ${alpha}` : ''})`\n  }\n\n  return `${mode}(${color.join(' ')}${hasAlpha ? ` / ${alpha}` : ''})`\n}\n", "import { parseColor, formatColor } from './color'\n\nexport function withAlphaValue(color, alphaValue, defaultValue) {\n  if (typeof color === 'function') {\n    return color({ opacityValue: alphaValue })\n  }\n\n  let parsed = parseColor(color, { loose: true })\n\n  if (parsed === null) {\n    return defaultValue\n  }\n\n  return formatColor({ ...parsed, alpha: alphaValue })\n}\n\nexport default function withAlphaVariable({ color, property, variable }) {\n  let properties = [].concat(property)\n  if (typeof color === 'function') {\n    return {\n      [variable]: '1',\n      ...Object.fromEntries(\n        properties.map((p) => {\n          return [p, color({ opacityVariable: variable, opacityValue: `var(${variable})` })]\n        })\n      ),\n    }\n  }\n\n  const parsed = parseColor(color)\n\n  if (parsed === null) {\n    return Object.fromEntries(properties.map((p) => [p, color]))\n  }\n\n  if (parsed.alpha !== undefined) {\n    // Has an alpha value, return color as-is\n    return Object.fromEntries(properties.map((p) => [p, color]))\n  }\n\n  return {\n    [variable]: '1',\n    ...Object.fromEntries(\n      properties.map((p) => {\n        return [p, formatColor({ ...parsed, alpha: `var(${variable})` })]\n      })\n    ),\n  }\n}\n", "/**\n * This splits a string on a top-level character.\n *\n * Regex doesn't support recursion (at least not the JS-flavored version).\n * So we have to use a tiny state machine to keep track of paren placement.\n *\n * Expected behavior using commas:\n * var(--a, 0 0 1px rgb(0, 0, 0)), 0 0 1px rgb(0, 0, 0)\n *       \u2500\u252C\u2500             \u252C  \u252C    \u252C\n *        x              x  x    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Split because top-level\n *        \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Ignored b/c inside >= 1 levels of parens\n *\n * @param {string} input\n * @param {string} separator\n */\nexport function splitAtTopLevelOnly(input, separator) {\n  let stack = []\n  let parts = []\n  let lastPos = 0\n  let isEscaped = false\n\n  for (let idx = 0; idx < input.length; idx++) {\n    let char = input[idx]\n\n    if (stack.length === 0 && char === separator[0] && !isEscaped) {\n      if (separator.length === 1 || input.slice(idx, idx + separator.length) === separator) {\n        parts.push(input.slice(lastPos, idx))\n        lastPos = idx + separator.length\n      }\n    }\n\n    if (isEscaped) {\n      isEscaped = false\n    } else if (char === '\\\\') {\n      isEscaped = true\n    }\n\n    if (char === '(' || char === '[' || char === '{') {\n      stack.push(char)\n    } else if (\n      (char === ')' && stack[stack.length - 1] === '(') ||\n      (char === ']' && stack[stack.length - 1] === '[') ||\n      (char === '}' && stack[stack.length - 1] === '{')\n    ) {\n      stack.pop()\n    }\n  }\n\n  parts.push(input.slice(lastPos))\n\n  return parts\n}\n", "import { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\nlet KEYWORDS = new Set(['inset', 'inherit', 'initial', 'revert', 'unset'])\nlet SPACE = /\\ +(?![^(]*\\))/g // Similar to the one above, but with spaces instead.\nlet LENGTH = /^-?(\\d+|\\.\\d+)(.*?)$/g\n\nexport function parseBoxShadowValue(input) {\n  let shadows = splitAtTopLevelOnly(input, ',')\n  return shadows.map((shadow) => {\n    let value = shadow.trim()\n    let result = { raw: value }\n    let parts = value.split(SPACE)\n    let seen = new Set()\n\n    for (let part of parts) {\n      // Reset index, since the regex is stateful.\n      LENGTH.lastIndex = 0\n\n      // Keyword\n      if (!seen.has('KEYWORD') && KEYWORDS.has(part)) {\n        result.keyword = part\n        seen.add('KEYWORD')\n      }\n\n      // Length value\n      else if (LENGTH.test(part)) {\n        if (!seen.has('X')) {\n          result.x = part\n          seen.add('X')\n        } else if (!seen.has('Y')) {\n          result.y = part\n          seen.add('Y')\n        } else if (!seen.has('BLUR')) {\n          result.blur = part\n          seen.add('BLUR')\n        } else if (!seen.has('SPREAD')) {\n          result.spread = part\n          seen.add('SPREAD')\n        }\n      }\n\n      // Color or unknown\n      else {\n        if (!result.color) {\n          result.color = part\n        } else {\n          if (!result.unknown) result.unknown = []\n          result.unknown.push(part)\n        }\n      }\n    }\n\n    // Check if valid\n    result.valid = result.x !== undefined && result.y !== undefined\n\n    return result\n  })\n}\n\nexport function formatBoxShadowValue(shadows) {\n  return shadows\n    .map((shadow) => {\n      if (!shadow.valid) {\n        return shadow.raw\n      }\n\n      return [shadow.keyword, shadow.x, shadow.y, shadow.blur, shadow.spread, shadow.color]\n        .filter(Boolean)\n        .join(' ')\n    })\n    .join(', ')\n}\n", "import { parseColor } from './color'\nimport { parseBoxShadowValue } from './parseBoxShadowValue'\nimport { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\nlet cssFunctions = ['min', 'max', 'clamp', 'calc']\n\n// Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types\n\nfunction isCSSFunction(value) {\n  return cssFunctions.some((fn) => new RegExp(`^${fn}\\\\(.*\\\\)`).test(value))\n}\n\n// These properties accept a `<dashed-ident>` as one of the values. This means that you can use them\n// as: `timeline-scope: --tl;`\n//\n// Without the `var(--tl)`, in these cases we don't want to normalize the value, and you should add\n// the `var()` yourself.\n//\n// More info:\n// - https://drafts.csswg.org/scroll-animations/#propdef-timeline-scope\n// - https://developer.mozilla.org/en-US/docs/Web/CSS/timeline-scope#dashed-ident\n//\nconst AUTO_VAR_INJECTION_EXCEPTIONS = new Set([\n  // Concrete properties\n  'scroll-timeline-name',\n  'timeline-scope',\n  'view-timeline-name',\n  'font-palette',\n\n  // Shorthand properties\n  'scroll-timeline',\n  'animation-timeline',\n  'view-timeline',\n])\n\n// This is not a data type, but rather a function that can normalize the\n// correct values.\nexport function normalize(value, context = null, isRoot = true) {\n  let isVarException = context && AUTO_VAR_INJECTION_EXCEPTIONS.has(context.property)\n  if (value.startsWith('--') && !isVarException) {\n    return `var(${value})`\n  }\n\n  // Keep raw strings if it starts with `url(`\n  if (value.includes('url(')) {\n    return value\n      .split(/(url\\(.*?\\))/g)\n      .filter(Boolean)\n      .map((part) => {\n        if (/^url\\(.*?\\)$/.test(part)) {\n          return part\n        }\n\n        return normalize(part, context, false)\n      })\n      .join('')\n  }\n\n  // Convert `_` to ` `, except for escaped underscores `\\_`\n  value = value\n    .replace(\n      /([^\\\\])_+/g,\n      (fullMatch, characterBefore) => characterBefore + ' '.repeat(fullMatch.length - 1)\n    )\n    .replace(/^_/g, ' ')\n    .replace(/\\\\_/g, '_')\n\n  // Remove leftover whitespace\n  if (isRoot) {\n    value = value.trim()\n  }\n\n  value = normalizeMathOperatorSpacing(value)\n\n  return value\n}\n\n/**\n * Add spaces around operators inside math functions\n * like calc() that do not follow an operator or '('.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeMathOperatorSpacing(value) {\n  let preventFormattingInFunctions = ['theme']\n  let preventFormattingKeywords = [\n    'min-content',\n    'max-content',\n    'fit-content',\n\n    // Env\n    'safe-area-inset-top',\n    'safe-area-inset-right',\n    'safe-area-inset-bottom',\n    'safe-area-inset-left',\n\n    'titlebar-area-x',\n    'titlebar-area-y',\n    'titlebar-area-width',\n    'titlebar-area-height',\n\n    'keyboard-inset-top',\n    'keyboard-inset-right',\n    'keyboard-inset-bottom',\n    'keyboard-inset-left',\n    'keyboard-inset-width',\n    'keyboard-inset-height',\n  ]\n\n  return value.replace(/(calc|min|max|clamp)\\(.+\\)/g, (match) => {\n    let result = ''\n\n    function lastChar() {\n      let char = result.trimEnd()\n      return char[char.length - 1]\n    }\n\n    for (let i = 0; i < match.length; i++) {\n      function peek(word) {\n        return word.split('').every((char, j) => match[i + j] === char)\n      }\n\n      function consumeUntil(chars) {\n        let minIndex = Infinity\n        for (let char of chars) {\n          let index = match.indexOf(char, i)\n          if (index !== -1 && index < minIndex) {\n            minIndex = index\n          }\n        }\n\n        let result = match.slice(i, minIndex)\n        i += result.length - 1\n        return result\n      }\n\n      let char = match[i]\n\n      // Handle `var(--variable)`\n      if (peek('var')) {\n        // When we consume until `)`, then we are dealing with this scenario:\n        //   `var(--example)`\n        //\n        // When we consume until `,`, then we are dealing with this scenario:\n        //   `var(--example, 1rem)`\n        //\n        //   In this case we do want to \"format\", the default value as well\n        result += consumeUntil([')', ','])\n      }\n\n      // Skip formatting of known keywords\n      else if (preventFormattingKeywords.some((keyword) => peek(keyword))) {\n        let keyword = preventFormattingKeywords.find((keyword) => peek(keyword))\n        result += keyword\n        i += keyword.length - 1\n      }\n\n      // Skip formatting inside known functions\n      else if (preventFormattingInFunctions.some((fn) => peek(fn))) {\n        result += consumeUntil([')'])\n      }\n\n      // Handle operators\n      else if (\n        ['+', '-', '*', '/'].includes(char) &&\n        !['(', '+', '-', '*', '/'].includes(lastChar())\n      ) {\n        result += ` ${char} `\n      } else {\n        result += char\n      }\n    }\n\n    // Simplify multiple spaces\n    return result.replace(/\\s+/g, ' ')\n  })\n}\n\nexport function url(value) {\n  return value.startsWith('url(')\n}\n\nexport function number(value) {\n  return !isNaN(Number(value)) || isCSSFunction(value)\n}\n\nexport function percentage(value) {\n  return (value.endsWith('%') && number(value.slice(0, -1))) || isCSSFunction(value)\n}\n\n// Please refer to MDN when updating this list:\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries#container_query_length_units\nlet lengthUnits = [\n  'cm',\n  'mm',\n  'Q',\n  'in',\n  'pc',\n  'pt',\n  'px',\n  'em',\n  'ex',\n  'ch',\n  'rem',\n  'lh',\n  'rlh',\n  'vw',\n  'vh',\n  'vmin',\n  'vmax',\n  'vb',\n  'vi',\n  'svw',\n  'svh',\n  'lvw',\n  'lvh',\n  'dvw',\n  'dvh',\n  'cqw',\n  'cqh',\n  'cqi',\n  'cqb',\n  'cqmin',\n  'cqmax',\n]\nlet lengthUnitsPattern = `(?:${lengthUnits.join('|')})`\nexport function length(value) {\n  return (\n    value === '0' ||\n    new RegExp(`^[+-]?[0-9]*\\.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value) ||\n    isCSSFunction(value)\n  )\n}\n\nlet lineWidths = new Set(['thin', 'medium', 'thick'])\nexport function lineWidth(value) {\n  return lineWidths.has(value)\n}\n\nexport function shadow(value) {\n  let parsedShadows = parseBoxShadowValue(normalize(value))\n\n  for (let parsedShadow of parsedShadows) {\n    if (!parsedShadow.valid) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function color(value) {\n  let colors = 0\n\n  let result = splitAtTopLevelOnly(value, '_').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n    if (parseColor(part, { loose: true }) !== null) return colors++, true\n\n    return false\n  })\n\n  if (!result) return false\n  return colors > 0\n}\n\nexport function image(value) {\n  let images = 0\n  let result = splitAtTopLevelOnly(value, ',').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n    if (\n      url(part) ||\n      gradient(part) ||\n      ['element(', 'image(', 'cross-fade(', 'image-set('].some((fn) => part.startsWith(fn))\n    ) {\n      images++\n      return true\n    }\n\n    return false\n  })\n\n  if (!result) return false\n  return images > 0\n}\n\nlet gradientTypes = new Set([\n  'conic-gradient',\n  'linear-gradient',\n  'radial-gradient',\n  'repeating-conic-gradient',\n  'repeating-linear-gradient',\n  'repeating-radial-gradient',\n])\nexport function gradient(value) {\n  value = normalize(value)\n\n  for (let type of gradientTypes) {\n    if (value.startsWith(`${type}(`)) {\n      return true\n    }\n  }\n  return false\n}\n\nlet validPositions = new Set(['center', 'top', 'right', 'bottom', 'left'])\nexport function position(value) {\n  let positions = 0\n  let result = splitAtTopLevelOnly(value, '_').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n    if (validPositions.has(part) || length(part) || percentage(part)) {\n      positions++\n      return true\n    }\n\n    return false\n  })\n\n  if (!result) return false\n  return positions > 0\n}\n\nexport function familyName(value) {\n  let fonts = 0\n  let result = splitAtTopLevelOnly(value, ',').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n\n    // If it contains spaces, then it should be quoted\n    if (part.includes(' ')) {\n      if (!/(['\"])([^\"']+)\\1/g.test(part)) {\n        return false\n      }\n    }\n\n    // If it starts with a number, it's invalid\n    if (/^\\d/g.test(part)) {\n      return false\n    }\n\n    fonts++\n\n    return true\n  })\n\n  if (!result) return false\n  return fonts > 0\n}\n\nlet genericNames = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'math',\n  'emoji',\n  'fangsong',\n])\nexport function genericName(value) {\n  return genericNames.has(value)\n}\n\nlet absoluteSizes = new Set([\n  'xx-small',\n  'x-small',\n  'small',\n  'medium',\n  'large',\n  'x-large',\n  'x-large',\n  'xxx-large',\n])\nexport function absoluteSize(value) {\n  return absoluteSizes.has(value)\n}\n\nlet relativeSizes = new Set(['larger', 'smaller'])\nexport function relativeSize(value) {\n  return relativeSizes.has(value)\n}\n", "export default function negateValue(value) {\n  value = `${value}`\n\n  if (value === '0') {\n    return '0'\n  }\n\n  // Flip sign of numbers\n  if (/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(value)) {\n    return value.replace(/^[+-]?/, (sign) => (sign === '-' ? '' : '-'))\n  }\n\n  // What functions we support negating numeric values for\n  // var() isn't inherently a numeric function but we support it anyway\n  // The trigonometric functions are omitted because you'll need to use calc(\u2026) with them _anyway_\n  // to produce generally useful results and that will be covered already\n  let numericFunctions = ['var', 'calc', 'min', 'max', 'clamp']\n\n  for (const fn of numericFunctions) {\n    if (value.includes(`${fn}(`)) {\n      return `calc(${value} * -1)`\n    }\n  }\n}\n", "import { length, percentage } from './dataTypes'\nimport { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\n/**\n *\n * https://developer.mozilla.org/en-US/docs/Web/CSS/background-size#formal_syntax\n *\n * background-size =\n *  <bg-size>#\n *\n * <bg-size> =\n *   [ <length-percentage [0,\u221E]> | auto ]{1,2}  |\n *   cover                                      |\n *   contain\n *\n * <length-percentage> =\n *   <length>      |\n *   <percentage>\n *\n * @param {string} value\n */\nexport function backgroundSize(value) {\n  let keywordValues = ['cover', 'contain']\n  // the <length-percentage> type will probably be a css function\n  // so we have to use `splitAtTopLevelOnly`\n  return splitAtTopLevelOnly(value, ',').every((part) => {\n    let sizes = splitAtTopLevelOnly(part, '_').filter(Boolean)\n    if (sizes.length === 1 && keywordValues.includes(sizes[0])) return true\n\n    if (sizes.length !== 1 && sizes.length !== 2) return false\n\n    return sizes.every((size) => length(size) || percentage(size) || size === 'auto')\n  })\n}\n", "export default {\r\n  yellow: (input: string) => input\r\n}\r\n", "// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport function log(): void {}\r\n\r\nexport function dim(input: string): string {\r\n  return input\r\n}\r\n\r\nexport default {\r\n  info: log,\r\n  warn: log,\r\n  risk: log\r\n}\r\n", "import colors from 'picocolors'\nimport log from './util/log'\n\nlet defaults = {\n  optimizeUniversalDefaults: false,\n  generalizedModifiers: true,\n  get disableColorOpacityUtilitiesByDefault() {\n    return __OXIDE__\n  },\n  get relativeContentPathsByDefault() {\n    return __OXIDE__\n  },\n}\n\nlet featureFlags = {\n  future: [\n    'hoverOnlyWhenSupported',\n    'respectDefaultRingColorOpacity',\n    'disableColorOpacityUtilitiesByDefault',\n    'relativeContentPathsByDefault',\n  ],\n  experimental: [\n    'optimizeUniversalDefaults',\n    'generalizedModifiers',\n  ],\n}\n\nexport function flagEnabled(config, flag) {\n  if (featureFlags.future.includes(flag)) {\n    return config.future === 'all' || (config?.future?.[flag] ?? defaults[flag] ?? false)\n  }\n\n  if (featureFlags.experimental.includes(flag)) {\n    return (\n      config.experimental === 'all' || (config?.experimental?.[flag] ?? defaults[flag] ?? false)\n    )\n  }\n\n  return false\n}\n\nfunction experimentalFlagsEnabled(config) {\n  if (config.experimental === 'all') {\n    return featureFlags.experimental\n  }\n\n  return Object.keys(config?.experimental ?? {}).filter(\n    (flag) => featureFlags.experimental.includes(flag) && config.experimental[flag]\n  )\n}\n\nexport function issueFlagNotices(config) {\n  if (process.env.JEST_WORKER_ID !== undefined) {\n    return\n  }\n\n  if (experimentalFlagsEnabled(config).length > 0) {\n    let changes = experimentalFlagsEnabled(config)\n      .map((s) => colors.yellow(s))\n      .join(', ')\n\n    log.warn('experimental-flags-enabled', [\n      `You have enabled experimental features: ${changes}`,\n      'Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.',\n    ])\n  }\n}\n\nexport default featureFlags\n", "import escapeCommas from './escapeCommas'\nimport { withAlphaValue } from './withAlphaVariable'\nimport {\n  normalize,\n  length,\n  number,\n  percentage,\n  url,\n  color as validateColor,\n  genericName,\n  familyName,\n  image,\n  absoluteSize,\n  relativeSize,\n  position,\n  lineWidth,\n  shadow,\n} from './dataTypes'\nimport negateValue from './negateValue'\nimport { backgroundSize } from './validateFormalSyntax'\nimport { flagEnabled } from '../featureFlags.js'\n\n/**\n * @param {import('postcss-selector-parser').Container} selectors\n * @param {(className: string) => string} updateClass\n * @returns {string}\n */\nexport function updateAllClasses(selectors, updateClass) {\n  selectors.walkClasses((sel) => {\n    sel.value = updateClass(sel.value)\n\n    if (sel.raws && sel.raws.value) {\n      sel.raws.value = escapeCommas(sel.raws.value)\n    }\n  })\n}\n\nfunction resolveArbitraryValue(modifier, validate) {\n  if (!isArbitraryValue(modifier)) {\n    return undefined\n  }\n\n  let value = modifier.slice(1, -1)\n\n  if (!validate(value)) {\n    return undefined\n  }\n\n  return normalize(value)\n}\n\nfunction asNegativeValue(modifier, lookup = {}, validate) {\n  let positiveValue = lookup[modifier]\n\n  if (positiveValue !== undefined) {\n    return negateValue(positiveValue)\n  }\n\n  if (isArbitraryValue(modifier)) {\n    let resolved = resolveArbitraryValue(modifier, validate)\n\n    if (resolved === undefined) {\n      return undefined\n    }\n\n    return negateValue(resolved)\n  }\n}\n\nexport function asValue(modifier, options = {}, { validate = () => true } = {}) {\n  let value = options.values?.[modifier]\n\n  if (value !== undefined) {\n    return value\n  }\n\n  if (options.supportsNegativeValues && modifier.startsWith('-')) {\n    return asNegativeValue(modifier.slice(1), options.values, validate)\n  }\n\n  return resolveArbitraryValue(modifier, validate)\n}\n\nfunction isArbitraryValue(input) {\n  return input.startsWith('[') && input.endsWith(']')\n}\n\nfunction splitUtilityModifier(modifier) {\n  let slashIdx = modifier.lastIndexOf('/')\n\n  if (slashIdx === -1 || slashIdx === modifier.length - 1) {\n    return [modifier, undefined]\n  }\n\n  let arbitrary = isArbitraryValue(modifier)\n\n  // The modifier could be of the form `[foo]/[bar]`\n  // We want to handle this case properly\n  // without affecting `[foo/bar]`\n  if (arbitrary && !modifier.includes(']/[')) {\n    return [modifier, undefined]\n  }\n\n  return [modifier.slice(0, slashIdx), modifier.slice(slashIdx + 1)]\n}\n\nexport function parseColorFormat(value) {\n  if (typeof value === 'string' && value.includes('<alpha-value>')) {\n    let oldValue = value\n\n    return ({ opacityValue = 1 }) => oldValue.replace('<alpha-value>', opacityValue)\n  }\n\n  return value\n}\n\nfunction unwrapArbitraryModifier(modifier) {\n  return normalize(modifier.slice(1, -1))\n}\n\nexport function asColor(modifier, options = {}, { tailwindConfig = {} } = {}) {\n  if (options.values?.[modifier] !== undefined) {\n    return parseColorFormat(options.values?.[modifier])\n  }\n\n  // TODO: Hoist this up to getMatchingTypes or something\n  // We do this here because we need the alpha value (if any)\n  let [color, alpha] = splitUtilityModifier(modifier)\n\n  if (alpha !== undefined) {\n    let normalizedColor =\n      options.values?.[color] ?? (isArbitraryValue(color) ? color.slice(1, -1) : undefined)\n\n    if (normalizedColor === undefined) {\n      return undefined\n    }\n\n    normalizedColor = parseColorFormat(normalizedColor)\n\n    if (isArbitraryValue(alpha)) {\n      return withAlphaValue(normalizedColor, unwrapArbitraryModifier(alpha))\n    }\n\n    if (tailwindConfig.theme?.opacity?.[alpha] === undefined) {\n      return undefined\n    }\n\n    return withAlphaValue(normalizedColor, tailwindConfig.theme.opacity[alpha])\n  }\n\n  return asValue(modifier, options, { validate: validateColor })\n}\n\nexport function asLookupValue(modifier, options = {}) {\n  return options.values?.[modifier]\n}\n\nfunction guess(validate) {\n  return (modifier, options) => {\n    return asValue(modifier, options, { validate })\n  }\n}\n\nexport let typeMap = {\n  any: asValue,\n  color: asColor,\n  url: guess(url),\n  image: guess(image),\n  length: guess(length),\n  percentage: guess(percentage),\n  position: guess(position),\n  lookup: asLookupValue,\n  'generic-name': guess(genericName),\n  'family-name': guess(familyName),\n  number: guess(number),\n  'line-width': guess(lineWidth),\n  'absolute-size': guess(absoluteSize),\n  'relative-size': guess(relativeSize),\n  shadow: guess(shadow),\n  size: guess(backgroundSize),\n}\n\nlet supportedTypes = Object.keys(typeMap)\n\nfunction splitAtFirst(input, delim) {\n  let idx = input.indexOf(delim)\n  if (idx === -1) return [undefined, input]\n  return [input.slice(0, idx), input.slice(idx + 1)]\n}\n\nexport function coerceValue(types, modifier, options, tailwindConfig) {\n  if (options.values && modifier in options.values) {\n    for (let { type } of types ?? []) {\n      let result = typeMap[type](modifier, options, {\n        tailwindConfig,\n      })\n\n      if (result === undefined) {\n        continue\n      }\n\n      return [result, type, null]\n    }\n  }\n\n  if (isArbitraryValue(modifier)) {\n    let arbitraryValue = modifier.slice(1, -1)\n    let [explicitType, value] = splitAtFirst(arbitraryValue, ':')\n\n    // It could be that this resolves to `url(https` which is not a valid\n    // identifier. We currently only support \"simple\" words with dashes or\n    // underscores. E.g.: family-name\n    if (!/^[\\w-_]+$/g.test(explicitType)) {\n      value = arbitraryValue\n    }\n\n    //\n    else if (explicitType !== undefined && !supportedTypes.includes(explicitType)) {\n      return []\n    }\n\n    if (value.length > 0 && supportedTypes.includes(explicitType)) {\n      return [asValue(`[${value}]`, options), explicitType, null]\n    }\n  }\n\n  let matches = getMatchingTypes(types, modifier, options, tailwindConfig)\n\n  // Find first matching type\n  for (let match of matches) {\n    return match\n  }\n\n  return []\n}\n\n/**\n *\n * @param {{type: string}[]} types\n * @param {string} rawModifier\n * @param {any} options\n * @param {any} tailwindConfig\n * @returns {Iterator<[value: string, type: string, modifier: string | null]>}\n */\nexport function* getMatchingTypes(types, rawModifier, options, tailwindConfig) {\n  let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n  let [modifier, utilityModifier] = splitUtilityModifier(rawModifier)\n\n  let canUseUtilityModifier =\n    modifiersEnabled &&\n    options.modifiers != null &&\n    (options.modifiers === 'any' ||\n      (typeof options.modifiers === 'object' &&\n        ((utilityModifier && isArbitraryValue(utilityModifier)) ||\n          utilityModifier in options.modifiers)))\n\n  if (!canUseUtilityModifier) {\n    modifier = rawModifier\n    utilityModifier = undefined\n  }\n\n  if (utilityModifier !== undefined && modifier === '') {\n    modifier = 'DEFAULT'\n  }\n\n  // Check the full value first\n  // TODO: Move to asValue\u2026 somehow\n  if (utilityModifier !== undefined) {\n    if (typeof options.modifiers === 'object') {\n      let configValue = options.modifiers?.[utilityModifier] ?? null\n      if (configValue !== null) {\n        utilityModifier = configValue\n      } else if (isArbitraryValue(utilityModifier)) {\n        utilityModifier = unwrapArbitraryModifier(utilityModifier)\n      }\n    }\n  }\n\n  for (let { type } of types ?? []) {\n    let result = typeMap[type](modifier, options, {\n      tailwindConfig,\n    })\n\n    if (result === undefined) {\n      continue\n    }\n\n    yield [result, type, utilityModifier ?? null]\n  }\n}\n", "{\n  \"name\": \"tailwindcss\",\n  \"version\": \"3.3.5\",\n  \"description\": \"A utility-first CSS framework for rapidly building custom user interfaces.\",\n  \"license\": \"MIT\",\n  \"main\": \"lib/index.js\",\n  \"types\": \"types/index.d.ts\",\n  \"repository\": \"https://github.com/tailwindlabs/tailwindcss.git\",\n  \"bugs\": \"https://github.com/tailwindlabs/tailwindcss/issues\",\n  \"homepage\": \"https://tailwindcss.com\",\n  \"bin\": {\n    \"tailwind\": \"lib/cli.js\",\n    \"tailwindcss\": \"lib/cli.js\"\n  },\n  \"tailwindcss\": {\n    \"engine\": \"stable\"\n  },\n  \"scripts\": {\n    \"prebuild\": \"npm run generate && rimraf lib\",\n    \"build\": \"swc src --out-dir lib --copy-files --config jsc.transform.optimizer.globals.vars.__OXIDE__='\\\"false\\\"'\",\n    \"postbuild\": \"esbuild lib/cli-peer-dependencies.js --bundle --platform=node --outfile=peers/index.js --define:process.env.CSS_TRANSFORMER_WASM=false\",\n    \"rebuild-fixtures\": \"npm run build && node -r @swc/register scripts/rebuildFixtures.js\",\n    \"style\": \"eslint .\",\n    \"pretest\": \"npm run generate\",\n    \"test\": \"jest\",\n    \"test:integrations\": \"npm run test --prefix ./integrations\",\n    \"install:integrations\": \"node scripts/install-integrations.js\",\n    \"generate:plugin-list\": \"node -r @swc/register scripts/create-plugin-list.js\",\n    \"generate:types\": \"node -r @swc/register scripts/generate-types.js\",\n    \"generate\": \"npm run generate:plugin-list && npm run generate:types\",\n    \"release-channel\": \"node ./scripts/release-channel.js\",\n    \"release-notes\": \"node ./scripts/release-notes.js\",\n    \"prepublishOnly\": \"npm install --force && npm run build\"\n  },\n  \"files\": [\n    \"src/*\",\n    \"cli/*\",\n    \"lib/*\",\n    \"peers/*\",\n    \"scripts/*.js\",\n    \"stubs/*\",\n    \"nesting/*\",\n    \"types/**/*\",\n    \"*.d.ts\",\n    \"*.css\",\n    \"*.js\"\n  ],\n  \"devDependencies\": {\n    \"@swc/cli\": \"^0.1.62\",\n    \"@swc/core\": \"^1.3.55\",\n    \"@swc/jest\": \"^0.2.26\",\n    \"@swc/register\": \"^0.1.10\",\n    \"autoprefixer\": \"^10.4.14\",\n    \"browserslist\": \"^4.21.5\",\n    \"concurrently\": \"^8.0.1\",\n    \"cssnano\": \"^6.0.0\",\n    \"esbuild\": \"^0.17.18\",\n    \"eslint\": \"^8.39.0\",\n    \"eslint-config-prettier\": \"^8.8.0\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"jest\": \"^29.6.0\",\n    \"jest-diff\": \"^29.6.0\",\n    \"lightningcss\": \"1.18.0\",\n    \"prettier\": \"^2.8.8\",\n    \"rimraf\": \"^5.0.0\",\n    \"source-map-js\": \"^1.0.2\",\n    \"turbo\": \"^1.9.3\"\n  },\n  \"dependencies\": {\n    \"@alloc/quick-lru\": \"^5.2.0\",\n    \"arg\": \"^5.0.2\",\n    \"chokidar\": \"^3.5.3\",\n    \"didyoumean\": \"^1.2.2\",\n    \"dlv\": \"^1.1.3\",\n    \"fast-glob\": \"^3.3.0\",\n    \"glob-parent\": \"^6.0.2\",\n    \"is-glob\": \"^4.0.3\",\n    \"jiti\": \"^1.19.1\",\n    \"lilconfig\": \"^2.1.0\",\n    \"micromatch\": \"^4.0.5\",\n    \"normalize-path\": \"^3.0.0\",\n    \"object-hash\": \"^3.0.0\",\n    \"picocolors\": \"^1.0.0\",\n    \"postcss\": \"^8.4.23\",\n    \"postcss-import\": \"^15.1.0\",\n    \"postcss-js\": \"^4.0.1\",\n    \"postcss-load-config\": \"^4.0.1\",\n    \"postcss-nested\": \"^6.0.1\",\n    \"postcss-selector-parser\": \"^6.0.11\",\n    \"resolve\": \"^1.22.2\",\n    \"sucrase\": \"^3.32.0\"\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"not edge <= 18\",\n    \"not ie 11\",\n    \"not op_mini all\"\n  ],\n  \"jest\": {\n    \"testTimeout\": 30000,\n    \"setupFilesAfterEnv\": [\n      \"<rootDir>/jest/customMatchers.js\"\n    ],\n    \"testPathIgnorePatterns\": [\n      \"/node_modules/\",\n      \"/integrations/\",\n      \"/standalone-cli/\",\n      \"\\\\.test\\\\.skip\\\\.js$\"\n    ],\n    \"transformIgnorePatterns\": [\n      \"node_modules/(?!lightningcss)\"\n    ],\n    \"transform\": {\n      \"\\\\.js$\": \"@swc/jest\",\n      \"\\\\.ts$\": \"@swc/jest\"\n    }\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  }\n}\n", "import pkg from '../../package.json'\n\nexport const env =\n  typeof process !== 'undefined'\n    ? {\n        NODE_ENV: process.env.NODE_ENV,\n        DEBUG: resolveDebug(process.env.DEBUG),\n        ENGINE: pkg.tailwindcss.engine,\n      }\n    : {\n        NODE_ENV: 'production',\n        DEBUG: false,\n        ENGINE: pkg.tailwindcss.engine,\n      }\n\nexport const contextMap = new Map()\nexport const configContextMap = new Map()\nexport const contextSourcesMap = new Map()\nexport const sourceHashMap = new Map()\nexport const NOT_ON_DEMAND = new String('*')\n\nexport const NONE = Symbol('__NONE__')\n\nexport function resolveDebug(debug) {\n  if (debug === undefined) {\n    return false\n  }\n\n  // Environment variables are strings, so convert to boolean\n  if (debug === 'true' || debug === '1') {\n    return true\n  }\n\n  if (debug === 'false' || debug === '0') {\n    return false\n  }\n\n  // Keep the debug convention into account:\n  // DEBUG=* -> This enables all debug modes\n  // DEBUG=projectA,projectB,projectC -> This enables debug for projectA, projectB and projectC\n  // DEBUG=projectA:* -> This enables all debug modes for projectA (if you have sub-types)\n  // DEBUG=projectA,-projectB -> This enables debug for projectA and explicitly disables it for projectB\n\n  if (debug === '*') {\n    return true\n  }\n\n  let debuggers = debug.split(',').map((d) => d.split(':')[0])\n\n  // Ignoring tailwindcss\n  if (debuggers.includes('-tailwindcss')) {\n    return false\n  }\n\n  // Including tailwindcss\n  if (debuggers.includes('tailwindcss')) {\n    return true\n  }\n\n  return false\n}\n", "import selectorParser from 'postcss-selector-parser'\nimport unescape from 'postcss-selector-parser/dist/util/unesc'\nimport escapeClassName from '../util/escapeClassName'\nimport prefixSelector from '../util/prefixSelector'\nimport { movePseudos } from './pseudoElements'\nimport { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\n/** @typedef {import('postcss-selector-parser').Root} Root */\n/** @typedef {import('postcss-selector-parser').Selector} Selector */\n/** @typedef {import('postcss-selector-parser').Pseudo} Pseudo */\n/** @typedef {import('postcss-selector-parser').Node} Node */\n\n/** @typedef {{format: string, respectPrefix: boolean}[]} RawFormats */\n/** @typedef {import('postcss-selector-parser').Root} ParsedFormats */\n/** @typedef {RawFormats | ParsedFormats} AcceptedFormats */\n\nlet MERGE = ':merge'\n\n/**\n * @param {RawFormats} formats\n * @param {{context: any, candidate: string, base: string | null}} options\n * @returns {ParsedFormats | null}\n */\nexport function formatVariantSelector(formats, { context, candidate }) {\n  let prefix = context?.tailwindConfig.prefix ?? ''\n\n  // Parse the format selector into an AST\n  let parsedFormats = formats.map((format) => {\n    let ast = selectorParser().astSync(format.format)\n\n    return {\n      ...format,\n      ast: format.respectPrefix ? prefixSelector(prefix, ast) : ast,\n    }\n  })\n\n  // We start with the candidate selector\n  let formatAst = selectorParser.root({\n    nodes: [\n      selectorParser.selector({\n        nodes: [selectorParser.className({ value: escapeClassName(candidate) })],\n      }),\n    ],\n  })\n\n  // And iteratively merge each format selector into the candidate selector\n  for (let { ast } of parsedFormats) {\n    // 1. Handle :merge() special pseudo-class\n    ;[formatAst, ast] = handleMergePseudo(formatAst, ast)\n\n    // 2. Merge the format selector into the current selector AST\n    ast.walkNesting((nesting) => nesting.replaceWith(...formatAst.nodes[0].nodes))\n\n    // 3. Keep going!\n    formatAst = ast\n  }\n\n  return formatAst\n}\n\n/**\n * Given any node in a selector this gets the \"simple\" selector it's a part of\n * A simple selector is just a list of nodes without any combinators\n * Technically :is(), :not(), :has(), etc\u2026 can have combinators but those are nested\n * inside the relevant node and won't be picked up so they're fine to ignore\n *\n * @param {Node} node\n * @returns {Node[]}\n **/\nfunction simpleSelectorForNode(node) {\n  /** @type {Node[]} */\n  let nodes = []\n\n  // Walk backwards until we hit a combinator node (or the start)\n  while (node.prev() && node.prev().type !== 'combinator') {\n    node = node.prev()\n  }\n\n  // Now record all non-combinator nodes until we hit one (or the end)\n  while (node && node.type !== 'combinator') {\n    nodes.push(node)\n    node = node.next()\n  }\n\n  return nodes\n}\n\n/**\n * Resorts the nodes in a selector to ensure they're in the correct order\n * Tags go before classes, and pseudo classes go after classes\n *\n * @param {Selector} sel\n * @returns {Selector}\n **/\nfunction resortSelector(sel) {\n  sel.sort((a, b) => {\n    if (a.type === 'tag' && b.type === 'class') {\n      return -1\n    } else if (a.type === 'class' && b.type === 'tag') {\n      return 1\n    } else if (a.type === 'class' && b.type === 'pseudo' && b.value.startsWith('::')) {\n      return -1\n    } else if (a.type === 'pseudo' && a.value.startsWith('::') && b.type === 'class') {\n      return 1\n    }\n\n    return sel.index(a) - sel.index(b)\n  })\n\n  return sel\n}\n\n/**\n * Remove extraneous selectors that do not include the base class/candidate\n *\n * Example:\n * Given the utility `.a, .b { color: red}`\n * Given the candidate `sm:b`\n *\n * The final selector should be `.sm\\:b` and not `.a, .sm\\:b`\n *\n * @param {Selector} ast\n * @param {string} base\n */\nexport function eliminateIrrelevantSelectors(sel, base) {\n  let hasClassesMatchingCandidate = false\n\n  sel.walk((child) => {\n    if (child.type === 'class' && child.value === base) {\n      hasClassesMatchingCandidate = true\n      return false // Stop walking\n    }\n  })\n\n  if (!hasClassesMatchingCandidate) {\n    sel.remove()\n  }\n\n  // We do NOT recursively eliminate sub selectors that don't have the base class\n  // as this is NOT a safe operation. For example, if we have:\n  // `.space-x-2 > :not([hidden]) ~ :not([hidden])`\n  // We cannot remove the [hidden] from the :not() because it would change the\n  // meaning of the selector.\n\n  // TODO: Can we do this for :matches, :is, and :where?\n}\n\n/**\n * @param {string} current\n * @param {AcceptedFormats} formats\n * @param {{context: any, candidate: string, base: string | null}} options\n * @returns {string}\n */\nexport function finalizeSelector(current, formats, { context, candidate, base }) {\n  let separator = context?.tailwindConfig?.separator ?? ':'\n\n  // Split by the separator, but ignore the separator inside square brackets:\n  //\n  // E.g.: dark:lg:hover:[paint-order:markers]\n  //           \u252C  \u252C     \u252C            \u252C\n  //           \u2502  \u2502     \u2502            \u2570\u2500\u2500 We will not split here\n  //           \u2570\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 We will split here\n  //\n  base = base ?? splitAtTopLevelOnly(candidate, separator).pop()\n\n  // Parse the selector into an AST\n  let selector = selectorParser().astSync(current)\n\n  // Normalize escaped classes, e.g.:\n  //\n  // The idea would be to replace the escaped `base` in the selector with the\n  // `format`. However, in css you can escape the same selector in a few\n  // different ways. This would result in different strings and therefore we\n  // can't replace it properly.\n  //\n  //               base: bg-[rgb(255,0,0)]\n  //   base in selector: bg-\\\\[rgb\\\\(255\\\\,0\\\\,0\\\\)\\\\]\n  //       escaped base: bg-\\\\[rgb\\\\(255\\\\2c 0\\\\2c 0\\\\)\\\\]\n  //\n  selector.walkClasses((node) => {\n    if (node.raws && node.value.includes(base)) {\n      node.raws.value = escapeClassName(unescape(node.raws.value))\n    }\n  })\n\n  // Remove extraneous selectors that do not include the base candidate\n  selector.each((sel) => eliminateIrrelevantSelectors(sel, base))\n\n  // If ffter eliminating irrelevant selectors, we end up with nothing\n  // Then the whole \"rule\" this is associated with does not need to exist\n  // We use `null` as a marker value for that case\n  if (selector.length === 0) {\n    return null\n  }\n\n  // If there are no formats that means there were no variants added to the candidate\n  // so we can just return the selector as-is\n  let formatAst = Array.isArray(formats)\n    ? formatVariantSelector(formats, { context, candidate })\n    : formats\n\n  if (formatAst === null) {\n    return selector.toString()\n  }\n\n  let simpleStart = selectorParser.comment({ value: '/*__simple__*/' })\n  let simpleEnd = selectorParser.comment({ value: '/*__simple__*/' })\n\n  // We can safely replace the escaped base now, since the `base` section is\n  // now in a normalized escaped value.\n  selector.walkClasses((node) => {\n    if (node.value !== base) {\n      return\n    }\n\n    let parent = node.parent\n    let formatNodes = formatAst.nodes[0].nodes\n\n    // Perf optimization: if the parent is a single class we can just replace it and be done\n    if (parent.nodes.length === 1) {\n      node.replaceWith(...formatNodes)\n      return\n    }\n\n    let simpleSelector = simpleSelectorForNode(node)\n    parent.insertBefore(simpleSelector[0], simpleStart)\n    parent.insertAfter(simpleSelector[simpleSelector.length - 1], simpleEnd)\n\n    for (let child of formatNodes) {\n      parent.insertBefore(simpleSelector[0], child.clone())\n    }\n\n    node.remove()\n\n    // Re-sort the simple selector to ensure it's in the correct order\n    simpleSelector = simpleSelectorForNode(simpleStart)\n    let firstNode = parent.index(simpleStart)\n\n    parent.nodes.splice(\n      firstNode,\n      simpleSelector.length,\n      ...resortSelector(selectorParser.selector({ nodes: simpleSelector })).nodes\n    )\n\n    simpleStart.remove()\n    simpleEnd.remove()\n  })\n\n  // Remove unnecessary pseudo selectors that we used as placeholders\n  selector.walkPseudos((p) => {\n    if (p.value === MERGE) {\n      p.replaceWith(p.nodes)\n    }\n  })\n\n  // Move pseudo elements to the end of the selector (if necessary)\n  selector.each((sel) => movePseudos(sel))\n\n  return selector.toString()\n}\n\n/**\n *\n * @param {Selector} selector\n * @param {Selector} format\n */\nexport function handleMergePseudo(selector, format) {\n  /** @type {{pseudo: Pseudo, value: string}[]} */\n  let merges = []\n\n  // Find all :merge() pseudo-classes in `selector`\n  selector.walkPseudos((pseudo) => {\n    if (pseudo.value === MERGE) {\n      merges.push({\n        pseudo,\n        value: pseudo.nodes[0].toString(),\n      })\n    }\n  })\n\n  // Find all :merge() \"attachments\" in `format` and attach them to the matching selector in `selector`\n  format.walkPseudos((pseudo) => {\n    if (pseudo.value !== MERGE) {\n      return\n    }\n\n    let value = pseudo.nodes[0].toString()\n\n    // Does `selector` contain a :merge() pseudo-class with the same value?\n    let existing = merges.find((merge) => merge.value === value)\n\n    // Nope so there's nothing to do\n    if (!existing) {\n      return\n    }\n\n    // Everything after `:merge()` up to the next combinator is what is attached to the merged selector\n    let attachments = []\n    let next = pseudo.next()\n    while (next && next.type !== 'combinator') {\n      attachments.push(next)\n      next = next.next()\n    }\n\n    let combinator = next\n\n    existing.pseudo.parent.insertAfter(\n      existing.pseudo,\n      selectorParser.selector({ nodes: attachments.map((node) => node.clone()) })\n    )\n\n    pseudo.remove()\n    attachments.forEach((node) => node.remove())\n\n    // What about this case:\n    // :merge(.group):focus > &\n    // :merge(.group):hover &\n    if (combinator && combinator.type === 'combinator') {\n      combinator.remove()\n    }\n  })\n\n  return [selector, format]\n}\n", "import parser from 'postcss-selector-parser'\nimport escapeCommas from './escapeCommas'\n\nexport default function escapeClassName(className) {\n  let node = parser.className()\n  node.value = className\n  return escapeCommas(node?.raws?.value ?? node.value)\n}\n", "/** @typedef {import('postcss-selector-parser').Root} Root */\n/** @typedef {import('postcss-selector-parser').Selector} Selector */\n/** @typedef {import('postcss-selector-parser').Pseudo} Pseudo */\n/** @typedef {import('postcss-selector-parser').Node} Node */\n\n// There are some pseudo-elements that may or may not be:\n\n// **Actionable**\n// Zero or more user-action pseudo-classes may be attached to the pseudo-element itself\n// structural-pseudo-classes are NOT allowed but we don't make\n// The spec is not clear on whether this is allowed or not \u2014 but in practice it is.\n\n// **Terminal**\n// It MUST be placed at the end of a selector\n//\n// This is the required in the spec. However, some pseudo elements are not \"terminal\" because\n// they represent a \"boundary piercing\" that is compiled out by a build step.\n\n// **Jumpable**\n// Any terminal element may \"jump\" over combinators when moving to the end of the selector\n//\n// This is a backwards-compat quirk of pseudo element variants from earlier versions of Tailwind CSS.\n\n/** @typedef {'terminal' | 'actionable' | 'jumpable'} PseudoProperty */\n\n/** @type {Record<string, PseudoProperty[]>} */\nlet elementProperties = {\n  // Pseudo elements from the spec\n  '::after': ['terminal', 'jumpable'],\n  '::backdrop': ['terminal', 'jumpable'],\n  '::before': ['terminal', 'jumpable'],\n  '::cue': ['terminal'],\n  '::cue-region': ['terminal'],\n  '::first-letter': ['terminal', 'jumpable'],\n  '::first-line': ['terminal', 'jumpable'],\n  '::grammar-error': ['terminal'],\n  '::marker': ['terminal', 'jumpable'],\n  '::part': ['terminal', 'actionable'],\n  '::placeholder': ['terminal', 'jumpable'],\n  '::selection': ['terminal', 'jumpable'],\n  '::slotted': ['terminal'],\n  '::spelling-error': ['terminal'],\n  '::target-text': ['terminal'],\n\n  // Pseudo elements from the spec with special rules\n  '::file-selector-button': ['terminal', 'actionable'],\n\n  // Library-specific pseudo elements used by component libraries\n  // These are Shadow DOM-like\n  '::deep': ['actionable'],\n  '::v-deep': ['actionable'],\n  '::ng-deep': ['actionable'],\n\n  // Note: As a rule, double colons (::) should be used instead of a single colon\n  // (:). This distinguishes pseudo-classes from pseudo-elements. However, since\n  // this distinction was not present in older versions of the W3C spec, most\n  // browsers support both syntaxes for the original pseudo-elements.\n  ':after': ['terminal', 'jumpable'],\n  ':before': ['terminal', 'jumpable'],\n  ':first-letter': ['terminal', 'jumpable'],\n  ':first-line': ['terminal', 'jumpable'],\n\n  // The default value is used when the pseudo-element is not recognized\n  // Because it's not recognized, we don't know if it's terminal or not\n  // So we assume it can be moved AND can have user-action pseudo classes attached to it\n  __default__: ['terminal', 'actionable'],\n}\n\n/**\n * @param {Selector} sel\n * @returns {Selector}\n */\nexport function movePseudos(sel) {\n  let [pseudos] = movablePseudos(sel)\n\n  // Remove all pseudo elements from their respective selectors\n  pseudos.forEach(([sel, pseudo]) => sel.removeChild(pseudo))\n\n  // Re-add them to the end of the selector in the correct order.\n  // This moves terminal pseudo elements to the end of the\n  // selector otherwise the selector will not be valid.\n  //\n  // Examples:\n  //  - `before:hover:text-center` would result in `.before\\:hover\\:text-center:hover::before`\n  //  - `hover:before:text-center` would result in `.hover\\:before\\:text-center:hover::before`\n  //\n  // The selector `::before:hover` does not work but we\n  // can make it work for you by flipping the order.\n  sel.nodes.push(...pseudos.map(([, pseudo]) => pseudo))\n\n  return sel\n}\n\n/** @typedef {[sel: Selector, pseudo: Pseudo, attachedTo: Pseudo | null]} MovablePseudo */\n/** @typedef {[pseudos: MovablePseudo[], lastSeenElement: Pseudo | null]} MovablePseudosResult */\n\n/**\n * @param {Selector} sel\n * @returns {MovablePseudosResult}\n */\nfunction movablePseudos(sel) {\n  /** @type {MovablePseudo[]} */\n  let buffer = []\n\n  /** @type {Pseudo | null} */\n  let lastSeenElement = null\n\n  for (let node of sel.nodes) {\n    if (node.type === 'combinator') {\n      buffer = buffer.filter(([, node]) => propertiesForPseudo(node).includes('jumpable'))\n      lastSeenElement = null\n    } else if (node.type === 'pseudo') {\n      if (isMovablePseudoElement(node)) {\n        lastSeenElement = node\n        buffer.push([sel, node, null])\n      } else if (lastSeenElement && isAttachablePseudoClass(node, lastSeenElement)) {\n        buffer.push([sel, node, lastSeenElement])\n      } else {\n        lastSeenElement = null\n      }\n\n      for (let sub of node.nodes ?? []) {\n        let [movable, lastSeenElementInSub] = movablePseudos(sub)\n        lastSeenElement = lastSeenElementInSub || lastSeenElement\n        buffer.push(...movable)\n      }\n    }\n  }\n\n  return [buffer, lastSeenElement]\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isPseudoElement(node) {\n  return node.value.startsWith('::') || elementProperties[node.value] !== undefined\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isMovablePseudoElement(node) {\n  return isPseudoElement(node) && propertiesForPseudo(node).includes('terminal')\n}\n\n/**\n * @param {Node} node\n * @param {Pseudo} pseudo\n * @returns {boolean}\n */\nfunction isAttachablePseudoClass(node, pseudo) {\n  if (node.type !== 'pseudo') return false\n  if (isPseudoElement(node)) return false\n\n  return propertiesForPseudo(pseudo).includes('actionable')\n}\n\n/**\n * @param {Pseudo} pseudo\n * @returns {PseudoProperty[]}\n */\nfunction propertiesForPseudo(pseudo) {\n  return elementProperties[pseudo.value] ?? elementProperties.__default__\n}\n", "import escapeClassName from './escapeClassName'\nimport escapeCommas from './escapeCommas'\n\nexport function asClass(name) {\n  return escapeCommas(`.${escapeClassName(name)}`)\n}\n\nexport default function nameClass(classPrefix, key) {\n  return asClass(formatClass(classPrefix, key))\n}\n\nexport function formatClass(classPrefix, key) {\n  if (key === 'DEFAULT') {\n    return classPrefix\n  }\n\n  if (key === '-' || key === '-DEFAULT') {\n    return `-${classPrefix}`\n  }\n\n  if (key.startsWith('-')) {\n    return `-${classPrefix}${key}`\n  }\n\n  if (key.startsWith('/')) {\n    return `${classPrefix}${key}`\n  }\n\n  return `${classPrefix}-${key}`\n}\n", "/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: theme('borderColor.DEFAULT', currentColor); /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n5. Use the user's configured `sans` font-feature-settings by default.\n6. Use the user's configured `sans` font-variation-settings by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  tab-size: 4; /* 3 */\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"); /* 4 */\n  font-feature-settings: theme('fontFamily.sans[1].fontFeatureSettings', normal); /* 5 */\n  font-variation-settings: theme('fontFamily.sans[1].fontVariationSettings', normal); /* 6 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace); /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-feature-settings: inherit; /* 1 */\n  font-variation-settings: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  font-weight: inherit; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nReset default styling for dialogs.\n*/\ndialog {\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: theme('colors.gray.400', #9ca3af); /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n[hidden] {\n  display: none;\n}\n", "import preflight from 'tailwindcss/src/css/preflight.css'\r\n\r\nexport default {\r\n  // Reading the preflight CSS is the only use of fs at the moment of writing.\r\n  readFileSync: () => preflight\r\n}\r\n", "import fs from 'fs'\nimport url from 'url'\nimport postcss from 'postcss'\nimport dlv from 'dlv'\nimport selectorParser from 'postcss-selector-parser'\n\nimport transformThemeValue from '../util/transformThemeValue'\nimport parseObjectStyles from '../util/parseObjectStyles'\nimport prefixSelector from '../util/prefixSelector'\nimport isPlainObject from '../util/isPlainObject'\nimport escapeClassName from '../util/escapeClassName'\nimport nameClass, { formatClass } from '../util/nameClass'\nimport { coerceValue } from '../util/pluginUtils'\nimport { variantPlugins, corePlugins } from '../corePlugins'\nimport * as sharedState from './sharedState'\nimport { env } from './sharedState'\nimport { toPath } from '../util/toPath'\nimport log from '../util/log'\nimport negateValue from '../util/negateValue'\nimport isSyntacticallyValidPropertyValue from '../util/isSyntacticallyValidPropertyValue'\nimport { generateRules, getClassNameFromSelector } from './generateRules'\nimport { hasContentChanged } from './cacheInvalidation.js'\nimport { Offsets } from './offsets.js'\nimport { flagEnabled } from '../featureFlags.js'\nimport { finalizeSelector, formatVariantSelector } from '../util/formatVariantSelector'\n\nexport const INTERNAL_FEATURES = Symbol()\n\nconst VARIANT_TYPES = {\n  AddVariant: Symbol.for('ADD_VARIANT'),\n  MatchVariant: Symbol.for('MATCH_VARIANT'),\n}\n\nconst VARIANT_INFO = {\n  Base: 1 << 0,\n  Dynamic: 1 << 1,\n}\n\nfunction prefix(context, selector) {\n  let prefix = context.tailwindConfig.prefix\n  return typeof prefix === 'function' ? prefix(selector) : prefix + selector\n}\n\nfunction normalizeOptionTypes({ type = 'any', ...options }) {\n  let types = [].concat(type)\n\n  return {\n    ...options,\n    types: types.map((type) => {\n      if (Array.isArray(type)) {\n        return { type: type[0], ...type[1] }\n      }\n      return { type, preferOnConflict: false }\n    }),\n  }\n}\n\nfunction parseVariantFormatString(input) {\n  /** @type {string[]} */\n  let parts = []\n\n  // When parsing whitespace around special characters are insignificant\n  // However, _inside_ of a variant they could be\n  // Because the selector could look like this\n  // @media { &[data-name=\"foo bar\"] }\n  // This is why we do not skip whitespace\n\n  let current = ''\n  let depth = 0\n\n  for (let idx = 0; idx < input.length; idx++) {\n    let char = input[idx]\n\n    if (char === '\\\\') {\n      // Escaped characters are not special\n      current += '\\\\' + input[++idx]\n    } else if (char === '{') {\n      // Nested rule: start\n      ++depth\n      parts.push(current.trim())\n      current = ''\n    } else if (char === '}') {\n      // Nested rule: end\n      if (--depth < 0) {\n        throw new Error(`Your { and } are unbalanced.`)\n      }\n\n      parts.push(current.trim())\n      current = ''\n    } else {\n      // Normal character\n      current += char\n    }\n  }\n\n  if (current.length > 0) {\n    parts.push(current.trim())\n  }\n\n  parts = parts.filter((part) => part !== '')\n\n  return parts\n}\n\nfunction insertInto(list, value, { before = [] } = {}) {\n  before = [].concat(before)\n\n  if (before.length <= 0) {\n    list.push(value)\n    return\n  }\n\n  let idx = list.length - 1\n  for (let other of before) {\n    let iidx = list.indexOf(other)\n    if (iidx === -1) continue\n    idx = Math.min(idx, iidx)\n  }\n\n  list.splice(idx, 0, value)\n}\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles])\n  }\n\n  return styles.flatMap((style) => {\n    let isNode = !Array.isArray(style) && !isPlainObject(style)\n    return isNode ? style : parseObjectStyles(style)\n  })\n}\n\nfunction getClasses(selector, mutate) {\n  let parser = selectorParser((selectors) => {\n    let allClasses = []\n\n    if (mutate) {\n      mutate(selectors)\n    }\n\n    selectors.walkClasses((classNode) => {\n      allClasses.push(classNode.value)\n    })\n\n    return allClasses\n  })\n  return parser.transformSync(selector)\n}\n\n/**\n * Ignore everything inside a :not(...). This allows you to write code like\n * `div:not(.foo)`. If `.foo` is never found in your code, then we used to\n * not generated it. But now we will ignore everything inside a `:not`, so\n * that it still gets generated.\n *\n * @param {selectorParser.Root} selectors\n */\nfunction ignoreNot(selectors) {\n  selectors.walkPseudos((pseudo) => {\n    if (pseudo.value === ':not') {\n      pseudo.remove()\n    }\n  })\n}\n\nfunction extractCandidates(node, state = { containsNonOnDemandable: false }, depth = 0) {\n  let classes = []\n  let selectors = []\n\n  if (node.type === 'rule') {\n    // Handle normal rules\n    selectors.push(...node.selectors)\n  } else if (node.type === 'atrule') {\n    // Handle at-rules (which contains nested rules)\n    node.walkRules((rule) => selectors.push(...rule.selectors))\n  }\n\n  for (let selector of selectors) {\n    let classCandidates = getClasses(selector, ignoreNot)\n\n    // At least one of the selectors contains non-\"on-demandable\" candidates.\n    if (classCandidates.length === 0) {\n      state.containsNonOnDemandable = true\n    }\n\n    for (let classCandidate of classCandidates) {\n      classes.push(classCandidate)\n    }\n  }\n\n  if (depth === 0) {\n    return [state.containsNonOnDemandable || classes.length === 0, classes]\n  }\n\n  return classes\n}\n\nfunction withIdentifiers(styles) {\n  return parseStyles(styles).flatMap((node) => {\n    let nodeMap = new Map()\n    let [containsNonOnDemandableSelectors, candidates] = extractCandidates(node)\n\n    // If this isn't \"on-demandable\", assign it a universal candidate to always include it.\n    if (containsNonOnDemandableSelectors) {\n      candidates.unshift(sharedState.NOT_ON_DEMAND)\n    }\n\n    // However, it could be that it also contains \"on-demandable\" candidates.\n    // E.g.: `span, .foo {}`, in that case it should still be possible to use\n    // `@apply foo` for example.\n    return candidates.map((c) => {\n      if (!nodeMap.has(node)) {\n        nodeMap.set(node, node)\n      }\n      return [c, nodeMap.get(node)]\n    })\n  })\n}\n\nexport function isValidVariantFormatString(format) {\n  return format.startsWith('@') || format.includes('&')\n}\n\nexport function parseVariant(variant) {\n  variant = variant\n    .replace(/\\n+/g, '')\n    .replace(/\\s{1,}/g, ' ')\n    .trim()\n\n  let fns = parseVariantFormatString(variant)\n    .map((str) => {\n      if (!str.startsWith('@')) {\n        return ({ format }) => format(str)\n      }\n\n      let [, name, params] = /@(\\S*)( .+|[({].*)?/g.exec(str)\n      return ({ wrap }) => wrap(postcss.atRule({ name, params: params?.trim() ?? '' }))\n    })\n    .reverse()\n\n  return (api) => {\n    for (let fn of fns) {\n      fn(api)\n    }\n  }\n}\n\n/**\n *\n * @param {any} tailwindConfig\n * @param {any} context\n * @param {object} param2\n * @param {Offsets} param2.offsets\n */\nfunction buildPluginApi(tailwindConfig, context, { variantList, variantMap, offsets, classList }) {\n  function getConfigValue(path, defaultValue) {\n    return path ? dlv(tailwindConfig, path, defaultValue) : tailwindConfig\n  }\n\n  function applyConfiguredPrefix(selector) {\n    return prefixSelector(tailwindConfig.prefix, selector)\n  }\n\n  function prefixIdentifier(identifier, options) {\n    if (identifier === sharedState.NOT_ON_DEMAND) {\n      return sharedState.NOT_ON_DEMAND\n    }\n\n    if (!options.respectPrefix) {\n      return identifier\n    }\n\n    return context.tailwindConfig.prefix + identifier\n  }\n\n  function resolveThemeValue(path, defaultValue, opts = {}) {\n    let parts = toPath(path)\n    let value = getConfigValue(['theme', ...parts], defaultValue)\n    return transformThemeValue(parts[0])(value, opts)\n  }\n\n  let variantIdentifier = 0\n  let api = {\n    postcss,\n    prefix: applyConfiguredPrefix,\n    e: escapeClassName,\n    config: getConfigValue,\n    theme: resolveThemeValue,\n    corePlugins: (path) => {\n      if (Array.isArray(tailwindConfig.corePlugins)) {\n        return tailwindConfig.corePlugins.includes(path)\n      }\n\n      return getConfigValue(['corePlugins', path], true)\n    },\n    variants: () => {\n      // Preserved for backwards compatibility but not used in v3.0+\n      return []\n    },\n    addBase(base) {\n      for (let [identifier, rule] of withIdentifiers(base)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, {})\n        let offset = offsets.create('base')\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offset, layer: 'base' }, rule])\n      }\n    },\n    /**\n     * @param {string} group\n     * @param {Record<string, string | string[]>} declarations\n     */\n    addDefaults(group, declarations) {\n      const groups = {\n        [`@defaults ${group}`]: declarations,\n      }\n\n      for (let [identifier, rule] of withIdentifiers(groups)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, {})\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offsets.create('defaults'), layer: 'defaults' }, rule])\n      }\n    },\n    addComponents(components, options) {\n      let defaultOptions = {\n        preserveSource: false,\n        respectPrefix: true,\n        respectImportant: false,\n      }\n\n      options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options)\n\n      for (let [identifier, rule] of withIdentifiers(components)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n\n        classList.add(prefixedIdentifier)\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offsets.create('components'), layer: 'components', options }, rule])\n      }\n    },\n    addUtilities(utilities, options) {\n      let defaultOptions = {\n        preserveSource: false,\n        respectPrefix: true,\n        respectImportant: true,\n      }\n\n      options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options)\n\n      for (let [identifier, rule] of withIdentifiers(utilities)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n\n        classList.add(prefixedIdentifier)\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offsets.create('utilities'), layer: 'utilities', options }, rule])\n      }\n    },\n    matchUtilities: function (utilities, options) {\n      let defaultOptions = {\n        respectPrefix: true,\n        respectImportant: true,\n        modifiers: false,\n      }\n\n      options = normalizeOptionTypes({ ...defaultOptions, ...options })\n\n      let offset = offsets.create('utilities')\n\n      for (let identifier in utilities) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n        let rule = utilities[identifier]\n\n        classList.add([prefixedIdentifier, options])\n\n        function wrapped(modifier, { isOnlyPlugin }) {\n          let [value, coercedType, utilityModifier] = coerceValue(\n            options.types,\n            modifier,\n            options,\n            tailwindConfig\n          )\n\n          if (value === undefined) {\n            return []\n          }\n\n          if (!options.types.some(({ type }) => type === coercedType)) {\n            if (isOnlyPlugin) {\n              log.warn([\n                `Unnecessary typehint \\`${coercedType}\\` in \\`${identifier}-${modifier}\\`.`,\n                `You can safely update it to \\`${identifier}-${modifier.replace(\n                  coercedType + ':',\n                  ''\n                )}\\`.`,\n              ])\n            } else {\n              return []\n            }\n          }\n\n          if (!isSyntacticallyValidPropertyValue(value)) {\n            return []\n          }\n\n          let extras = {\n            get modifier() {\n              if (!options.modifiers) {\n                log.warn(`modifier-used-without-options-for-${identifier}`, [\n                  'Your plugin must set `modifiers: true` in its options to support modifiers.',\n                ])\n              }\n\n              return utilityModifier\n            },\n          }\n\n          let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n          let ruleSets = []\n            .concat(modifiersEnabled ? rule(value, extras) : rule(value))\n            .filter(Boolean)\n            .map((declaration) => ({\n              [nameClass(identifier, modifier)]: declaration,\n            }))\n\n          return ruleSets\n        }\n\n        let withOffsets = [{ sort: offset, layer: 'utilities', options }, wrapped]\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets)\n      }\n    },\n    matchComponents: function (components, options) {\n      let defaultOptions = {\n        respectPrefix: true,\n        respectImportant: false,\n        modifiers: false,\n      }\n\n      options = normalizeOptionTypes({ ...defaultOptions, ...options })\n\n      let offset = offsets.create('components')\n\n      for (let identifier in components) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n        let rule = components[identifier]\n\n        classList.add([prefixedIdentifier, options])\n\n        function wrapped(modifier, { isOnlyPlugin }) {\n          let [value, coercedType, utilityModifier] = coerceValue(\n            options.types,\n            modifier,\n            options,\n            tailwindConfig\n          )\n\n          if (value === undefined) {\n            return []\n          }\n\n          if (!options.types.some(({ type }) => type === coercedType)) {\n            if (isOnlyPlugin) {\n              log.warn([\n                `Unnecessary typehint \\`${coercedType}\\` in \\`${identifier}-${modifier}\\`.`,\n                `You can safely update it to \\`${identifier}-${modifier.replace(\n                  coercedType + ':',\n                  ''\n                )}\\`.`,\n              ])\n            } else {\n              return []\n            }\n          }\n\n          if (!isSyntacticallyValidPropertyValue(value)) {\n            return []\n          }\n\n          let extras = {\n            get modifier() {\n              if (!options.modifiers) {\n                log.warn(`modifier-used-without-options-for-${identifier}`, [\n                  'Your plugin must set `modifiers: true` in its options to support modifiers.',\n                ])\n              }\n\n              return utilityModifier\n            },\n          }\n\n          let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n          let ruleSets = []\n            .concat(modifiersEnabled ? rule(value, extras) : rule(value))\n            .filter(Boolean)\n            .map((declaration) => ({\n              [nameClass(identifier, modifier)]: declaration,\n            }))\n\n          return ruleSets\n        }\n\n        let withOffsets = [{ sort: offset, layer: 'components', options }, wrapped]\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets)\n      }\n    },\n    addVariant(variantName, variantFunctions, options = {}) {\n      variantFunctions = [].concat(variantFunctions).map((variantFunction) => {\n        if (typeof variantFunction !== 'string') {\n          // Safelist public API functions\n          return (api = {}) => {\n            let { args, modifySelectors, container, separator, wrap, format } = api\n            let result = variantFunction(\n              Object.assign(\n                { modifySelectors, container, separator },\n                options.type === VARIANT_TYPES.MatchVariant && { args, wrap, format }\n              )\n            )\n\n            if (typeof result === 'string' && !isValidVariantFormatString(result)) {\n              throw new Error(\n                `Your custom variant \\`${variantName}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`\n              )\n            }\n\n            if (Array.isArray(result)) {\n              return result\n                .filter((variant) => typeof variant === 'string')\n                .map((variant) => parseVariant(variant))\n            }\n\n            // result may be undefined with legacy variants that use APIs like `modifySelectors`\n            // result may also be a postcss node if someone was returning the result from `modifySelectors`\n            return result && typeof result === 'string' && parseVariant(result)(api)\n          }\n        }\n\n        if (!isValidVariantFormatString(variantFunction)) {\n          throw new Error(\n            `Your custom variant \\`${variantName}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`\n          )\n        }\n\n        return parseVariant(variantFunction)\n      })\n\n      insertInto(variantList, variantName, options)\n      variantMap.set(variantName, variantFunctions)\n      context.variantOptions.set(variantName, options)\n    },\n    matchVariant(variant, variantFn, options) {\n      // A unique identifier that \"groups\" these variants together.\n      // This is for internal use only which is why it is not present in the types\n      let id = options?.id ?? ++variantIdentifier\n      let isSpecial = variant === '@'\n\n      let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n      for (let [key, value] of Object.entries(options?.values ?? {})) {\n        if (key === 'DEFAULT') continue\n\n        api.addVariant(\n          isSpecial ? `${variant}${key}` : `${variant}-${key}`,\n          ({ args, container }) => {\n            return variantFn(\n              value,\n              modifiersEnabled ? { modifier: args?.modifier, container } : { container }\n            )\n          },\n\n          {\n            ...options,\n            value,\n            id,\n            type: VARIANT_TYPES.MatchVariant,\n            variantInfo: VARIANT_INFO.Base,\n          }\n        )\n      }\n\n      let hasDefault = 'DEFAULT' in (options?.values ?? {})\n\n      api.addVariant(\n        variant,\n        ({ args, container }) => {\n          if (args?.value === sharedState.NONE && !hasDefault) {\n            return null\n          }\n\n          return variantFn(\n            args?.value === sharedState.NONE\n              ? options.values.DEFAULT\n              : // Falling back to args if it is a string, otherwise '' for older intellisense\n                // (JetBrains) plugins.\n                args?.value ?? (typeof args === 'string' ? args : ''),\n            modifiersEnabled ? { modifier: args?.modifier, container } : { container }\n          )\n        },\n        {\n          ...options,\n          id,\n          type: VARIANT_TYPES.MatchVariant,\n          variantInfo: VARIANT_INFO.Dynamic,\n        }\n      )\n    },\n  }\n\n  return api\n}\n\nlet fileModifiedMapCache = new WeakMap()\nexport function getFileModifiedMap(context) {\n  if (!fileModifiedMapCache.has(context)) {\n    fileModifiedMapCache.set(context, new Map())\n  }\n  return fileModifiedMapCache.get(context)\n}\n\nfunction trackModified(files, fileModifiedMap) {\n  let changed = false\n  let mtimesToCommit = new Map()\n\n  for (let file of files) {\n    if (!file) continue\n\n    let parsed = url.parse(file)\n    let pathname = parsed.hash ? parsed.href.replace(parsed.hash, '') : parsed.href\n    pathname = parsed.search ? pathname.replace(parsed.search, '') : pathname\n    let newModified = fs.statSync(decodeURIComponent(pathname), { throwIfNoEntry: false })?.mtimeMs\n    if (!newModified) {\n      // It could happen that a file is passed in that doesn't exist. E.g.:\n      // postcss-cli will provide you a fake path when reading from stdin. This\n      // path then looks like /path-to-your-project/stdin In that case we just\n      // want to ignore it and don't track changes at all.\n      continue\n    }\n\n    if (!fileModifiedMap.has(file) || newModified > fileModifiedMap.get(file)) {\n      changed = true\n    }\n\n    mtimesToCommit.set(file, newModified)\n  }\n\n  return [changed, mtimesToCommit]\n}\n\nfunction extractVariantAtRules(node) {\n  node.walkAtRules((atRule) => {\n    if (['responsive', 'variants'].includes(atRule.name)) {\n      extractVariantAtRules(atRule)\n      atRule.before(atRule.nodes)\n      atRule.remove()\n    }\n  })\n}\n\nfunction collectLayerPlugins(root) {\n  let layerPlugins = []\n\n  root.each((node) => {\n    if (node.type === 'atrule' && ['responsive', 'variants'].includes(node.name)) {\n      node.name = 'layer'\n      node.params = 'utilities'\n    }\n  })\n\n  // Walk @layer rules and treat them like plugins\n  root.walkAtRules('layer', (layerRule) => {\n    extractVariantAtRules(layerRule)\n\n    if (layerRule.params === 'base') {\n      for (let node of layerRule.nodes) {\n        layerPlugins.push(function ({ addBase }) {\n          addBase(node, { respectPrefix: false })\n        })\n      }\n      layerRule.remove()\n    } else if (layerRule.params === 'components') {\n      for (let node of layerRule.nodes) {\n        layerPlugins.push(function ({ addComponents }) {\n          addComponents(node, { respectPrefix: false, preserveSource: true })\n        })\n      }\n      layerRule.remove()\n    } else if (layerRule.params === 'utilities') {\n      for (let node of layerRule.nodes) {\n        layerPlugins.push(function ({ addUtilities }) {\n          addUtilities(node, { respectPrefix: false, preserveSource: true })\n        })\n      }\n      layerRule.remove()\n    }\n  })\n\n  return layerPlugins\n}\n\nfunction resolvePlugins(context, root) {\n  let corePluginList = Object.entries({ ...variantPlugins, ...corePlugins })\n    .map(([name, plugin]) => {\n      if (!context.tailwindConfig.corePlugins.includes(name)) {\n        return null\n      }\n\n      return plugin\n    })\n    .filter(Boolean)\n\n  let userPlugins = context.tailwindConfig.plugins.map((plugin) => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin()\n    }\n\n    return typeof plugin === 'function' ? plugin : plugin.handler\n  })\n\n  let layerPlugins = collectLayerPlugins(root)\n\n  // TODO: This is a workaround for backwards compatibility, since custom variants\n  // were historically sorted before screen/stackable variants.\n  let beforeVariants = [\n    variantPlugins['pseudoElementVariants'],\n    variantPlugins['pseudoClassVariants'],\n    variantPlugins['ariaVariants'],\n    variantPlugins['dataVariants'],\n  ]\n  let afterVariants = [\n    variantPlugins['supportsVariants'],\n    variantPlugins['directionVariants'],\n    variantPlugins['reducedMotionVariants'],\n    variantPlugins['prefersContrastVariants'],\n    variantPlugins['darkVariants'],\n    variantPlugins['printVariant'],\n    variantPlugins['screenVariants'],\n    variantPlugins['orientationVariants'],\n  ]\n\n  return [...corePluginList, ...beforeVariants, ...userPlugins, ...afterVariants, ...layerPlugins]\n}\n\nfunction registerPlugins(plugins, context) {\n  let variantList = []\n  let variantMap = new Map()\n  context.variantMap = variantMap\n\n  let offsets = new Offsets()\n  context.offsets = offsets\n\n  let classList = new Set()\n\n  let pluginApi = buildPluginApi(context.tailwindConfig, context, {\n    variantList,\n    variantMap,\n    offsets,\n    classList,\n  })\n\n  for (let plugin of plugins) {\n    if (Array.isArray(plugin)) {\n      for (let pluginItem of plugin) {\n        pluginItem(pluginApi)\n      }\n    } else {\n      plugin?.(pluginApi)\n    }\n  }\n\n  // Make sure to record bit masks for every variant\n  offsets.recordVariants(variantList, (variant) => variantMap.get(variant).length)\n\n  // Build variantMap\n  for (let [variantName, variantFunctions] of variantMap.entries()) {\n    context.variantMap.set(\n      variantName,\n      variantFunctions.map((variantFunction, idx) => [\n        offsets.forVariant(variantName, idx),\n        variantFunction,\n      ])\n    )\n  }\n\n  let safelist = (context.tailwindConfig.safelist ?? []).filter(Boolean)\n  if (safelist.length > 0) {\n    let checks = []\n\n    for (let value of safelist) {\n      if (typeof value === 'string') {\n        context.changedContent.push({ content: value, extension: 'html' })\n        continue\n      }\n\n      if (value instanceof RegExp) {\n        log.warn('root-regex', [\n          'Regular expressions in `safelist` work differently in Tailwind CSS v3.0.',\n          'Update your `safelist` configuration to eliminate this warning.',\n          'https://tailwindcss.com/docs/content-configuration#safelisting-classes',\n        ])\n        continue\n      }\n\n      checks.push(value)\n    }\n\n    if (checks.length > 0) {\n      let patternMatchingCount = new Map()\n      let prefixLength = context.tailwindConfig.prefix.length\n      let checkImportantUtils = checks.some((check) => check.pattern.source.includes('!'))\n\n      for (let util of classList) {\n        let utils = Array.isArray(util)\n          ? (() => {\n              let [utilName, options] = util\n              let values = Object.keys(options?.values ?? {})\n              let classes = values.map((value) => formatClass(utilName, value))\n\n              if (options?.supportsNegativeValues) {\n                // This is the normal negated version\n                // e.g. `-inset-1` or `-tw-inset-1`\n                classes = [...classes, ...classes.map((cls) => '-' + cls)]\n\n                // This is the negated version *after* the prefix\n                // e.g. `tw--inset-1`\n                // The prefix is already attached to util name\n                // So we add the negative after the prefix\n                classes = [\n                  ...classes,\n                  ...classes.map(\n                    (cls) => cls.slice(0, prefixLength) + '-' + cls.slice(prefixLength)\n                  ),\n                ]\n              }\n\n              if (options.types.some(({ type }) => type === 'color')) {\n                classes = [\n                  ...classes,\n                  ...classes.flatMap((cls) =>\n                    Object.keys(context.tailwindConfig.theme.opacity).map(\n                      (opacity) => `${cls}/${opacity}`\n                    )\n                  ),\n                ]\n              }\n\n              if (checkImportantUtils && options?.respectImportant) {\n                classes = [...classes, ...classes.map((cls) => '!' + cls)]\n              }\n\n              return classes\n            })()\n          : [util]\n\n        for (let util of utils) {\n          for (let { pattern, variants = [] } of checks) {\n            // RegExp with the /g flag are stateful, so let's reset the last\n            // index pointer to reset the state.\n            pattern.lastIndex = 0\n\n            if (!patternMatchingCount.has(pattern)) {\n              patternMatchingCount.set(pattern, 0)\n            }\n\n            if (!pattern.test(util)) continue\n\n            patternMatchingCount.set(pattern, patternMatchingCount.get(pattern) + 1)\n\n            context.changedContent.push({ content: util, extension: 'html' })\n            for (let variant of variants) {\n              context.changedContent.push({\n                content: variant + context.tailwindConfig.separator + util,\n                extension: 'html',\n              })\n            }\n          }\n        }\n      }\n\n      for (let [regex, count] of patternMatchingCount.entries()) {\n        if (count !== 0) continue\n\n        log.warn([\n          `The safelist pattern \\`${regex}\\` doesn't match any Tailwind CSS classes.`,\n          'Fix this pattern or remove it from your `safelist` configuration.',\n          'https://tailwindcss.com/docs/content-configuration#safelisting-classes',\n        ])\n      }\n    }\n  }\n\n  let darkClassName = [].concat(context.tailwindConfig.darkMode ?? 'media')[1] ?? 'dark'\n\n  // A list of utilities that are used by certain Tailwind CSS utilities but\n  // that don't exist on their own. This will result in them \"not existing\" and\n  // sorting could be weird since you still require them in order to make the\n  // host utilities work properly. (Thanks Biology)\n  let parasiteUtilities = [\n    prefix(context, darkClassName),\n    prefix(context, 'group'),\n    prefix(context, 'peer'),\n  ]\n  context.getClassOrder = function getClassOrder(classes) {\n    // Sort classes so they're ordered in a deterministic manner\n    let sorted = [...classes].sort((a, z) => {\n      if (a === z) return 0\n      if (a < z) return -1\n      return 1\n    })\n\n    // Non-util classes won't be generated, so we default them to null\n    let sortedClassNames = new Map(sorted.map((className) => [className, null]))\n\n    // Sort all classes in order\n    // Non-tailwind classes won't be generated and will be left as `null`\n    let rules = generateRules(new Set(sorted), context, true)\n    rules = context.offsets.sort(rules)\n\n    let idx = BigInt(parasiteUtilities.length)\n\n    for (const [, rule] of rules) {\n      let candidate = rule.raws.tailwind.candidate\n\n      // When multiple rules match a candidate\n      // always take the position of the first one\n      sortedClassNames.set(candidate, sortedClassNames.get(candidate) ?? idx++)\n    }\n\n    return classes.map((className) => {\n      let order = sortedClassNames.get(className) ?? null\n      let parasiteIndex = parasiteUtilities.indexOf(className)\n\n      if (order === null && parasiteIndex !== -1) {\n        // This will make sure that it is at the very beginning of the\n        // `components` layer which technically means 'before any\n        // components'.\n        order = BigInt(parasiteIndex)\n      }\n\n      return [className, order]\n    })\n  }\n\n  // Generate a list of strings for autocompletion purposes, e.g.\n  // ['uppercase', 'lowercase', ...]\n  context.getClassList = function getClassList(options = {}) {\n    let output = []\n\n    for (let util of classList) {\n      if (Array.isArray(util)) {\n        let [utilName, utilOptions] = util\n        let negativeClasses = []\n\n        let modifiers = Object.keys(utilOptions?.modifiers ?? {})\n\n        if (utilOptions?.types?.some(({ type }) => type === 'color')) {\n          modifiers.push(...Object.keys(context.tailwindConfig.theme.opacity ?? {}))\n        }\n\n        let metadata = { modifiers }\n        let includeMetadata = options.includeMetadata && modifiers.length > 0\n\n        for (let [key, value] of Object.entries(utilOptions?.values ?? {})) {\n          // Ignore undefined and null values\n          if (value == null) {\n            continue\n          }\n\n          let cls = formatClass(utilName, key)\n          output.push(includeMetadata ? [cls, metadata] : cls)\n\n          if (utilOptions?.supportsNegativeValues && negateValue(value)) {\n            let cls = formatClass(utilName, `-${key}`)\n            negativeClasses.push(includeMetadata ? [cls, metadata] : cls)\n          }\n        }\n\n        output.push(...negativeClasses)\n      } else {\n        output.push(util)\n      }\n    }\n\n    return output\n  }\n\n  // Generate a list of available variants with meta information of the type of variant.\n  context.getVariants = function getVariants() {\n    let result = []\n    for (let [name, options] of context.variantOptions.entries()) {\n      if (options.variantInfo === VARIANT_INFO.Base) continue\n\n      result.push({\n        name,\n        isArbitrary: options.type === Symbol.for('MATCH_VARIANT'),\n        values: Object.keys(options.values ?? {}),\n        hasDash: name !== '@',\n        selectors({ modifier, value } = {}) {\n          let candidate = '__TAILWIND_PLACEHOLDER__'\n\n          let rule = postcss.rule({ selector: `.${candidate}` })\n          let container = postcss.root({ nodes: [rule.clone()] })\n\n          let before = container.toString()\n\n          let fns = (context.variantMap.get(name) ?? []).flatMap(([_, fn]) => fn)\n          let formatStrings = []\n          for (let fn of fns) {\n            let localFormatStrings = []\n\n            let api = {\n              args: { modifier, value: options.values?.[value] ?? value },\n              separator: context.tailwindConfig.separator,\n              modifySelectors(modifierFunction) {\n                // Run the modifierFunction over each rule\n                container.each((rule) => {\n                  if (rule.type !== 'rule') {\n                    return\n                  }\n\n                  rule.selectors = rule.selectors.map((selector) => {\n                    return modifierFunction({\n                      get className() {\n                        return getClassNameFromSelector(selector)\n                      },\n                      selector,\n                    })\n                  })\n                })\n\n                return container\n              },\n              format(str) {\n                localFormatStrings.push(str)\n              },\n              wrap(wrapper) {\n                localFormatStrings.push(`@${wrapper.name} ${wrapper.params} { & }`)\n              },\n              container,\n            }\n\n            let ruleWithVariant = fn(api)\n            if (localFormatStrings.length > 0) {\n              formatStrings.push(localFormatStrings)\n            }\n\n            if (Array.isArray(ruleWithVariant)) {\n              for (let variantFunction of ruleWithVariant) {\n                localFormatStrings = []\n                variantFunction(api)\n                formatStrings.push(localFormatStrings)\n              }\n            }\n          }\n\n          // Reverse engineer the result of the `container`\n          let manualFormatStrings = []\n          let after = container.toString()\n\n          if (before !== after) {\n            // Figure out all selectors\n            container.walkRules((rule) => {\n              let modified = rule.selector\n\n              // Rebuild the base selector, this is what plugin authors would do\n              // as well. E.g.: `${variant}${separator}${className}`.\n              // However, plugin authors probably also prepend or append certain\n              // classes, pseudos, ids, ...\n              let rebuiltBase = selectorParser((selectors) => {\n                selectors.walkClasses((classNode) => {\n                  classNode.value = `${name}${context.tailwindConfig.separator}${classNode.value}`\n                })\n              }).processSync(modified)\n\n              // Now that we know the original selector, the new selector, and\n              // the rebuild part in between, we can replace the part that plugin\n              // authors need to rebuild with `&`, and eventually store it in the\n              // collectedFormats. Similar to what `format('...')` would do.\n              //\n              // E.g.:\n              //                   variant: foo\n              //                  selector: .markdown > p\n              //      modified (by plugin): .foo .foo\\\\:markdown > p\n              //    rebuiltBase (internal): .foo\\\\:markdown > p\n              //                    format: .foo &\n              manualFormatStrings.push(modified.replace(rebuiltBase, '&').replace(candidate, '&'))\n            })\n\n            // Figure out all atrules\n            container.walkAtRules((atrule) => {\n              manualFormatStrings.push(`@${atrule.name} (${atrule.params}) { & }`)\n            })\n          }\n\n          let isArbitraryVariant = !(value in (options.values ?? {}))\n          let internalFeatures = options[INTERNAL_FEATURES] ?? {}\n\n          let respectPrefix = (() => {\n            if (isArbitraryVariant) return false\n            if (internalFeatures.respectPrefix === false) return false\n            return true\n          })()\n\n          formatStrings = formatStrings.map((format) =>\n            format.map((str) => ({\n              format: str,\n              respectPrefix,\n            }))\n          )\n\n          manualFormatStrings = manualFormatStrings.map((format) => ({\n            format,\n            respectPrefix,\n          }))\n\n          let opts = {\n            candidate,\n            context,\n          }\n\n          let result = formatStrings.map((formats) =>\n            finalizeSelector(`.${candidate}`, formatVariantSelector(formats, opts), opts)\n              .replace(`.${candidate}`, '&')\n              .replace('{ & }', '')\n              .trim()\n          )\n\n          if (manualFormatStrings.length > 0) {\n            result.push(\n              formatVariantSelector(manualFormatStrings, opts)\n                .toString()\n                .replace(`.${candidate}`, '&')\n            )\n          }\n\n          return result\n        },\n      })\n    }\n\n    return result\n  }\n}\n\n/**\n * Mark as class as retroactively invalid\n *\n *\n * @param {string} candidate\n */\nfunction markInvalidUtilityCandidate(context, candidate) {\n  if (!context.classCache.has(candidate)) {\n    return\n  }\n\n  // Mark this as not being a real utility\n  context.notClassCache.add(candidate)\n\n  // Remove it from any candidate-specific caches\n  context.classCache.delete(candidate)\n  context.applyClassCache.delete(candidate)\n  context.candidateRuleMap.delete(candidate)\n  context.candidateRuleCache.delete(candidate)\n\n  // Ensure the stylesheet gets rebuilt\n  context.stylesheetCache = null\n}\n\n/**\n * Mark as class as retroactively invalid\n *\n * @param {import('postcss').Node} node\n */\nfunction markInvalidUtilityNode(context, node) {\n  let candidate = node.raws.tailwind.candidate\n\n  if (!candidate) {\n    return\n  }\n\n  for (const entry of context.ruleCache) {\n    if (entry[1].raws.tailwind.candidate === candidate) {\n      context.ruleCache.delete(entry)\n      // context.postCssNodeCache.delete(node)\n    }\n  }\n\n  markInvalidUtilityCandidate(context, candidate)\n}\n\nexport function createContext(tailwindConfig, changedContent = [], root = postcss.root()) {\n  let context = {\n    disposables: [],\n    ruleCache: new Set(),\n    candidateRuleCache: new Map(),\n    classCache: new Map(),\n    applyClassCache: new Map(),\n    // Seed the not class cache with the blocklist (which is only strings)\n    notClassCache: new Set(tailwindConfig.blocklist ?? []),\n    postCssNodeCache: new Map(),\n    candidateRuleMap: new Map(),\n    tailwindConfig,\n    changedContent: changedContent,\n    variantMap: new Map(),\n    stylesheetCache: null,\n    variantOptions: new Map(),\n\n    markInvalidUtilityCandidate: (candidate) => markInvalidUtilityCandidate(context, candidate),\n    markInvalidUtilityNode: (node) => markInvalidUtilityNode(context, node),\n  }\n\n  let resolvedPlugins = resolvePlugins(context, root)\n  registerPlugins(resolvedPlugins, context)\n\n  return context\n}\n\nlet contextMap = sharedState.contextMap\nlet configContextMap = sharedState.configContextMap\nlet contextSourcesMap = sharedState.contextSourcesMap\n\nexport function getContext(\n  root,\n  result,\n  tailwindConfig,\n  userConfigPath,\n  tailwindConfigHash,\n  contextDependencies\n) {\n  let sourcePath = result.opts.from\n  let isConfigFile = userConfigPath !== null\n\n  env.DEBUG && console.log('Source path:', sourcePath)\n\n  let existingContext\n\n  if (isConfigFile && contextMap.has(sourcePath)) {\n    existingContext = contextMap.get(sourcePath)\n  } else if (configContextMap.has(tailwindConfigHash)) {\n    let context = configContextMap.get(tailwindConfigHash)\n    contextSourcesMap.get(context).add(sourcePath)\n    contextMap.set(sourcePath, context)\n\n    existingContext = context\n  }\n\n  let cssDidChange = hasContentChanged(sourcePath, root)\n\n  // If there's already a context in the cache and we don't need to\n  // reset the context, return the cached context.\n  if (existingContext) {\n    let [contextDependenciesChanged, mtimesToCommit] = trackModified(\n      [...contextDependencies],\n      getFileModifiedMap(existingContext)\n    )\n    if (!contextDependenciesChanged && !cssDidChange) {\n      return [existingContext, false, mtimesToCommit]\n    }\n  }\n\n  // If this source is in the context map, get the old context.\n  // Remove this source from the context sources for the old context,\n  // and clean up that context if no one else is using it. This can be\n  // called by many processes in rapid succession, so we check for presence\n  // first because the first process to run this code will wipe it out first.\n  if (contextMap.has(sourcePath)) {\n    let oldContext = contextMap.get(sourcePath)\n    if (contextSourcesMap.has(oldContext)) {\n      contextSourcesMap.get(oldContext).delete(sourcePath)\n      if (contextSourcesMap.get(oldContext).size === 0) {\n        contextSourcesMap.delete(oldContext)\n        for (let [tailwindConfigHash, context] of configContextMap) {\n          if (context === oldContext) {\n            configContextMap.delete(tailwindConfigHash)\n          }\n        }\n        for (let disposable of oldContext.disposables.splice(0)) {\n          disposable(oldContext)\n        }\n      }\n    }\n  }\n\n  env.DEBUG && console.log('Setting up new context...')\n\n  let context = createContext(tailwindConfig, [], root)\n\n  Object.assign(context, {\n    userConfigPath,\n  })\n\n  let [, mtimesToCommit] = trackModified([...contextDependencies], getFileModifiedMap(context))\n\n  // ---\n\n  // Update all context tracking state\n\n  configContextMap.set(tailwindConfigHash, context)\n  contextMap.set(sourcePath, context)\n\n  if (!contextSourcesMap.has(context)) {\n    contextSourcesMap.set(context, new Set())\n  }\n\n  contextSourcesMap.get(context).add(sourcePath)\n\n  return [context, true, mtimesToCommit]\n}\n", "import postcss from 'postcss'\nimport isPlainObject from './isPlainObject'\n\nexport default function transformThemeValue(themeSection) {\n  if (['fontSize', 'outline'].includes(themeSection)) {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      if (Array.isArray(value)) value = value[0]\n\n      return value\n    }\n  }\n\n  if (themeSection === 'fontFamily') {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      let families = Array.isArray(value) && isPlainObject(value[1]) ? value[0] : value\n      return Array.isArray(families) ? families.join(', ') : families\n    }\n  }\n\n  if (\n    [\n      'boxShadow',\n      'transitionProperty',\n      'transitionDuration',\n      'transitionDelay',\n      'transitionTimingFunction',\n      'backgroundImage',\n      'backgroundSize',\n      'backgroundColor',\n      'cursor',\n      'animation',\n    ].includes(themeSection)\n  ) {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      if (Array.isArray(value)) value = value.join(', ')\n\n      return value\n    }\n  }\n\n  // For backwards compatibility reasons, before we switched to underscores\n  // instead of commas for arbitrary values.\n  if (['gridTemplateColumns', 'gridTemplateRows', 'objectPosition'].includes(themeSection)) {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      if (typeof value === 'string') value = postcss.list.comma(value).join(' ')\n\n      return value\n    }\n  }\n\n  return (value, opts = {}) => {\n    if (typeof value === 'function') {\n      value = value(opts)\n    }\n\n    return value\n  }\n}\n", "export const join = (): string => ''\r\n", "import fs from 'fs'\nimport * as path from 'path'\nimport postcss from 'postcss'\nimport createUtilityPlugin from './util/createUtilityPlugin'\nimport buildMediaQuery from './util/buildMediaQuery'\nimport escapeClassName from './util/escapeClassName'\nimport parseAnimationValue from './util/parseAnimationValue'\nimport flattenColorPalette from './util/flattenColorPalette'\nimport withAlphaVariable, { withAlphaValue } from './util/withAlphaVariable'\nimport toColorValue from './util/toColorValue'\nimport isPlainObject from './util/isPlainObject'\nimport transformThemeValue from './util/transformThemeValue'\nimport { version as tailwindVersion } from '../package.json'\nimport log from './util/log'\nimport {\n  normalizeScreens,\n  isScreenSortable,\n  compareScreens,\n  toScreen,\n} from './util/normalizeScreens'\nimport { formatBoxShadowValue, parseBoxShadowValue } from './util/parseBoxShadowValue'\nimport { removeAlphaVariables } from './util/removeAlphaVariables'\nimport { flagEnabled } from './featureFlags'\nimport { normalize } from './util/dataTypes'\nimport { INTERNAL_FEATURES } from './lib/setupContextUtils'\n\nexport let variantPlugins = {\n  pseudoElementVariants: ({ addVariant }) => {\n    addVariant('first-letter', '&::first-letter')\n    addVariant('first-line', '&::first-line')\n\n    addVariant('marker', [\n      ({ container }) => {\n        removeAlphaVariables(container, ['--tw-text-opacity'])\n\n        return '& *::marker'\n      },\n      ({ container }) => {\n        removeAlphaVariables(container, ['--tw-text-opacity'])\n\n        return '&::marker'\n      },\n    ])\n\n    addVariant('selection', ['& *::selection', '&::selection'])\n\n    addVariant('file', '&::file-selector-button')\n\n    addVariant('placeholder', '&::placeholder')\n\n    addVariant('backdrop', '&::backdrop')\n\n    addVariant('before', ({ container }) => {\n      container.walkRules((rule) => {\n        let foundContent = false\n        rule.walkDecls('content', () => {\n          foundContent = true\n        })\n\n        if (!foundContent) {\n          rule.prepend(postcss.decl({ prop: 'content', value: 'var(--tw-content)' }))\n        }\n      })\n\n      return '&::before'\n    })\n\n    addVariant('after', ({ container }) => {\n      container.walkRules((rule) => {\n        let foundContent = false\n        rule.walkDecls('content', () => {\n          foundContent = true\n        })\n\n        if (!foundContent) {\n          rule.prepend(postcss.decl({ prop: 'content', value: 'var(--tw-content)' }))\n        }\n      })\n\n      return '&::after'\n    })\n  },\n\n  pseudoClassVariants: ({ addVariant, matchVariant, config, prefix }) => {\n    let pseudoVariants = [\n      // Positional\n      ['first', '&:first-child'],\n      ['last', '&:last-child'],\n      ['only', '&:only-child'],\n      ['odd', '&:nth-child(odd)'],\n      ['even', '&:nth-child(even)'],\n      'first-of-type',\n      'last-of-type',\n      'only-of-type',\n\n      // State\n      [\n        'visited',\n        ({ container }) => {\n          removeAlphaVariables(container, [\n            '--tw-text-opacity',\n            '--tw-border-opacity',\n            '--tw-bg-opacity',\n          ])\n\n          return '&:visited'\n        },\n      ],\n      'target',\n      ['open', '&[open]'],\n\n      // Forms\n      'default',\n      'checked',\n      'indeterminate',\n      'placeholder-shown',\n      'autofill',\n      'optional',\n      'required',\n      'valid',\n      'invalid',\n      'in-range',\n      'out-of-range',\n      'read-only',\n\n      // Content\n      'empty',\n\n      // Interactive\n      'focus-within',\n      [\n        'hover',\n        !flagEnabled(config(), 'hoverOnlyWhenSupported')\n          ? '&:hover'\n          : '@media (hover: hover) and (pointer: fine) { &:hover }',\n      ],\n      'focus',\n      'focus-visible',\n      'active',\n      'enabled',\n      'disabled',\n    ].map((variant) => (Array.isArray(variant) ? variant : [variant, `&:${variant}`]))\n\n    for (let [variantName, state] of pseudoVariants) {\n      addVariant(variantName, (ctx) => {\n        let result = typeof state === 'function' ? state(ctx) : state\n\n        return result\n      })\n    }\n\n    let variants = {\n      group: (_, { modifier }) =>\n        modifier\n          ? [`:merge(${prefix('.group')}\\\\/${escapeClassName(modifier)})`, ' &']\n          : [`:merge(${prefix('.group')})`, ' &'],\n      peer: (_, { modifier }) =>\n        modifier\n          ? [`:merge(${prefix('.peer')}\\\\/${escapeClassName(modifier)})`, ' ~ &']\n          : [`:merge(${prefix('.peer')})`, ' ~ &'],\n    }\n\n    for (let [name, fn] of Object.entries(variants)) {\n      matchVariant(\n        name,\n        (value = '', extra) => {\n          let result = normalize(typeof value === 'function' ? value(extra) : value)\n          if (!result.includes('&')) result = '&' + result\n\n          let [a, b] = fn('', extra)\n\n          let start = null\n          let end = null\n          let quotes = 0\n\n          for (let i = 0; i < result.length; ++i) {\n            let c = result[i]\n            if (c === '&') {\n              start = i\n            } else if (c === \"'\" || c === '\"') {\n              quotes += 1\n            } else if (start !== null && c === ' ' && !quotes) {\n              end = i\n            }\n          }\n\n          if (start !== null && end === null) {\n            end = result.length\n          }\n\n          // Basically this but can handle quotes:\n          // result.replace(/&(\\S+)?/g, (_, pseudo = '') => a + pseudo + b)\n\n          return result.slice(0, start) + a + result.slice(start + 1, end) + b + result.slice(end)\n        },\n        {\n          values: Object.fromEntries(pseudoVariants),\n          [INTERNAL_FEATURES]: {\n            respectPrefix: false,\n          },\n        }\n      )\n    }\n  },\n\n  directionVariants: ({ addVariant }) => {\n    addVariant('ltr', ':is([dir=\"ltr\"] &)')\n    addVariant('rtl', ':is([dir=\"rtl\"] &)')\n  },\n\n  reducedMotionVariants: ({ addVariant }) => {\n    addVariant('motion-safe', '@media (prefers-reduced-motion: no-preference)')\n    addVariant('motion-reduce', '@media (prefers-reduced-motion: reduce)')\n  },\n\n  darkVariants: ({ config, addVariant }) => {\n    let [mode, className = '.dark'] = [].concat(config('darkMode', 'media'))\n\n    if (mode === false) {\n      mode = 'media'\n      log.warn('darkmode-false', [\n        'The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.',\n        'Change `darkMode` to `media` or remove it entirely.',\n        'https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration',\n      ])\n    }\n\n    if (mode === 'class') {\n      addVariant('dark', `:is(${className} &)`)\n    } else if (mode === 'media') {\n      addVariant('dark', '@media (prefers-color-scheme: dark)')\n    }\n  },\n\n  printVariant: ({ addVariant }) => {\n    addVariant('print', '@media print')\n  },\n\n  screenVariants: ({ theme, addVariant, matchVariant }) => {\n    let rawScreens = theme('screens') ?? {}\n    let areSimpleScreens = Object.values(rawScreens).every((v) => typeof v === 'string')\n    let screens = normalizeScreens(theme('screens'))\n\n    /** @type {Set<string>} */\n    let unitCache = new Set([])\n\n    /** @param {string} value */\n    function units(value) {\n      return value.match(/(\\D+)$/)?.[1] ?? '(none)'\n    }\n\n    /** @param {string} value */\n    function recordUnits(value) {\n      if (value !== undefined) {\n        unitCache.add(units(value))\n      }\n    }\n\n    /** @param {string} value */\n    function canUseUnits(value) {\n      recordUnits(value)\n\n      // If the cache was empty it'll become 1 because we've just added the current unit\n      // If the cache was not empty and the units are the same the size doesn't change\n      // Otherwise, if the units are different from what is already known the size will always be > 1\n      return unitCache.size === 1\n    }\n\n    for (const screen of screens) {\n      for (const value of screen.values) {\n        recordUnits(value.min)\n        recordUnits(value.max)\n      }\n    }\n\n    let screensUseConsistentUnits = unitCache.size <= 1\n\n    /**\n     * @typedef {import('./util/normalizeScreens').Screen} Screen\n     */\n\n    /**\n     * @param {'min' | 'max'} type\n     * @returns {Record<string, Screen>}\n     */\n    function buildScreenValues(type) {\n      return Object.fromEntries(\n        screens\n          .filter((screen) => isScreenSortable(screen).result)\n          .map((screen) => {\n            let { min, max } = screen.values[0]\n\n            if (type === 'min' && min !== undefined) {\n              return screen\n            } else if (type === 'min' && max !== undefined) {\n              return { ...screen, not: !screen.not }\n            } else if (type === 'max' && max !== undefined) {\n              return screen\n            } else if (type === 'max' && min !== undefined) {\n              return { ...screen, not: !screen.not }\n            }\n          })\n          .map((screen) => [screen.name, screen])\n      )\n    }\n\n    /**\n     * @param {'min' | 'max'} type\n     * @returns {(a: { value: string | Screen }, z: { value: string | Screen }) => number}\n     */\n    function buildSort(type) {\n      return (a, z) => compareScreens(type, a.value, z.value)\n    }\n\n    let maxSort = buildSort('max')\n    let minSort = buildSort('min')\n\n    /** @param {'min'|'max'} type */\n    function buildScreenVariant(type) {\n      return (value) => {\n        if (!areSimpleScreens) {\n          log.warn('complex-screen-config', [\n            'The `min-*` and `max-*` variants are not supported with a `screens` configuration containing objects.',\n          ])\n\n          return []\n        } else if (!screensUseConsistentUnits) {\n          log.warn('mixed-screen-units', [\n            'The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.',\n          ])\n\n          return []\n        } else if (typeof value === 'string' && !canUseUnits(value)) {\n          log.warn('minmax-have-mixed-units', [\n            'The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.',\n          ])\n\n          return []\n        }\n\n        return [`@media ${buildMediaQuery(toScreen(value, type))}`]\n      }\n    }\n\n    matchVariant('max', buildScreenVariant('max'), {\n      sort: maxSort,\n      values: areSimpleScreens ? buildScreenValues('max') : {},\n    })\n\n    // screens and min-* are sorted together when they can be\n    let id = 'min-screens'\n    for (let screen of screens) {\n      addVariant(screen.name, `@media ${buildMediaQuery(screen)}`, {\n        id,\n        sort: areSimpleScreens && screensUseConsistentUnits ? minSort : undefined,\n        value: screen,\n      })\n    }\n\n    matchVariant('min', buildScreenVariant('min'), {\n      id,\n      sort: minSort,\n    })\n  },\n\n  supportsVariants: ({ matchVariant, theme }) => {\n    matchVariant(\n      'supports',\n      (value = '') => {\n        let check = normalize(value)\n        let isRaw = /^\\w*\\s*\\(/.test(check)\n\n        // Chrome has a bug where `(condtion1)or(condition2)` is not valid\n        // But `(condition1) or (condition2)` is supported.\n        check = isRaw ? check.replace(/\\b(and|or|not)\\b/g, ' $1 ') : check\n\n        if (isRaw) {\n          return `@supports ${check}`\n        }\n\n        if (!check.includes(':')) {\n          check = `${check}: var(--tw)`\n        }\n\n        if (!(check.startsWith('(') && check.endsWith(')'))) {\n          check = `(${check})`\n        }\n\n        return `@supports ${check}`\n      },\n      { values: theme('supports') ?? {} }\n    )\n  },\n\n  ariaVariants: ({ matchVariant, theme }) => {\n    matchVariant('aria', (value) => `&[aria-${normalize(value)}]`, { values: theme('aria') ?? {} })\n    matchVariant(\n      'group-aria',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.group\\\\/${modifier})[aria-${normalize(value)}] &`\n          : `:merge(.group)[aria-${normalize(value)}] &`,\n      { values: theme('aria') ?? {} }\n    )\n    matchVariant(\n      'peer-aria',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.peer\\\\/${modifier})[aria-${normalize(value)}] ~ &`\n          : `:merge(.peer)[aria-${normalize(value)}] ~ &`,\n      { values: theme('aria') ?? {} }\n    )\n  },\n\n  dataVariants: ({ matchVariant, theme }) => {\n    matchVariant('data', (value) => `&[data-${normalize(value)}]`, { values: theme('data') ?? {} })\n    matchVariant(\n      'group-data',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.group\\\\/${modifier})[data-${normalize(value)}] &`\n          : `:merge(.group)[data-${normalize(value)}] &`,\n      { values: theme('data') ?? {} }\n    )\n    matchVariant(\n      'peer-data',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.peer\\\\/${modifier})[data-${normalize(value)}] ~ &`\n          : `:merge(.peer)[data-${normalize(value)}] ~ &`,\n      { values: theme('data') ?? {} }\n    )\n  },\n\n  orientationVariants: ({ addVariant }) => {\n    addVariant('portrait', '@media (orientation: portrait)')\n    addVariant('landscape', '@media (orientation: landscape)')\n  },\n\n  prefersContrastVariants: ({ addVariant }) => {\n    addVariant('contrast-more', '@media (prefers-contrast: more)')\n    addVariant('contrast-less', '@media (prefers-contrast: less)')\n  },\n}\n\nlet cssTransformValue = [\n  'translate(var(--tw-translate-x), var(--tw-translate-y))',\n  'rotate(var(--tw-rotate))',\n  'skewX(var(--tw-skew-x))',\n  'skewY(var(--tw-skew-y))',\n  'scaleX(var(--tw-scale-x))',\n  'scaleY(var(--tw-scale-y))',\n].join(' ')\n\nlet cssFilterValue = [\n  'var(--tw-blur)',\n  'var(--tw-brightness)',\n  'var(--tw-contrast)',\n  'var(--tw-grayscale)',\n  'var(--tw-hue-rotate)',\n  'var(--tw-invert)',\n  'var(--tw-saturate)',\n  'var(--tw-sepia)',\n  'var(--tw-drop-shadow)',\n].join(' ')\n\nlet cssBackdropFilterValue = [\n  'var(--tw-backdrop-blur)',\n  'var(--tw-backdrop-brightness)',\n  'var(--tw-backdrop-contrast)',\n  'var(--tw-backdrop-grayscale)',\n  'var(--tw-backdrop-hue-rotate)',\n  'var(--tw-backdrop-invert)',\n  'var(--tw-backdrop-opacity)',\n  'var(--tw-backdrop-saturate)',\n  'var(--tw-backdrop-sepia)',\n].join(' ')\n\nexport let corePlugins = {\n  preflight: ({ addBase }) => {\n    let preflightStyles = postcss.parse(\n      fs.readFileSync(path.join(__dirname, './css/preflight.css'), 'utf8')\n    )\n\n    addBase([\n      postcss.comment({\n        text: `! tailwindcss v${tailwindVersion} | MIT License | https://tailwindcss.com`,\n      }),\n      ...preflightStyles.nodes,\n    ])\n  },\n\n  container: (() => {\n    function extractMinWidths(breakpoints = []) {\n      return breakpoints\n        .flatMap((breakpoint) => breakpoint.values.map((breakpoint) => breakpoint.min))\n        .filter((v) => v !== undefined)\n    }\n\n    function mapMinWidthsToPadding(minWidths, screens, paddings) {\n      if (typeof paddings === 'undefined') {\n        return []\n      }\n\n      if (!(typeof paddings === 'object' && paddings !== null)) {\n        return [\n          {\n            screen: 'DEFAULT',\n            minWidth: 0,\n            padding: paddings,\n          },\n        ]\n      }\n\n      let mapping = []\n\n      if (paddings.DEFAULT) {\n        mapping.push({\n          screen: 'DEFAULT',\n          minWidth: 0,\n          padding: paddings.DEFAULT,\n        })\n      }\n\n      for (let minWidth of minWidths) {\n        for (let screen of screens) {\n          for (let { min } of screen.values) {\n            if (min === minWidth) {\n              mapping.push({ minWidth, padding: paddings[screen.name] })\n            }\n          }\n        }\n      }\n\n      return mapping\n    }\n\n    return function ({ addComponents, theme }) {\n      let screens = normalizeScreens(theme('container.screens', theme('screens')))\n      let minWidths = extractMinWidths(screens)\n      let paddings = mapMinWidthsToPadding(minWidths, screens, theme('container.padding'))\n\n      let generatePaddingFor = (minWidth) => {\n        let paddingConfig = paddings.find((padding) => padding.minWidth === minWidth)\n\n        if (!paddingConfig) {\n          return {}\n        }\n\n        return {\n          paddingRight: paddingConfig.padding,\n          paddingLeft: paddingConfig.padding,\n        }\n      }\n\n      let atRules = Array.from(\n        new Set(minWidths.slice().sort((a, z) => parseInt(a) - parseInt(z)))\n      ).map((minWidth) => ({\n        [`@media (min-width: ${minWidth})`]: {\n          '.container': {\n            'max-width': minWidth,\n            ...generatePaddingFor(minWidth),\n          },\n        },\n      }))\n\n      addComponents([\n        {\n          '.container': Object.assign(\n            { width: '100%' },\n            theme('container.center', false) ? { marginRight: 'auto', marginLeft: 'auto' } : {},\n            generatePaddingFor(0)\n          ),\n        },\n        ...atRules,\n      ])\n    }\n  })(),\n\n  accessibility: ({ addUtilities }) => {\n    addUtilities({\n      '.sr-only': {\n        position: 'absolute',\n        width: '1px',\n        height: '1px',\n        padding: '0',\n        margin: '-1px',\n        overflow: 'hidden',\n        clip: 'rect(0, 0, 0, 0)',\n        whiteSpace: 'nowrap',\n        borderWidth: '0',\n      },\n      '.not-sr-only': {\n        position: 'static',\n        width: 'auto',\n        height: 'auto',\n        padding: '0',\n        margin: '0',\n        overflow: 'visible',\n        clip: 'auto',\n        whiteSpace: 'normal',\n      },\n    })\n  },\n\n  pointerEvents: ({ addUtilities }) => {\n    addUtilities({\n      '.pointer-events-none': { 'pointer-events': 'none' },\n      '.pointer-events-auto': { 'pointer-events': 'auto' },\n    })\n  },\n\n  visibility: ({ addUtilities }) => {\n    addUtilities({\n      '.visible': { visibility: 'visible' },\n      '.invisible': { visibility: 'hidden' },\n      '.collapse': { visibility: 'collapse' },\n    })\n  },\n\n  position: ({ addUtilities }) => {\n    addUtilities({\n      '.static': { position: 'static' },\n      '.fixed': { position: 'fixed' },\n      '.absolute': { position: 'absolute' },\n      '.relative': { position: 'relative' },\n      '.sticky': { position: 'sticky' },\n    })\n  },\n\n  inset: createUtilityPlugin(\n    'inset',\n    [\n      ['inset', ['inset']],\n      [\n        ['inset-x', ['left', 'right']],\n        ['inset-y', ['top', 'bottom']],\n      ],\n      [\n        ['start', ['inset-inline-start']],\n        ['end', ['inset-inline-end']],\n        ['top', ['top']],\n        ['right', ['right']],\n        ['bottom', ['bottom']],\n        ['left', ['left']],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  isolation: ({ addUtilities }) => {\n    addUtilities({\n      '.isolate': { isolation: 'isolate' },\n      '.isolation-auto': { isolation: 'auto' },\n    })\n  },\n\n  zIndex: createUtilityPlugin('zIndex', [['z', ['zIndex']]], { supportsNegativeValues: true }),\n  order: createUtilityPlugin('order', undefined, { supportsNegativeValues: true }),\n  gridColumn: createUtilityPlugin('gridColumn', [['col', ['gridColumn']]]),\n  gridColumnStart: createUtilityPlugin('gridColumnStart', [['col-start', ['gridColumnStart']]]),\n  gridColumnEnd: createUtilityPlugin('gridColumnEnd', [['col-end', ['gridColumnEnd']]]),\n  gridRow: createUtilityPlugin('gridRow', [['row', ['gridRow']]]),\n  gridRowStart: createUtilityPlugin('gridRowStart', [['row-start', ['gridRowStart']]]),\n  gridRowEnd: createUtilityPlugin('gridRowEnd', [['row-end', ['gridRowEnd']]]),\n\n  float: ({ addUtilities }) => {\n    addUtilities({\n      '.float-right': { float: 'right' },\n      '.float-left': { float: 'left' },\n      '.float-none': { float: 'none' },\n    })\n  },\n\n  clear: ({ addUtilities }) => {\n    addUtilities({\n      '.clear-left': { clear: 'left' },\n      '.clear-right': { clear: 'right' },\n      '.clear-both': { clear: 'both' },\n      '.clear-none': { clear: 'none' },\n    })\n  },\n\n  margin: createUtilityPlugin(\n    'margin',\n    [\n      ['m', ['margin']],\n      [\n        ['mx', ['margin-left', 'margin-right']],\n        ['my', ['margin-top', 'margin-bottom']],\n      ],\n      [\n        ['ms', ['margin-inline-start']],\n        ['me', ['margin-inline-end']],\n        ['mt', ['margin-top']],\n        ['mr', ['margin-right']],\n        ['mb', ['margin-bottom']],\n        ['ml', ['margin-left']],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  boxSizing: ({ addUtilities }) => {\n    addUtilities({\n      '.box-border': { 'box-sizing': 'border-box' },\n      '.box-content': { 'box-sizing': 'content-box' },\n    })\n  },\n\n  lineClamp: ({ matchUtilities, addUtilities, theme }) => {\n    matchUtilities(\n      {\n        'line-clamp': (value) => ({\n          overflow: 'hidden',\n          display: '-webkit-box',\n          '-webkit-box-orient': 'vertical',\n          '-webkit-line-clamp': `${value}`,\n        }),\n      },\n      { values: theme('lineClamp') }\n    )\n\n    addUtilities({\n      '.line-clamp-none': {\n        overflow: 'visible',\n        display: 'block',\n        '-webkit-box-orient': 'horizontal',\n        '-webkit-line-clamp': 'none',\n      },\n    })\n  },\n\n  display: ({ addUtilities }) => {\n    addUtilities({\n      '.block': { display: 'block' },\n      '.inline-block': { display: 'inline-block' },\n      '.inline': { display: 'inline' },\n      '.flex': { display: 'flex' },\n      '.inline-flex': { display: 'inline-flex' },\n      '.table': { display: 'table' },\n      '.inline-table': { display: 'inline-table' },\n      '.table-caption': { display: 'table-caption' },\n      '.table-cell': { display: 'table-cell' },\n      '.table-column': { display: 'table-column' },\n      '.table-column-group': { display: 'table-column-group' },\n      '.table-footer-group': { display: 'table-footer-group' },\n      '.table-header-group': { display: 'table-header-group' },\n      '.table-row-group': { display: 'table-row-group' },\n      '.table-row': { display: 'table-row' },\n      '.flow-root': { display: 'flow-root' },\n      '.grid': { display: 'grid' },\n      '.inline-grid': { display: 'inline-grid' },\n      '.contents': { display: 'contents' },\n      '.list-item': { display: 'list-item' },\n      '.hidden': { display: 'none' },\n    })\n  },\n\n  aspectRatio: createUtilityPlugin('aspectRatio', [['aspect', ['aspect-ratio']]]),\n\n  height: createUtilityPlugin('height', [['h', ['height']]]),\n  maxHeight: createUtilityPlugin('maxHeight', [['max-h', ['maxHeight']]]),\n  minHeight: createUtilityPlugin('minHeight', [['min-h', ['minHeight']]]),\n\n  width: createUtilityPlugin('width', [['w', ['width']]]),\n  minWidth: createUtilityPlugin('minWidth', [['min-w', ['minWidth']]]),\n  maxWidth: createUtilityPlugin('maxWidth', [['max-w', ['maxWidth']]]),\n\n  flex: createUtilityPlugin('flex'),\n  flexShrink: createUtilityPlugin('flexShrink', [\n    ['flex-shrink', ['flex-shrink']], // Deprecated\n    ['shrink', ['flex-shrink']],\n  ]),\n  flexGrow: createUtilityPlugin('flexGrow', [\n    ['flex-grow', ['flex-grow']], // Deprecated\n    ['grow', ['flex-grow']],\n  ]),\n  flexBasis: createUtilityPlugin('flexBasis', [['basis', ['flex-basis']]]),\n\n  tableLayout: ({ addUtilities }) => {\n    addUtilities({\n      '.table-auto': { 'table-layout': 'auto' },\n      '.table-fixed': { 'table-layout': 'fixed' },\n    })\n  },\n\n  captionSide: ({ addUtilities }) => {\n    addUtilities({\n      '.caption-top': { 'caption-side': 'top' },\n      '.caption-bottom': { 'caption-side': 'bottom' },\n    })\n  },\n\n  borderCollapse: ({ addUtilities }) => {\n    addUtilities({\n      '.border-collapse': { 'border-collapse': 'collapse' },\n      '.border-separate': { 'border-collapse': 'separate' },\n    })\n  },\n\n  borderSpacing: ({ addDefaults, matchUtilities, theme }) => {\n    addDefaults('border-spacing', {\n      '--tw-border-spacing-x': 0,\n      '--tw-border-spacing-y': 0,\n    })\n\n    matchUtilities(\n      {\n        'border-spacing': (value) => {\n          return {\n            '--tw-border-spacing-x': value,\n            '--tw-border-spacing-y': value,\n            '@defaults border-spacing': {},\n            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',\n          }\n        },\n        'border-spacing-x': (value) => {\n          return {\n            '--tw-border-spacing-x': value,\n            '@defaults border-spacing': {},\n            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',\n          }\n        },\n        'border-spacing-y': (value) => {\n          return {\n            '--tw-border-spacing-y': value,\n            '@defaults border-spacing': {},\n            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',\n          }\n        },\n      },\n      { values: theme('borderSpacing') }\n    )\n  },\n\n  transformOrigin: createUtilityPlugin('transformOrigin', [['origin', ['transformOrigin']]]),\n  translate: createUtilityPlugin(\n    'translate',\n    [\n      [\n        [\n          'translate-x',\n          [['@defaults transform', {}], '--tw-translate-x', ['transform', cssTransformValue]],\n        ],\n        [\n          'translate-y',\n          [['@defaults transform', {}], '--tw-translate-y', ['transform', cssTransformValue]],\n        ],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n  rotate: createUtilityPlugin(\n    'rotate',\n    [['rotate', [['@defaults transform', {}], '--tw-rotate', ['transform', cssTransformValue]]]],\n    { supportsNegativeValues: true }\n  ),\n  skew: createUtilityPlugin(\n    'skew',\n    [\n      [\n        ['skew-x', [['@defaults transform', {}], '--tw-skew-x', ['transform', cssTransformValue]]],\n        ['skew-y', [['@defaults transform', {}], '--tw-skew-y', ['transform', cssTransformValue]]],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n  scale: createUtilityPlugin(\n    'scale',\n    [\n      [\n        'scale',\n        [\n          ['@defaults transform', {}],\n          '--tw-scale-x',\n          '--tw-scale-y',\n          ['transform', cssTransformValue],\n        ],\n      ],\n      [\n        [\n          'scale-x',\n          [['@defaults transform', {}], '--tw-scale-x', ['transform', cssTransformValue]],\n        ],\n        [\n          'scale-y',\n          [['@defaults transform', {}], '--tw-scale-y', ['transform', cssTransformValue]],\n        ],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  transform: ({ addDefaults, addUtilities }) => {\n    addDefaults('transform', {\n      '--tw-translate-x': '0',\n      '--tw-translate-y': '0',\n      '--tw-rotate': '0',\n      '--tw-skew-x': '0',\n      '--tw-skew-y': '0',\n      '--tw-scale-x': '1',\n      '--tw-scale-y': '1',\n    })\n\n    addUtilities({\n      '.transform': { '@defaults transform': {}, transform: cssTransformValue },\n      '.transform-cpu': {\n        transform: cssTransformValue,\n      },\n      '.transform-gpu': {\n        transform: cssTransformValue.replace(\n          'translate(var(--tw-translate-x), var(--tw-translate-y))',\n          'translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)'\n        ),\n      },\n      '.transform-none': { transform: 'none' },\n    })\n  },\n\n  animation: ({ matchUtilities, theme, config }) => {\n    let prefixName = (name) => escapeClassName(config('prefix') + name)\n    let keyframes = Object.fromEntries(\n      Object.entries(theme('keyframes') ?? {}).map(([key, value]) => {\n        return [key, { [`@keyframes ${prefixName(key)}`]: value }]\n      })\n    )\n\n    matchUtilities(\n      {\n        animate: (value) => {\n          let animations = parseAnimationValue(value)\n\n          return [\n            ...animations.flatMap((animation) => keyframes[animation.name]),\n            {\n              animation: animations\n                .map(({ name, value }) => {\n                  if (name === undefined || keyframes[name] === undefined) {\n                    return value\n                  }\n                  return value.replace(name, prefixName(name))\n                })\n                .join(', '),\n            },\n          ]\n        },\n      },\n      { values: theme('animation') }\n    )\n  },\n\n  cursor: createUtilityPlugin('cursor'),\n\n  touchAction: ({ addDefaults, addUtilities }) => {\n    addDefaults('touch-action', {\n      '--tw-pan-x': ' ',\n      '--tw-pan-y': ' ',\n      '--tw-pinch-zoom': ' ',\n    })\n\n    let cssTouchActionValue = 'var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)'\n\n    addUtilities({\n      '.touch-auto': { 'touch-action': 'auto' },\n      '.touch-none': { 'touch-action': 'none' },\n      '.touch-pan-x': {\n        '@defaults touch-action': {},\n        '--tw-pan-x': 'pan-x',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-left': {\n        '@defaults touch-action': {},\n        '--tw-pan-x': 'pan-left',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-right': {\n        '@defaults touch-action': {},\n        '--tw-pan-x': 'pan-right',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-y': {\n        '@defaults touch-action': {},\n        '--tw-pan-y': 'pan-y',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-up': {\n        '@defaults touch-action': {},\n        '--tw-pan-y': 'pan-up',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-down': {\n        '@defaults touch-action': {},\n        '--tw-pan-y': 'pan-down',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pinch-zoom': {\n        '@defaults touch-action': {},\n        '--tw-pinch-zoom': 'pinch-zoom',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-manipulation': { 'touch-action': 'manipulation' },\n    })\n  },\n\n  userSelect: ({ addUtilities }) => {\n    addUtilities({\n      '.select-none': { 'user-select': 'none' },\n      '.select-text': { 'user-select': 'text' },\n      '.select-all': { 'user-select': 'all' },\n      '.select-auto': { 'user-select': 'auto' },\n    })\n  },\n\n  resize: ({ addUtilities }) => {\n    addUtilities({\n      '.resize-none': { resize: 'none' },\n      '.resize-y': { resize: 'vertical' },\n      '.resize-x': { resize: 'horizontal' },\n      '.resize': { resize: 'both' },\n    })\n  },\n\n  scrollSnapType: ({ addDefaults, addUtilities }) => {\n    addDefaults('scroll-snap-type', {\n      '--tw-scroll-snap-strictness': 'proximity',\n    })\n\n    addUtilities({\n      '.snap-none': { 'scroll-snap-type': 'none' },\n      '.snap-x': {\n        '@defaults scroll-snap-type': {},\n        'scroll-snap-type': 'x var(--tw-scroll-snap-strictness)',\n      },\n      '.snap-y': {\n        '@defaults scroll-snap-type': {},\n        'scroll-snap-type': 'y var(--tw-scroll-snap-strictness)',\n      },\n      '.snap-both': {\n        '@defaults scroll-snap-type': {},\n        'scroll-snap-type': 'both var(--tw-scroll-snap-strictness)',\n      },\n      '.snap-mandatory': { '--tw-scroll-snap-strictness': 'mandatory' },\n      '.snap-proximity': { '--tw-scroll-snap-strictness': 'proximity' },\n    })\n  },\n\n  scrollSnapAlign: ({ addUtilities }) => {\n    addUtilities({\n      '.snap-start': { 'scroll-snap-align': 'start' },\n      '.snap-end': { 'scroll-snap-align': 'end' },\n      '.snap-center': { 'scroll-snap-align': 'center' },\n      '.snap-align-none': { 'scroll-snap-align': 'none' },\n    })\n  },\n\n  scrollSnapStop: ({ addUtilities }) => {\n    addUtilities({\n      '.snap-normal': { 'scroll-snap-stop': 'normal' },\n      '.snap-always': { 'scroll-snap-stop': 'always' },\n    })\n  },\n\n  scrollMargin: createUtilityPlugin(\n    'scrollMargin',\n    [\n      ['scroll-m', ['scroll-margin']],\n      [\n        ['scroll-mx', ['scroll-margin-left', 'scroll-margin-right']],\n        ['scroll-my', ['scroll-margin-top', 'scroll-margin-bottom']],\n      ],\n      [\n        ['scroll-ms', ['scroll-margin-inline-start']],\n        ['scroll-me', ['scroll-margin-inline-end']],\n        ['scroll-mt', ['scroll-margin-top']],\n        ['scroll-mr', ['scroll-margin-right']],\n        ['scroll-mb', ['scroll-margin-bottom']],\n        ['scroll-ml', ['scroll-margin-left']],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  scrollPadding: createUtilityPlugin('scrollPadding', [\n    ['scroll-p', ['scroll-padding']],\n    [\n      ['scroll-px', ['scroll-padding-left', 'scroll-padding-right']],\n      ['scroll-py', ['scroll-padding-top', 'scroll-padding-bottom']],\n    ],\n    [\n      ['scroll-ps', ['scroll-padding-inline-start']],\n      ['scroll-pe', ['scroll-padding-inline-end']],\n      ['scroll-pt', ['scroll-padding-top']],\n      ['scroll-pr', ['scroll-padding-right']],\n      ['scroll-pb', ['scroll-padding-bottom']],\n      ['scroll-pl', ['scroll-padding-left']],\n    ],\n  ]),\n\n  listStylePosition: ({ addUtilities }) => {\n    addUtilities({\n      '.list-inside': { 'list-style-position': 'inside' },\n      '.list-outside': { 'list-style-position': 'outside' },\n    })\n  },\n  listStyleType: createUtilityPlugin('listStyleType', [['list', ['listStyleType']]]),\n  listStyleImage: createUtilityPlugin('listStyleImage', [['list-image', ['listStyleImage']]]),\n\n  appearance: ({ addUtilities }) => {\n    addUtilities({\n      '.appearance-none': { appearance: 'none' },\n    })\n  },\n\n  columns: createUtilityPlugin('columns', [['columns', ['columns']]]),\n\n  breakBefore: ({ addUtilities }) => {\n    addUtilities({\n      '.break-before-auto': { 'break-before': 'auto' },\n      '.break-before-avoid': { 'break-before': 'avoid' },\n      '.break-before-all': { 'break-before': 'all' },\n      '.break-before-avoid-page': { 'break-before': 'avoid-page' },\n      '.break-before-page': { 'break-before': 'page' },\n      '.break-before-left': { 'break-before': 'left' },\n      '.break-before-right': { 'break-before': 'right' },\n      '.break-before-column': { 'break-before': 'column' },\n    })\n  },\n\n  breakInside: ({ addUtilities }) => {\n    addUtilities({\n      '.break-inside-auto': { 'break-inside': 'auto' },\n      '.break-inside-avoid': { 'break-inside': 'avoid' },\n      '.break-inside-avoid-page': { 'break-inside': 'avoid-page' },\n      '.break-inside-avoid-column': { 'break-inside': 'avoid-column' },\n    })\n  },\n\n  breakAfter: ({ addUtilities }) => {\n    addUtilities({\n      '.break-after-auto': { 'break-after': 'auto' },\n      '.break-after-avoid': { 'break-after': 'avoid' },\n      '.break-after-all': { 'break-after': 'all' },\n      '.break-after-avoid-page': { 'break-after': 'avoid-page' },\n      '.break-after-page': { 'break-after': 'page' },\n      '.break-after-left': { 'break-after': 'left' },\n      '.break-after-right': { 'break-after': 'right' },\n      '.break-after-column': { 'break-after': 'column' },\n    })\n  },\n\n  gridAutoColumns: createUtilityPlugin('gridAutoColumns', [['auto-cols', ['gridAutoColumns']]]),\n\n  gridAutoFlow: ({ addUtilities }) => {\n    addUtilities({\n      '.grid-flow-row': { gridAutoFlow: 'row' },\n      '.grid-flow-col': { gridAutoFlow: 'column' },\n      '.grid-flow-dense': { gridAutoFlow: 'dense' },\n      '.grid-flow-row-dense': { gridAutoFlow: 'row dense' },\n      '.grid-flow-col-dense': { gridAutoFlow: 'column dense' },\n    })\n  },\n\n  gridAutoRows: createUtilityPlugin('gridAutoRows', [['auto-rows', ['gridAutoRows']]]),\n  gridTemplateColumns: createUtilityPlugin('gridTemplateColumns', [\n    ['grid-cols', ['gridTemplateColumns']],\n  ]),\n  gridTemplateRows: createUtilityPlugin('gridTemplateRows', [['grid-rows', ['gridTemplateRows']]]),\n\n  flexDirection: ({ addUtilities }) => {\n    addUtilities({\n      '.flex-row': { 'flex-direction': 'row' },\n      '.flex-row-reverse': { 'flex-direction': 'row-reverse' },\n      '.flex-col': { 'flex-direction': 'column' },\n      '.flex-col-reverse': { 'flex-direction': 'column-reverse' },\n    })\n  },\n\n  flexWrap: ({ addUtilities }) => {\n    addUtilities({\n      '.flex-wrap': { 'flex-wrap': 'wrap' },\n      '.flex-wrap-reverse': { 'flex-wrap': 'wrap-reverse' },\n      '.flex-nowrap': { 'flex-wrap': 'nowrap' },\n    })\n  },\n\n  placeContent: ({ addUtilities }) => {\n    addUtilities({\n      '.place-content-center': { 'place-content': 'center' },\n      '.place-content-start': { 'place-content': 'start' },\n      '.place-content-end': { 'place-content': 'end' },\n      '.place-content-between': { 'place-content': 'space-between' },\n      '.place-content-around': { 'place-content': 'space-around' },\n      '.place-content-evenly': { 'place-content': 'space-evenly' },\n      '.place-content-baseline': { 'place-content': 'baseline' },\n      '.place-content-stretch': { 'place-content': 'stretch' },\n    })\n  },\n\n  placeItems: ({ addUtilities }) => {\n    addUtilities({\n      '.place-items-start': { 'place-items': 'start' },\n      '.place-items-end': { 'place-items': 'end' },\n      '.place-items-center': { 'place-items': 'center' },\n      '.place-items-baseline': { 'place-items': 'baseline' },\n      '.place-items-stretch': { 'place-items': 'stretch' },\n    })\n  },\n\n  alignContent: ({ addUtilities }) => {\n    addUtilities({\n      '.content-normal': { 'align-content': 'normal' },\n      '.content-center': { 'align-content': 'center' },\n      '.content-start': { 'align-content': 'flex-start' },\n      '.content-end': { 'align-content': 'flex-end' },\n      '.content-between': { 'align-content': 'space-between' },\n      '.content-around': { 'align-content': 'space-around' },\n      '.content-evenly': { 'align-content': 'space-evenly' },\n      '.content-baseline': { 'align-content': 'baseline' },\n      '.content-stretch': { 'align-content': 'stretch' },\n    })\n  },\n\n  alignItems: ({ addUtilities }) => {\n    addUtilities({\n      '.items-start': { 'align-items': 'flex-start' },\n      '.items-end': { 'align-items': 'flex-end' },\n      '.items-center': { 'align-items': 'center' },\n      '.items-baseline': { 'align-items': 'baseline' },\n      '.items-stretch': { 'align-items': 'stretch' },\n    })\n  },\n\n  justifyContent: ({ addUtilities }) => {\n    addUtilities({\n      '.justify-normal': { 'justify-content': 'normal' },\n      '.justify-start': { 'justify-content': 'flex-start' },\n      '.justify-end': { 'justify-content': 'flex-end' },\n      '.justify-center': { 'justify-content': 'center' },\n      '.justify-between': { 'justify-content': 'space-between' },\n      '.justify-around': { 'justify-content': 'space-around' },\n      '.justify-evenly': { 'justify-content': 'space-evenly' },\n      '.justify-stretch': { 'justify-content': 'stretch' },\n    })\n  },\n\n  justifyItems: ({ addUtilities }) => {\n    addUtilities({\n      '.justify-items-start': { 'justify-items': 'start' },\n      '.justify-items-end': { 'justify-items': 'end' },\n      '.justify-items-center': { 'justify-items': 'center' },\n      '.justify-items-stretch': { 'justify-items': 'stretch' },\n    })\n  },\n\n  gap: createUtilityPlugin('gap', [\n    ['gap', ['gap']],\n    [\n      ['gap-x', ['columnGap']],\n      ['gap-y', ['rowGap']],\n    ],\n  ]),\n\n  space: ({ matchUtilities, addUtilities, theme }) => {\n    matchUtilities(\n      {\n        'space-x': (value) => {\n          value = value === '0' ? '0px' : value\n\n          if (__OXIDE__) {\n            return {\n              '& > :not([hidden]) ~ :not([hidden])': {\n                '--tw-space-x-reverse': '0',\n                'margin-inline-end': `calc(${value} * var(--tw-space-x-reverse))`,\n                'margin-inline-start': `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`,\n              },\n            }\n          }\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '--tw-space-x-reverse': '0',\n              'margin-right': `calc(${value} * var(--tw-space-x-reverse))`,\n              'margin-left': `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`,\n            },\n          }\n        },\n        'space-y': (value) => {\n          value = value === '0' ? '0px' : value\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '--tw-space-y-reverse': '0',\n              'margin-top': `calc(${value} * calc(1 - var(--tw-space-y-reverse)))`,\n              'margin-bottom': `calc(${value} * var(--tw-space-y-reverse))`,\n            },\n          }\n        },\n      },\n      { values: theme('space'), supportsNegativeValues: true }\n    )\n\n    addUtilities({\n      '.space-y-reverse > :not([hidden]) ~ :not([hidden])': { '--tw-space-y-reverse': '1' },\n      '.space-x-reverse > :not([hidden]) ~ :not([hidden])': { '--tw-space-x-reverse': '1' },\n    })\n  },\n\n  divideWidth: ({ matchUtilities, addUtilities, theme }) => {\n    matchUtilities(\n      {\n        'divide-x': (value) => {\n          value = value === '0' ? '0px' : value\n\n          if (__OXIDE__) {\n            return {\n              '& > :not([hidden]) ~ :not([hidden])': {\n                '@defaults border-width': {},\n                '--tw-divide-x-reverse': '0',\n                'border-inline-end-width': `calc(${value} * var(--tw-divide-x-reverse))`,\n                'border-inline-start-width': `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`,\n              },\n            }\n          }\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '@defaults border-width': {},\n              '--tw-divide-x-reverse': '0',\n              'border-right-width': `calc(${value} * var(--tw-divide-x-reverse))`,\n              'border-left-width': `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`,\n            },\n          }\n        },\n        'divide-y': (value) => {\n          value = value === '0' ? '0px' : value\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '@defaults border-width': {},\n              '--tw-divide-y-reverse': '0',\n              'border-top-width': `calc(${value} * calc(1 - var(--tw-divide-y-reverse)))`,\n              'border-bottom-width': `calc(${value} * var(--tw-divide-y-reverse))`,\n            },\n          }\n        },\n      },\n      { values: theme('divideWidth'), type: ['line-width', 'length', 'any'] }\n    )\n\n    addUtilities({\n      '.divide-y-reverse > :not([hidden]) ~ :not([hidden])': {\n        '@defaults border-width': {},\n        '--tw-divide-y-reverse': '1',\n      },\n      '.divide-x-reverse > :not([hidden]) ~ :not([hidden])': {\n        '@defaults border-width': {},\n        '--tw-divide-x-reverse': '1',\n      },\n    })\n  },\n\n  divideStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.divide-solid > :not([hidden]) ~ :not([hidden])': { 'border-style': 'solid' },\n      '.divide-dashed > :not([hidden]) ~ :not([hidden])': { 'border-style': 'dashed' },\n      '.divide-dotted > :not([hidden]) ~ :not([hidden])': { 'border-style': 'dotted' },\n      '.divide-double > :not([hidden]) ~ :not([hidden])': { 'border-style': 'double' },\n      '.divide-none > :not([hidden]) ~ :not([hidden])': { 'border-style': 'none' },\n    })\n  },\n\n  divideColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        divide: (value) => {\n          if (!corePlugins('divideOpacity')) {\n            return {\n              ['& > :not([hidden]) ~ :not([hidden])']: {\n                'border-color': toColorValue(value),\n              },\n            }\n          }\n\n          return {\n            ['& > :not([hidden]) ~ :not([hidden])']: withAlphaVariable({\n              color: value,\n              property: 'border-color',\n              variable: '--tw-divide-opacity',\n            }),\n          }\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('divideColor'))),\n        type: ['color', 'any'],\n      }\n    )\n  },\n\n  divideOpacity: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'divide-opacity': (value) => {\n          return { [`& > :not([hidden]) ~ :not([hidden])`]: { '--tw-divide-opacity': value } }\n        },\n      },\n      { values: theme('divideOpacity') }\n    )\n  },\n\n  placeSelf: ({ addUtilities }) => {\n    addUtilities({\n      '.place-self-auto': { 'place-self': 'auto' },\n      '.place-self-start': { 'place-self': 'start' },\n      '.place-self-end': { 'place-self': 'end' },\n      '.place-self-center': { 'place-self': 'center' },\n      '.place-self-stretch': { 'place-self': 'stretch' },\n    })\n  },\n\n  alignSelf: ({ addUtilities }) => {\n    addUtilities({\n      '.self-auto': { 'align-self': 'auto' },\n      '.self-start': { 'align-self': 'flex-start' },\n      '.self-end': { 'align-self': 'flex-end' },\n      '.self-center': { 'align-self': 'center' },\n      '.self-stretch': { 'align-self': 'stretch' },\n      '.self-baseline': { 'align-self': 'baseline' },\n    })\n  },\n\n  justifySelf: ({ addUtilities }) => {\n    addUtilities({\n      '.justify-self-auto': { 'justify-self': 'auto' },\n      '.justify-self-start': { 'justify-self': 'start' },\n      '.justify-self-end': { 'justify-self': 'end' },\n      '.justify-self-center': { 'justify-self': 'center' },\n      '.justify-self-stretch': { 'justify-self': 'stretch' },\n    })\n  },\n\n  overflow: ({ addUtilities }) => {\n    addUtilities({\n      '.overflow-auto': { overflow: 'auto' },\n      '.overflow-hidden': { overflow: 'hidden' },\n      '.overflow-clip': { overflow: 'clip' },\n      '.overflow-visible': { overflow: 'visible' },\n      '.overflow-scroll': { overflow: 'scroll' },\n      '.overflow-x-auto': { 'overflow-x': 'auto' },\n      '.overflow-y-auto': { 'overflow-y': 'auto' },\n      '.overflow-x-hidden': { 'overflow-x': 'hidden' },\n      '.overflow-y-hidden': { 'overflow-y': 'hidden' },\n      '.overflow-x-clip': { 'overflow-x': 'clip' },\n      '.overflow-y-clip': { 'overflow-y': 'clip' },\n      '.overflow-x-visible': { 'overflow-x': 'visible' },\n      '.overflow-y-visible': { 'overflow-y': 'visible' },\n      '.overflow-x-scroll': { 'overflow-x': 'scroll' },\n      '.overflow-y-scroll': { 'overflow-y': 'scroll' },\n    })\n  },\n\n  overscrollBehavior: ({ addUtilities }) => {\n    addUtilities({\n      '.overscroll-auto': { 'overscroll-behavior': 'auto' },\n      '.overscroll-contain': { 'overscroll-behavior': 'contain' },\n      '.overscroll-none': { 'overscroll-behavior': 'none' },\n      '.overscroll-y-auto': { 'overscroll-behavior-y': 'auto' },\n      '.overscroll-y-contain': { 'overscroll-behavior-y': 'contain' },\n      '.overscroll-y-none': { 'overscroll-behavior-y': 'none' },\n      '.overscroll-x-auto': { 'overscroll-behavior-x': 'auto' },\n      '.overscroll-x-contain': { 'overscroll-behavior-x': 'contain' },\n      '.overscroll-x-none': { 'overscroll-behavior-x': 'none' },\n    })\n  },\n\n  scrollBehavior: ({ addUtilities }) => {\n    addUtilities({\n      '.scroll-auto': { 'scroll-behavior': 'auto' },\n      '.scroll-smooth': { 'scroll-behavior': 'smooth' },\n    })\n  },\n\n  textOverflow: ({ addUtilities }) => {\n    addUtilities({\n      '.truncate': { overflow: 'hidden', 'text-overflow': 'ellipsis', 'white-space': 'nowrap' },\n      '.overflow-ellipsis': { 'text-overflow': 'ellipsis' }, // Deprecated\n      '.text-ellipsis': { 'text-overflow': 'ellipsis' },\n      '.text-clip': { 'text-overflow': 'clip' },\n    })\n  },\n\n  hyphens: ({ addUtilities }) => {\n    addUtilities({\n      '.hyphens-none': { hyphens: 'none' },\n      '.hyphens-manual': { hyphens: 'manual' },\n      '.hyphens-auto': { hyphens: 'auto' },\n    })\n  },\n\n  whitespace: ({ addUtilities }) => {\n    addUtilities({\n      '.whitespace-normal': { 'white-space': 'normal' },\n      '.whitespace-nowrap': { 'white-space': 'nowrap' },\n      '.whitespace-pre': { 'white-space': 'pre' },\n      '.whitespace-pre-line': { 'white-space': 'pre-line' },\n      '.whitespace-pre-wrap': { 'white-space': 'pre-wrap' },\n      '.whitespace-break-spaces': { 'white-space': 'break-spaces' },\n    })\n  },\n\n  wordBreak: ({ addUtilities }) => {\n    addUtilities({\n      '.break-normal': { 'overflow-wrap': 'normal', 'word-break': 'normal' },\n      '.break-words': { 'overflow-wrap': 'break-word' },\n      '.break-all': { 'word-break': 'break-all' },\n      '.break-keep': { 'word-break': 'keep-all' },\n    })\n  },\n\n  borderRadius: createUtilityPlugin('borderRadius', [\n    ['rounded', ['border-radius']],\n    [\n      ['rounded-s', ['border-start-start-radius', 'border-end-start-radius']],\n      ['rounded-e', ['border-start-end-radius', 'border-end-end-radius']],\n      ['rounded-t', ['border-top-left-radius', 'border-top-right-radius']],\n      ['rounded-r', ['border-top-right-radius', 'border-bottom-right-radius']],\n      ['rounded-b', ['border-bottom-right-radius', 'border-bottom-left-radius']],\n      ['rounded-l', ['border-top-left-radius', 'border-bottom-left-radius']],\n    ],\n    [\n      ['rounded-ss', ['border-start-start-radius']],\n      ['rounded-se', ['border-start-end-radius']],\n      ['rounded-ee', ['border-end-end-radius']],\n      ['rounded-es', ['border-end-start-radius']],\n      ['rounded-tl', ['border-top-left-radius']],\n      ['rounded-tr', ['border-top-right-radius']],\n      ['rounded-br', ['border-bottom-right-radius']],\n      ['rounded-bl', ['border-bottom-left-radius']],\n    ],\n  ]),\n\n  borderWidth: createUtilityPlugin(\n    'borderWidth',\n    [\n      ['border', [['@defaults border-width', {}], 'border-width']],\n      [\n        ['border-x', [['@defaults border-width', {}], 'border-left-width', 'border-right-width']],\n        ['border-y', [['@defaults border-width', {}], 'border-top-width', 'border-bottom-width']],\n      ],\n      [\n        ['border-s', [['@defaults border-width', {}], 'border-inline-start-width']],\n        ['border-e', [['@defaults border-width', {}], 'border-inline-end-width']],\n        ['border-t', [['@defaults border-width', {}], 'border-top-width']],\n        ['border-r', [['@defaults border-width', {}], 'border-right-width']],\n        ['border-b', [['@defaults border-width', {}], 'border-bottom-width']],\n        ['border-l', [['@defaults border-width', {}], 'border-left-width']],\n      ],\n    ],\n    { type: ['line-width', 'length'] }\n  ),\n\n  borderStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.border-solid': { 'border-style': 'solid' },\n      '.border-dashed': { 'border-style': 'dashed' },\n      '.border-dotted': { 'border-style': 'dotted' },\n      '.border-double': { 'border-style': 'double' },\n      '.border-hidden': { 'border-style': 'hidden' },\n      '.border-none': { 'border-style': 'none' },\n    })\n  },\n\n  borderColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        border: (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('borderColor'))),\n        type: ['color', 'any'],\n      }\n    )\n\n    matchUtilities(\n      {\n        'border-x': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-left-color': toColorValue(value),\n              'border-right-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: ['border-left-color', 'border-right-color'],\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-y': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-top-color': toColorValue(value),\n              'border-bottom-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: ['border-top-color', 'border-bottom-color'],\n            variable: '--tw-border-opacity',\n          })\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('borderColor'))),\n        type: ['color', 'any'],\n      }\n    )\n\n    matchUtilities(\n      {\n        'border-s': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-inline-start-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-inline-start-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-e': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-inline-end-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-inline-end-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-t': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-top-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-top-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-r': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-right-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-right-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-b': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-bottom-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-bottom-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-l': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-left-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-left-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('borderColor'))),\n        type: ['color', 'any'],\n      }\n    )\n  },\n\n  borderOpacity: createUtilityPlugin('borderOpacity', [\n    ['border-opacity', ['--tw-border-opacity']],\n  ]),\n\n  backgroundColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        bg: (value) => {\n          if (!corePlugins('backgroundOpacity')) {\n            return {\n              'background-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'background-color',\n            variable: '--tw-bg-opacity',\n          })\n        },\n      },\n      { values: flattenColorPalette(theme('backgroundColor')), type: ['color', 'any'] }\n    )\n  },\n\n  backgroundOpacity: createUtilityPlugin('backgroundOpacity', [\n    ['bg-opacity', ['--tw-bg-opacity']],\n  ]),\n  backgroundImage: createUtilityPlugin('backgroundImage', [['bg', ['background-image']]], {\n    type: ['lookup', 'image', 'url'],\n  }),\n  gradientColorStops: (() => {\n    function transparentTo(value) {\n      return withAlphaValue(value, 0, 'rgb(255 255 255 / 0)')\n    }\n\n    return function ({ matchUtilities, theme, addDefaults }) {\n      addDefaults('gradient-color-stops', {\n        '--tw-gradient-from-position': ' ',\n        '--tw-gradient-via-position': ' ',\n        '--tw-gradient-to-position': ' ',\n      })\n\n      let options = {\n        values: flattenColorPalette(theme('gradientColorStops')),\n        type: ['color', 'any'],\n      }\n\n      let positionOptions = {\n        values: theme('gradientColorStopPositions'),\n        type: ['length', 'percentage'],\n      }\n\n      matchUtilities(\n        {\n          from: (value) => {\n            let transparentToValue = transparentTo(value)\n\n            return {\n              '@defaults gradient-color-stops': {},\n              '--tw-gradient-from': `${toColorValue(value)} var(--tw-gradient-from-position)`,\n              '--tw-gradient-to': `${transparentToValue} var(--tw-gradient-to-position)`,\n              '--tw-gradient-stops': `var(--tw-gradient-from), var(--tw-gradient-to)`,\n            }\n          },\n        },\n        options\n      )\n\n      matchUtilities(\n        {\n          from: (value) => {\n            return {\n              '--tw-gradient-from-position': value,\n            }\n          },\n        },\n        positionOptions\n      )\n\n      matchUtilities(\n        {\n          via: (value) => {\n            let transparentToValue = transparentTo(value)\n\n            return {\n              '@defaults gradient-color-stops': {},\n              '--tw-gradient-to': `${transparentToValue}  var(--tw-gradient-to-position)`,\n              '--tw-gradient-stops': `var(--tw-gradient-from), ${toColorValue(\n                value\n              )} var(--tw-gradient-via-position), var(--tw-gradient-to)`,\n            }\n          },\n        },\n        options\n      )\n\n      matchUtilities(\n        {\n          via: (value) => {\n            return {\n              '--tw-gradient-via-position': value,\n            }\n          },\n        },\n        positionOptions\n      )\n\n      matchUtilities(\n        {\n          to: (value) => ({\n            '@defaults gradient-color-stops': {},\n            '--tw-gradient-to': `${toColorValue(value)} var(--tw-gradient-to-position)`,\n          }),\n        },\n        options\n      )\n\n      matchUtilities(\n        {\n          to: (value) => {\n            return {\n              '--tw-gradient-to-position': value,\n            }\n          },\n        },\n        positionOptions\n      )\n    }\n  })(),\n\n  boxDecorationBreak: ({ addUtilities }) => {\n    addUtilities({\n      '.decoration-slice': { 'box-decoration-break': 'slice' }, // Deprecated\n      '.decoration-clone': { 'box-decoration-break': 'clone' }, // Deprecated\n      '.box-decoration-slice': { 'box-decoration-break': 'slice' },\n      '.box-decoration-clone': { 'box-decoration-break': 'clone' },\n    })\n  },\n\n  backgroundSize: createUtilityPlugin('backgroundSize', [['bg', ['background-size']]], {\n    type: ['lookup', 'length', 'percentage', 'size'],\n  }),\n\n  backgroundAttachment: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-fixed': { 'background-attachment': 'fixed' },\n      '.bg-local': { 'background-attachment': 'local' },\n      '.bg-scroll': { 'background-attachment': 'scroll' },\n    })\n  },\n\n  backgroundClip: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-clip-border': { 'background-clip': 'border-box' },\n      '.bg-clip-padding': { 'background-clip': 'padding-box' },\n      '.bg-clip-content': { 'background-clip': 'content-box' },\n      '.bg-clip-text': { 'background-clip': 'text' },\n    })\n  },\n\n  backgroundPosition: createUtilityPlugin('backgroundPosition', [['bg', ['background-position']]], {\n    type: ['lookup', ['position', { preferOnConflict: true }]],\n  }),\n\n  backgroundRepeat: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-repeat': { 'background-repeat': 'repeat' },\n      '.bg-no-repeat': { 'background-repeat': 'no-repeat' },\n      '.bg-repeat-x': { 'background-repeat': 'repeat-x' },\n      '.bg-repeat-y': { 'background-repeat': 'repeat-y' },\n      '.bg-repeat-round': { 'background-repeat': 'round' },\n      '.bg-repeat-space': { 'background-repeat': 'space' },\n    })\n  },\n\n  backgroundOrigin: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-origin-border': { 'background-origin': 'border-box' },\n      '.bg-origin-padding': { 'background-origin': 'padding-box' },\n      '.bg-origin-content': { 'background-origin': 'content-box' },\n    })\n  },\n\n  fill: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        fill: (value) => {\n          return { fill: toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('fill')), type: ['color', 'any'] }\n    )\n  },\n\n  stroke: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        stroke: (value) => {\n          return { stroke: toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('stroke')), type: ['color', 'url', 'any'] }\n    )\n  },\n\n  strokeWidth: createUtilityPlugin('strokeWidth', [['stroke', ['stroke-width']]], {\n    type: ['length', 'number', 'percentage'],\n  }),\n\n  objectFit: ({ addUtilities }) => {\n    addUtilities({\n      '.object-contain': { 'object-fit': 'contain' },\n      '.object-cover': { 'object-fit': 'cover' },\n      '.object-fill': { 'object-fit': 'fill' },\n      '.object-none': { 'object-fit': 'none' },\n      '.object-scale-down': { 'object-fit': 'scale-down' },\n    })\n  },\n  objectPosition: createUtilityPlugin('objectPosition', [['object', ['object-position']]]),\n\n  padding: createUtilityPlugin('padding', [\n    ['p', ['padding']],\n    [\n      ['px', ['padding-left', 'padding-right']],\n      ['py', ['padding-top', 'padding-bottom']],\n    ],\n    [\n      ['ps', ['padding-inline-start']],\n      ['pe', ['padding-inline-end']],\n      ['pt', ['padding-top']],\n      ['pr', ['padding-right']],\n      ['pb', ['padding-bottom']],\n      ['pl', ['padding-left']],\n    ],\n  ]),\n\n  textAlign: ({ addUtilities }) => {\n    addUtilities({\n      '.text-left': { 'text-align': 'left' },\n      '.text-center': { 'text-align': 'center' },\n      '.text-right': { 'text-align': 'right' },\n      '.text-justify': { 'text-align': 'justify' },\n      '.text-start': { 'text-align': 'start' },\n      '.text-end': { 'text-align': 'end' },\n    })\n  },\n\n  textIndent: createUtilityPlugin('textIndent', [['indent', ['text-indent']]], {\n    supportsNegativeValues: true,\n  }),\n\n  verticalAlign: ({ addUtilities, matchUtilities }) => {\n    addUtilities({\n      '.align-baseline': { 'vertical-align': 'baseline' },\n      '.align-top': { 'vertical-align': 'top' },\n      '.align-middle': { 'vertical-align': 'middle' },\n      '.align-bottom': { 'vertical-align': 'bottom' },\n      '.align-text-top': { 'vertical-align': 'text-top' },\n      '.align-text-bottom': { 'vertical-align': 'text-bottom' },\n      '.align-sub': { 'vertical-align': 'sub' },\n      '.align-super': { 'vertical-align': 'super' },\n    })\n\n    matchUtilities({ align: (value) => ({ 'vertical-align': value }) })\n  },\n\n  fontFamily: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        font: (value) => {\n          let [families, options = {}] =\n            Array.isArray(value) && isPlainObject(value[1]) ? value : [value]\n          let { fontFeatureSettings, fontVariationSettings } = options\n\n          return {\n            'font-family': Array.isArray(families) ? families.join(', ') : families,\n            ...(fontFeatureSettings === undefined\n              ? {}\n              : { 'font-feature-settings': fontFeatureSettings }),\n            ...(fontVariationSettings === undefined\n              ? {}\n              : { 'font-variation-settings': fontVariationSettings }),\n          }\n        },\n      },\n      {\n        values: theme('fontFamily'),\n        type: ['lookup', 'generic-name', 'family-name'],\n      }\n    )\n  },\n\n  fontSize: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        text: (value, { modifier }) => {\n          let [fontSize, options] = Array.isArray(value) ? value : [value]\n\n          if (modifier) {\n            return {\n              'font-size': fontSize,\n              'line-height': modifier,\n            }\n          }\n\n          let { lineHeight, letterSpacing, fontWeight } = isPlainObject(options)\n            ? options\n            : { lineHeight: options }\n\n          return {\n            'font-size': fontSize,\n            ...(lineHeight === undefined ? {} : { 'line-height': lineHeight }),\n            ...(letterSpacing === undefined ? {} : { 'letter-spacing': letterSpacing }),\n            ...(fontWeight === undefined ? {} : { 'font-weight': fontWeight }),\n          }\n        },\n      },\n      {\n        values: theme('fontSize'),\n        modifiers: theme('lineHeight'),\n        type: ['absolute-size', 'relative-size', 'length', 'percentage'],\n      }\n    )\n  },\n\n  fontWeight: createUtilityPlugin('fontWeight', [['font', ['fontWeight']]], {\n    type: ['lookup', 'number', 'any'],\n  }),\n\n  textTransform: ({ addUtilities }) => {\n    addUtilities({\n      '.uppercase': { 'text-transform': 'uppercase' },\n      '.lowercase': { 'text-transform': 'lowercase' },\n      '.capitalize': { 'text-transform': 'capitalize' },\n      '.normal-case': { 'text-transform': 'none' },\n    })\n  },\n\n  fontStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.italic': { 'font-style': 'italic' },\n      '.not-italic': { 'font-style': 'normal' },\n    })\n  },\n\n  fontVariantNumeric: ({ addDefaults, addUtilities }) => {\n    let cssFontVariantNumericValue =\n      'var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)'\n\n    addDefaults('font-variant-numeric', {\n      '--tw-ordinal': ' ',\n      '--tw-slashed-zero': ' ',\n      '--tw-numeric-figure': ' ',\n      '--tw-numeric-spacing': ' ',\n      '--tw-numeric-fraction': ' ',\n    })\n\n    addUtilities({\n      '.normal-nums': { 'font-variant-numeric': 'normal' },\n      '.ordinal': {\n        '@defaults font-variant-numeric': {},\n        '--tw-ordinal': 'ordinal',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.slashed-zero': {\n        '@defaults font-variant-numeric': {},\n        '--tw-slashed-zero': 'slashed-zero',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.lining-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-figure': 'lining-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.oldstyle-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-figure': 'oldstyle-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.proportional-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-spacing': 'proportional-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.tabular-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-spacing': 'tabular-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.diagonal-fractions': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-fraction': 'diagonal-fractions',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.stacked-fractions': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-fraction': 'stacked-fractions',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n    })\n  },\n\n  lineHeight: createUtilityPlugin('lineHeight', [['leading', ['lineHeight']]]),\n  letterSpacing: createUtilityPlugin('letterSpacing', [['tracking', ['letterSpacing']]], {\n    supportsNegativeValues: true,\n  }),\n\n  textColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        text: (value) => {\n          if (!corePlugins('textOpacity')) {\n            return { color: toColorValue(value) }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'color',\n            variable: '--tw-text-opacity',\n          })\n        },\n      },\n      { values: flattenColorPalette(theme('textColor')), type: ['color', 'any'] }\n    )\n  },\n\n  textOpacity: createUtilityPlugin('textOpacity', [['text-opacity', ['--tw-text-opacity']]]),\n\n  textDecoration: ({ addUtilities }) => {\n    addUtilities({\n      '.underline': { 'text-decoration-line': 'underline' },\n      '.overline': { 'text-decoration-line': 'overline' },\n      '.line-through': { 'text-decoration-line': 'line-through' },\n      '.no-underline': { 'text-decoration-line': 'none' },\n    })\n  },\n\n  textDecorationColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        decoration: (value) => {\n          return { 'text-decoration-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('textDecorationColor')), type: ['color', 'any'] }\n    )\n  },\n\n  textDecorationStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.decoration-solid': { 'text-decoration-style': 'solid' },\n      '.decoration-double': { 'text-decoration-style': 'double' },\n      '.decoration-dotted': { 'text-decoration-style': 'dotted' },\n      '.decoration-dashed': { 'text-decoration-style': 'dashed' },\n      '.decoration-wavy': { 'text-decoration-style': 'wavy' },\n    })\n  },\n\n  textDecorationThickness: createUtilityPlugin(\n    'textDecorationThickness',\n    [['decoration', ['text-decoration-thickness']]],\n    { type: ['length', 'percentage'] }\n  ),\n\n  textUnderlineOffset: createUtilityPlugin(\n    'textUnderlineOffset',\n    [['underline-offset', ['text-underline-offset']]],\n    { type: ['length', 'percentage', 'any'] }\n  ),\n\n  fontSmoothing: ({ addUtilities }) => {\n    addUtilities({\n      '.antialiased': {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n      },\n      '.subpixel-antialiased': {\n        '-webkit-font-smoothing': 'auto',\n        '-moz-osx-font-smoothing': 'auto',\n      },\n    })\n  },\n\n  placeholderColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        placeholder: (value) => {\n          if (!corePlugins('placeholderOpacity')) {\n            return {\n              '&::placeholder': {\n                color: toColorValue(value),\n              },\n            }\n          }\n\n          return {\n            '&::placeholder': withAlphaVariable({\n              color: value,\n              property: 'color',\n              variable: '--tw-placeholder-opacity',\n            }),\n          }\n        },\n      },\n      { values: flattenColorPalette(theme('placeholderColor')), type: ['color', 'any'] }\n    )\n  },\n\n  placeholderOpacity: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'placeholder-opacity': (value) => {\n          return { ['&::placeholder']: { '--tw-placeholder-opacity': value } }\n        },\n      },\n      { values: theme('placeholderOpacity') }\n    )\n  },\n\n  caretColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        caret: (value) => {\n          return { 'caret-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('caretColor')), type: ['color', 'any'] }\n    )\n  },\n\n  accentColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        accent: (value) => {\n          return { 'accent-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('accentColor')), type: ['color', 'any'] }\n    )\n  },\n\n  opacity: createUtilityPlugin('opacity', [['opacity', ['opacity']]]),\n\n  backgroundBlendMode: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-blend-normal': { 'background-blend-mode': 'normal' },\n      '.bg-blend-multiply': { 'background-blend-mode': 'multiply' },\n      '.bg-blend-screen': { 'background-blend-mode': 'screen' },\n      '.bg-blend-overlay': { 'background-blend-mode': 'overlay' },\n      '.bg-blend-darken': { 'background-blend-mode': 'darken' },\n      '.bg-blend-lighten': { 'background-blend-mode': 'lighten' },\n      '.bg-blend-color-dodge': { 'background-blend-mode': 'color-dodge' },\n      '.bg-blend-color-burn': { 'background-blend-mode': 'color-burn' },\n      '.bg-blend-hard-light': { 'background-blend-mode': 'hard-light' },\n      '.bg-blend-soft-light': { 'background-blend-mode': 'soft-light' },\n      '.bg-blend-difference': { 'background-blend-mode': 'difference' },\n      '.bg-blend-exclusion': { 'background-blend-mode': 'exclusion' },\n      '.bg-blend-hue': { 'background-blend-mode': 'hue' },\n      '.bg-blend-saturation': { 'background-blend-mode': 'saturation' },\n      '.bg-blend-color': { 'background-blend-mode': 'color' },\n      '.bg-blend-luminosity': { 'background-blend-mode': 'luminosity' },\n    })\n  },\n\n  mixBlendMode: ({ addUtilities }) => {\n    addUtilities({\n      '.mix-blend-normal': { 'mix-blend-mode': 'normal' },\n      '.mix-blend-multiply': { 'mix-blend-mode': 'multiply' },\n      '.mix-blend-screen': { 'mix-blend-mode': 'screen' },\n      '.mix-blend-overlay': { 'mix-blend-mode': 'overlay' },\n      '.mix-blend-darken': { 'mix-blend-mode': 'darken' },\n      '.mix-blend-lighten': { 'mix-blend-mode': 'lighten' },\n      '.mix-blend-color-dodge': { 'mix-blend-mode': 'color-dodge' },\n      '.mix-blend-color-burn': { 'mix-blend-mode': 'color-burn' },\n      '.mix-blend-hard-light': { 'mix-blend-mode': 'hard-light' },\n      '.mix-blend-soft-light': { 'mix-blend-mode': 'soft-light' },\n      '.mix-blend-difference': { 'mix-blend-mode': 'difference' },\n      '.mix-blend-exclusion': { 'mix-blend-mode': 'exclusion' },\n      '.mix-blend-hue': { 'mix-blend-mode': 'hue' },\n      '.mix-blend-saturation': { 'mix-blend-mode': 'saturation' },\n      '.mix-blend-color': { 'mix-blend-mode': 'color' },\n      '.mix-blend-luminosity': { 'mix-blend-mode': 'luminosity' },\n      '.mix-blend-plus-lighter': { 'mix-blend-mode': 'plus-lighter' },\n    })\n  },\n\n  boxShadow: (() => {\n    let transformValue = transformThemeValue('boxShadow')\n    let defaultBoxShadow = [\n      `var(--tw-ring-offset-shadow, 0 0 #0000)`,\n      `var(--tw-ring-shadow, 0 0 #0000)`,\n      `var(--tw-shadow)`,\n    ].join(', ')\n\n    return function ({ matchUtilities, addDefaults, theme }) {\n      addDefaults(' box-shadow', {\n        '--tw-ring-offset-shadow': '0 0 #0000',\n        '--tw-ring-shadow': '0 0 #0000',\n        '--tw-shadow': '0 0 #0000',\n        '--tw-shadow-colored': '0 0 #0000',\n      })\n\n      matchUtilities(\n        {\n          shadow: (value) => {\n            value = transformValue(value)\n\n            let ast = parseBoxShadowValue(value)\n            for (let shadow of ast) {\n              // Don't override color if the whole shadow is a variable\n              if (!shadow.valid) {\n                continue\n              }\n\n              shadow.color = 'var(--tw-shadow-color)'\n            }\n\n            return {\n              '@defaults box-shadow': {},\n              '--tw-shadow': value === 'none' ? '0 0 #0000' : value,\n              '--tw-shadow-colored': value === 'none' ? '0 0 #0000' : formatBoxShadowValue(ast),\n              'box-shadow': defaultBoxShadow,\n            }\n          },\n        },\n        { values: theme('boxShadow'), type: ['shadow'] }\n      )\n    }\n  })(),\n\n  boxShadowColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        shadow: (value) => {\n          return {\n            '--tw-shadow-color': toColorValue(value),\n            '--tw-shadow': 'var(--tw-shadow-colored)',\n          }\n        },\n      },\n      { values: flattenColorPalette(theme('boxShadowColor')), type: ['color', 'any'] }\n    )\n  },\n\n  outlineStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.outline-none': {\n        outline: '2px solid transparent',\n        'outline-offset': '2px',\n      },\n      '.outline': { 'outline-style': 'solid' },\n      '.outline-dashed': { 'outline-style': 'dashed' },\n      '.outline-dotted': { 'outline-style': 'dotted' },\n      '.outline-double': { 'outline-style': 'double' },\n    })\n  },\n\n  outlineWidth: createUtilityPlugin('outlineWidth', [['outline', ['outline-width']]], {\n    type: ['length', 'number', 'percentage'],\n  }),\n\n  outlineOffset: createUtilityPlugin('outlineOffset', [['outline-offset', ['outline-offset']]], {\n    type: ['length', 'number', 'percentage', 'any'],\n    supportsNegativeValues: true,\n  }),\n\n  outlineColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        outline: (value) => {\n          return { 'outline-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('outlineColor')), type: ['color', 'any'] }\n    )\n  },\n\n  ringWidth: ({ matchUtilities, addDefaults, addUtilities, theme, config }) => {\n    let ringColorDefault = (() => {\n      if (flagEnabled(config(), 'respectDefaultRingColorOpacity')) {\n        return theme('ringColor.DEFAULT')\n      }\n\n      let ringOpacityDefault = theme('ringOpacity.DEFAULT', '0.5')\n\n      if (!theme('ringColor')?.DEFAULT) {\n        return `rgb(147 197 253 / ${ringOpacityDefault})`\n      }\n\n      return withAlphaValue(\n        theme('ringColor')?.DEFAULT,\n        ringOpacityDefault,\n        `rgb(147 197 253 / ${ringOpacityDefault})`\n      )\n    })()\n\n    addDefaults('ring-width', {\n      '--tw-ring-inset': ' ',\n      '--tw-ring-offset-width': theme('ringOffsetWidth.DEFAULT', '0px'),\n      '--tw-ring-offset-color': theme('ringOffsetColor.DEFAULT', '#fff'),\n      '--tw-ring-color': ringColorDefault,\n      '--tw-ring-offset-shadow': '0 0 #0000',\n      '--tw-ring-shadow': '0 0 #0000',\n      '--tw-shadow': '0 0 #0000',\n      '--tw-shadow-colored': '0 0 #0000',\n    })\n\n    matchUtilities(\n      {\n        ring: (value) => {\n          return {\n            '@defaults ring-width': {},\n            '--tw-ring-offset-shadow': `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n            '--tw-ring-shadow': `var(--tw-ring-inset) 0 0 0 calc(${value} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n            'box-shadow': [\n              `var(--tw-ring-offset-shadow)`,\n              `var(--tw-ring-shadow)`,\n              `var(--tw-shadow, 0 0 #0000)`,\n            ].join(', '),\n          }\n        },\n      },\n      { values: theme('ringWidth'), type: 'length' }\n    )\n\n    addUtilities({\n      '.ring-inset': { '@defaults ring-width': {}, '--tw-ring-inset': 'inset' },\n    })\n  },\n\n  ringColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        ring: (value) => {\n          if (!corePlugins('ringOpacity')) {\n            return {\n              '--tw-ring-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: '--tw-ring-color',\n            variable: '--tw-ring-opacity',\n          })\n        },\n      },\n      {\n        values: Object.fromEntries(\n          Object.entries(flattenColorPalette(theme('ringColor'))).filter(\n            ([modifier]) => modifier !== 'DEFAULT'\n          )\n        ),\n        type: ['color', 'any'],\n      }\n    )\n  },\n\n  ringOpacity: (helpers) => {\n    let { config } = helpers\n\n    return createUtilityPlugin('ringOpacity', [['ring-opacity', ['--tw-ring-opacity']]], {\n      filterDefault: !flagEnabled(config(), 'respectDefaultRingColorOpacity'),\n    })(helpers)\n  },\n  ringOffsetWidth: createUtilityPlugin(\n    'ringOffsetWidth',\n    [['ring-offset', ['--tw-ring-offset-width']]],\n    { type: 'length' }\n  ),\n\n  ringOffsetColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'ring-offset': (value) => {\n          return {\n            '--tw-ring-offset-color': toColorValue(value),\n          }\n        },\n      },\n      { values: flattenColorPalette(theme('ringOffsetColor')), type: ['color', 'any'] }\n    )\n  },\n\n  blur: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        blur: (value) => {\n          return {\n            '--tw-blur': `blur(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('blur') }\n    )\n  },\n\n  brightness: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        brightness: (value) => {\n          return {\n            '--tw-brightness': `brightness(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('brightness') }\n    )\n  },\n\n  contrast: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        contrast: (value) => {\n          return {\n            '--tw-contrast': `contrast(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('contrast') }\n    )\n  },\n\n  dropShadow: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'drop-shadow': (value) => {\n          return {\n            '--tw-drop-shadow': Array.isArray(value)\n              ? value.map((v) => `drop-shadow(${v})`).join(' ')\n              : `drop-shadow(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('dropShadow') }\n    )\n  },\n\n  grayscale: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        grayscale: (value) => {\n          return {\n            '--tw-grayscale': `grayscale(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('grayscale') }\n    )\n  },\n\n  hueRotate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'hue-rotate': (value) => {\n          return {\n            '--tw-hue-rotate': `hue-rotate(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('hueRotate'), supportsNegativeValues: true }\n    )\n  },\n\n  invert: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        invert: (value) => {\n          return {\n            '--tw-invert': `invert(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('invert') }\n    )\n  },\n\n  saturate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        saturate: (value) => {\n          return {\n            '--tw-saturate': `saturate(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('saturate') }\n    )\n  },\n\n  sepia: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        sepia: (value) => {\n          return {\n            '--tw-sepia': `sepia(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('sepia') }\n    )\n  },\n\n  filter: ({ addDefaults, addUtilities }) => {\n    addDefaults('filter', {\n      '--tw-blur': ' ',\n      '--tw-brightness': ' ',\n      '--tw-contrast': ' ',\n      '--tw-grayscale': ' ',\n      '--tw-hue-rotate': ' ',\n      '--tw-invert': ' ',\n      '--tw-saturate': ' ',\n      '--tw-sepia': ' ',\n      '--tw-drop-shadow': ' ',\n    })\n    addUtilities({\n      '.filter': { '@defaults filter': {}, filter: cssFilterValue },\n      '.filter-none': { filter: 'none' },\n    })\n  },\n\n  backdropBlur: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-blur': (value) => {\n          return {\n            '--tw-backdrop-blur': `blur(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropBlur') }\n    )\n  },\n\n  backdropBrightness: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-brightness': (value) => {\n          return {\n            '--tw-backdrop-brightness': `brightness(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropBrightness') }\n    )\n  },\n\n  backdropContrast: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-contrast': (value) => {\n          return {\n            '--tw-backdrop-contrast': `contrast(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropContrast') }\n    )\n  },\n\n  backdropGrayscale: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-grayscale': (value) => {\n          return {\n            '--tw-backdrop-grayscale': `grayscale(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropGrayscale') }\n    )\n  },\n\n  backdropHueRotate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-hue-rotate': (value) => {\n          return {\n            '--tw-backdrop-hue-rotate': `hue-rotate(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropHueRotate'), supportsNegativeValues: true }\n    )\n  },\n\n  backdropInvert: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-invert': (value) => {\n          return {\n            '--tw-backdrop-invert': `invert(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropInvert') }\n    )\n  },\n\n  backdropOpacity: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-opacity': (value) => {\n          return {\n            '--tw-backdrop-opacity': `opacity(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropOpacity') }\n    )\n  },\n\n  backdropSaturate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-saturate': (value) => {\n          return {\n            '--tw-backdrop-saturate': `saturate(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropSaturate') }\n    )\n  },\n\n  backdropSepia: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-sepia': (value) => {\n          return {\n            '--tw-backdrop-sepia': `sepia(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropSepia') }\n    )\n  },\n\n  backdropFilter: ({ addDefaults, addUtilities }) => {\n    addDefaults('backdrop-filter', {\n      '--tw-backdrop-blur': ' ',\n      '--tw-backdrop-brightness': ' ',\n      '--tw-backdrop-contrast': ' ',\n      '--tw-backdrop-grayscale': ' ',\n      '--tw-backdrop-hue-rotate': ' ',\n      '--tw-backdrop-invert': ' ',\n      '--tw-backdrop-opacity': ' ',\n      '--tw-backdrop-saturate': ' ',\n      '--tw-backdrop-sepia': ' ',\n    })\n    addUtilities({\n      '.backdrop-filter': {\n        '@defaults backdrop-filter': {},\n        'backdrop-filter': cssBackdropFilterValue,\n      },\n      '.backdrop-filter-none': { 'backdrop-filter': 'none' },\n    })\n  },\n\n  transitionProperty: ({ matchUtilities, theme }) => {\n    let defaultTimingFunction = theme('transitionTimingFunction.DEFAULT')\n    let defaultDuration = theme('transitionDuration.DEFAULT')\n\n    matchUtilities(\n      {\n        transition: (value) => {\n          return {\n            'transition-property': value,\n            ...(value === 'none'\n              ? {}\n              : {\n                  'transition-timing-function': defaultTimingFunction,\n                  'transition-duration': defaultDuration,\n                }),\n          }\n        },\n      },\n      { values: theme('transitionProperty') }\n    )\n  },\n\n  transitionDelay: createUtilityPlugin('transitionDelay', [['delay', ['transitionDelay']]]),\n  transitionDuration: createUtilityPlugin(\n    'transitionDuration',\n    [['duration', ['transitionDuration']]],\n    { filterDefault: true }\n  ),\n  transitionTimingFunction: createUtilityPlugin(\n    'transitionTimingFunction',\n    [['ease', ['transitionTimingFunction']]],\n    { filterDefault: true }\n  ),\n  willChange: createUtilityPlugin('willChange', [['will-change', ['will-change']]]),\n  content: createUtilityPlugin('content', [\n    ['content', ['--tw-content', ['content', 'var(--tw-content)']]],\n  ]),\n}\n", "import transformThemeValue from './transformThemeValue'\n\nexport default function createUtilityPlugin(\n  themeKey,\n  utilityVariations = [[themeKey, [themeKey]]],\n  { filterDefault = false, ...options } = {}\n) {\n  let transformValue = transformThemeValue(themeKey)\n  return function ({ matchUtilities, theme }) {\n    for (let utilityVariation of utilityVariations) {\n      let group = Array.isArray(utilityVariation[0]) ? utilityVariation : [utilityVariation]\n\n      matchUtilities(\n        group.reduce((obj, [classPrefix, properties]) => {\n          return Object.assign(obj, {\n            [classPrefix]: (value) => {\n              return properties.reduce((obj, name) => {\n                if (Array.isArray(name)) {\n                  return Object.assign(obj, { [name[0]]: name[1] })\n                }\n                return Object.assign(obj, { [name]: transformValue(value) })\n              }, {})\n            },\n          })\n        }, {}),\n        {\n          ...options,\n          values: filterDefault\n            ? Object.fromEntries(\n                Object.entries(theme(themeKey) ?? {}).filter(([modifier]) => modifier !== 'DEFAULT')\n              )\n            : theme(themeKey),\n        }\n      )\n    }\n  }\n}\n", "export default function buildMediaQuery(screens) {\n  screens = Array.isArray(screens) ? screens : [screens]\n\n  return screens\n    .map((screen) => {\n      let values = screen.values.map((screen) => {\n        if (screen.raw !== undefined) {\n          return screen.raw\n        }\n\n        return [\n          screen.min && `(min-width: ${screen.min})`,\n          screen.max && `(max-width: ${screen.max})`,\n        ]\n          .filter(Boolean)\n          .join(' and ')\n      })\n\n      return screen.not ? `not all and ${values}` : values\n    })\n    .join(', ')\n}\n", "const DIRECTIONS = new Set(['normal', 'reverse', 'alternate', 'alternate-reverse'])\nconst PLAY_STATES = new Set(['running', 'paused'])\nconst FILL_MODES = new Set(['none', 'forwards', 'backwards', 'both'])\nconst ITERATION_COUNTS = new Set(['infinite'])\nconst TIMINGS = new Set([\n  'linear',\n  'ease',\n  'ease-in',\n  'ease-out',\n  'ease-in-out',\n  'step-start',\n  'step-end',\n])\nconst TIMING_FNS = ['cubic-bezier', 'steps']\n\nconst COMMA = /\\,(?![^(]*\\))/g // Comma separator that is not located between brackets. E.g.: `cubiz-bezier(a, b, c)` these don't count.\nconst SPACE = /\\ +(?![^(]*\\))/g // Similar to the one above, but with spaces instead.\nconst TIME = /^(-?[\\d.]+m?s)$/\nconst DIGIT = /^(\\d+)$/\n\nexport default function parseAnimationValue(input) {\n  let animations = input.split(COMMA)\n  return animations.map((animation) => {\n    let value = animation.trim()\n    let result = { value }\n    let parts = value.split(SPACE)\n    let seen = new Set()\n\n    for (let part of parts) {\n      if (!seen.has('DIRECTIONS') && DIRECTIONS.has(part)) {\n        result.direction = part\n        seen.add('DIRECTIONS')\n      } else if (!seen.has('PLAY_STATES') && PLAY_STATES.has(part)) {\n        result.playState = part\n        seen.add('PLAY_STATES')\n      } else if (!seen.has('FILL_MODES') && FILL_MODES.has(part)) {\n        result.fillMode = part\n        seen.add('FILL_MODES')\n      } else if (\n        !seen.has('ITERATION_COUNTS') &&\n        (ITERATION_COUNTS.has(part) || DIGIT.test(part))\n      ) {\n        result.iterationCount = part\n        seen.add('ITERATION_COUNTS')\n      } else if (!seen.has('TIMING_FUNCTION') && TIMINGS.has(part)) {\n        result.timingFunction = part\n        seen.add('TIMING_FUNCTION')\n      } else if (!seen.has('TIMING_FUNCTION') && TIMING_FNS.some((f) => part.startsWith(`${f}(`))) {\n        result.timingFunction = part\n        seen.add('TIMING_FUNCTION')\n      } else if (!seen.has('DURATION') && TIME.test(part)) {\n        result.duration = part\n        seen.add('DURATION')\n      } else if (!seen.has('DELAY') && TIME.test(part)) {\n        result.delay = part\n        seen.add('DELAY')\n      } else if (!seen.has('NAME')) {\n        result.name = part\n        seen.add('NAME')\n      } else {\n        if (!result.unknown) result.unknown = []\n        result.unknown.push(part)\n      }\n    }\n\n    return result\n  })\n}\n", "const flattenColorPalette = (colors) =>\n  Object.assign(\n    {},\n    ...Object.entries(colors ?? {}).flatMap(([color, values]) =>\n      typeof values == 'object'\n        ? Object.entries(flattenColorPalette(values)).map(([number, hex]) => ({\n            [color + (number === 'DEFAULT' ? '' : `-${number}`)]: hex,\n          }))\n        : [{ [`${color}`]: values }]\n    )\n  )\n\nexport default flattenColorPalette\n", "export default function toColorValue(maybeFunction) {\n  return typeof maybeFunction === 'function' ? maybeFunction({}) : maybeFunction\n}\n", "/**\n * @typedef {object} ScreenValue\n * @property {number|undefined} min\n * @property {number|undefined} max\n * @property {string|undefined} raw\n */\n\n/**\n * @typedef {object} Screen\n * @property {string} name\n * @property {boolean} not\n * @property {ScreenValue[]} values\n */\n\n/**\n * A function that normalizes the various forms that the screens object can be\n * provided in.\n *\n * Input(s):\n *   - ['100px', '200px'] // Raw strings\n *   - { sm: '100px', md: '200px' } // Object with string values\n *   - { sm: { min: '100px' }, md: { max: '100px' } } // Object with object values\n *   - { sm: [{ min: '100px' }, { max: '200px' }] } // Object with object array (multiple values)\n *\n * Output(s):\n *   - [{ name: 'sm', values: [{ min: '100px', max: '200px' }] }] // List of objects, that contains multiple values\n *\n * @returns {Screen[]}\n */\nexport function normalizeScreens(screens, root = true) {\n  if (Array.isArray(screens)) {\n    return screens.map((screen) => {\n      if (root && Array.isArray(screen)) {\n        throw new Error('The tuple syntax is not supported for `screens`.')\n      }\n\n      if (typeof screen === 'string') {\n        return { name: screen.toString(), not: false, values: [{ min: screen, max: undefined }] }\n      }\n\n      let [name, options] = screen\n      name = name.toString()\n\n      if (typeof options === 'string') {\n        return { name, not: false, values: [{ min: options, max: undefined }] }\n      }\n\n      if (Array.isArray(options)) {\n        return { name, not: false, values: options.map((option) => resolveValue(option)) }\n      }\n\n      return { name, not: false, values: [resolveValue(options)] }\n    })\n  }\n\n  return normalizeScreens(Object.entries(screens ?? {}), false)\n}\n\n/**\n * @param {Screen} screen\n * @returns {{result: false, reason: string} | {result: true, reason: null}}\n */\nexport function isScreenSortable(screen) {\n  if (screen.values.length !== 1) {\n    return { result: false, reason: 'multiple-values' }\n  } else if (screen.values[0].raw !== undefined) {\n    return { result: false, reason: 'raw-values' }\n  } else if (screen.values[0].min !== undefined && screen.values[0].max !== undefined) {\n    return { result: false, reason: 'min-and-max' }\n  }\n\n  return { result: true, reason: null }\n}\n\n/**\n * @param {'min' | 'max'} type\n * @param {Screen | 'string'} a\n * @param {Screen | 'string'} z\n * @returns {number}\n */\nexport function compareScreens(type, a, z) {\n  let aScreen = toScreen(a, type)\n  let zScreen = toScreen(z, type)\n\n  let aSorting = isScreenSortable(aScreen)\n  let bSorting = isScreenSortable(zScreen)\n\n  // These cases should never happen and indicate a bug in Tailwind CSS itself\n  if (aSorting.reason === 'multiple-values' || bSorting.reason === 'multiple-values') {\n    throw new Error(\n      'Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.'\n    )\n  } else if (aSorting.reason === 'raw-values' || bSorting.reason === 'raw-values') {\n    throw new Error(\n      'Attempted to sort a screen with raw values. This should never happen. Please open a bug report.'\n    )\n  } else if (aSorting.reason === 'min-and-max' || bSorting.reason === 'min-and-max') {\n    throw new Error(\n      'Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.'\n    )\n  }\n\n  // Let the sorting begin\n  let { min: aMin, max: aMax } = aScreen.values[0]\n  let { min: zMin, max: zMax } = zScreen.values[0]\n\n  // Negating screens flip their behavior. Basically `not min-width` is `max-width`\n  if (a.not) [aMin, aMax] = [aMax, aMin]\n  if (z.not) [zMin, zMax] = [zMax, zMin]\n\n  aMin = aMin === undefined ? aMin : parseFloat(aMin)\n  aMax = aMax === undefined ? aMax : parseFloat(aMax)\n  zMin = zMin === undefined ? zMin : parseFloat(zMin)\n  zMax = zMax === undefined ? zMax : parseFloat(zMax)\n\n  let [aValue, zValue] = type === 'min' ? [aMin, zMin] : [zMax, aMax]\n\n  return aValue - zValue\n}\n\n/**\n *\n * @param {PartialScreen> | string} value\n * @param {'min' | 'max'} type\n * @returns {Screen}\n */\nexport function toScreen(value, type) {\n  if (typeof value === 'object') {\n    return value\n  }\n\n  return {\n    name: 'arbitrary-screen',\n    values: [{ [type]: value }],\n  }\n}\n\nfunction resolveValue({ 'min-width': _minWidth, min = _minWidth, max, raw } = {}) {\n  return { min, max, raw }\n}\n", "/**\n * This function removes any uses of CSS variables used as an alpha channel\n *\n * This is required for selectors like `:visited` which do not allow\n * changes in opacity or external control using CSS variables.\n *\n * @param {import('postcss').Container} container\n * @param {string[]} toRemove\n */\nexport function removeAlphaVariables(container, toRemove) {\n  container.walkDecls((decl) => {\n    if (toRemove.includes(decl.prop)) {\n      decl.remove()\n\n      return\n    }\n\n    for (let varName of toRemove) {\n      if (decl.value.includes(`/ var(${varName})`)) {\n        decl.value = decl.value.replace(`/ var(${varName})`, '')\n      }\n    }\n  })\n}\n", "/**\n * Parse a path string into an array of path segments.\n *\n * Square bracket notation `a[b]` may be used to \"escape\" dots that would otherwise be interpreted as path separators.\n *\n * Example:\n * a -> ['a']\n * a.b.c -> ['a', 'b', 'c']\n * a[b].c -> ['a', 'b', 'c']\n * a[b.c].e.f -> ['a', 'b.c', 'e', 'f']\n * a[b][c][d] -> ['a', 'b', 'c', 'd']\n *\n * @param {string|string[]} path\n **/\nexport function toPath(path) {\n  if (Array.isArray(path)) return path\n\n  let openBrackets = path.split('[').length - 1\n  let closedBrackets = path.split(']').length - 1\n\n  if (openBrackets !== closedBrackets) {\n    throw new Error(`Path is invalid. Has unbalanced brackets: ${path}`)\n  }\n\n  return path.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean)\n}\n", "let matchingBrackets = new Map([\n  ['{', '}'],\n  ['[', ']'],\n  ['(', ')'],\n])\nlet inverseMatchingBrackets = new Map(\n  Array.from(matchingBrackets.entries()).map(([k, v]) => [v, k])\n)\n\nlet quotes = new Set(['\"', \"'\", '`'])\n\n// Arbitrary values must contain balanced brackets (), [] and {}. Escaped\n// values don't count, and brackets inside quotes also don't count.\n//\n// E.g.: w-[this-is]w-[weird-and-invalid]\n// E.g.: w-[this-is\\\\]w-\\\\[weird-but-valid]\n// E.g.: content-['this-is-also-valid]-weirdly-enough']\nexport default function isSyntacticallyValidPropertyValue(value) {\n  let stack = []\n  let inQuotes = false\n\n  for (let i = 0; i < value.length; i++) {\n    let char = value[i]\n\n    if (char === ':' && !inQuotes && stack.length === 0) {\n      return false\n    }\n\n    // Non-escaped quotes allow us to \"allow\" anything in between\n    if (quotes.has(char) && value[i - 1] !== '\\\\') {\n      inQuotes = !inQuotes\n    }\n\n    if (inQuotes) continue\n    if (value[i - 1] === '\\\\') continue // Escaped\n\n    if (matchingBrackets.has(char)) {\n      stack.push(char)\n    } else if (inverseMatchingBrackets.has(char)) {\n      let inverse = inverseMatchingBrackets.get(char)\n\n      // Nothing to pop from, therefore it is unbalanced\n      if (stack.length <= 0) {\n        return false\n      }\n\n      // Popped value must match the inverse value, otherwise it is unbalanced\n      if (stack.pop() !== inverse) {\n        return false\n      }\n    }\n  }\n\n  // If there is still something on the stack, it is also unbalanced\n  if (stack.length > 0) {\n    return false\n  }\n\n  // All good, totally balanced!\n  return true\n}\n", "export default function bigSign(bigIntValue) {\n  return (bigIntValue > 0n) - (bigIntValue < 0n)\n}\n", "// @ts-check\n\n/**\n * We must remap all the old bits to new bits for each set variant\n * Only arbitrary variants are considered as those are the only\n * ones that need to be re-sorted at this time\n *\n * An iterated process that removes and sets individual bits simultaneously\n * will not work because we may have a new bit that is also a later old bit\n * This means that we would be removing a previously set bit which we don't\n * want to do\n *\n * For example (assume `bN` = `1<<N`)\n * Given the \"total\" mapping `[[b1, b3], [b2, b4], [b3, b1], [b4, b2]]`\n * The mapping is \"total\" because:\n * 1. Every input and output is accounted for\n * 2. All combinations are unique\n * 3. No one input maps to multiple outputs and vice versa\n * And, given an offset with all bits set:\n * V = b1 | b2 | b3 | b4\n *\n * Let's explore the issue with removing and setting bits simultaneously:\n * V & ~b1 | b3 = b2 | b3 | b4\n * V & ~b2 | b4 = b3 | b4\n * V & ~b3 | b1 = b1 | b4\n * V & ~b4 | b2 = b1 | b2\n *\n * As you can see, we end up with the wrong result.\n * This is because we're removing a bit that was previously set.\n * And, thus the final result is missing b3 and b4.\n *\n * Now, let's explore the issue with removing the bits first:\n * V & ~b1 = b2 | b3 | b4\n * V & ~b2 = b3 | b4\n * V & ~b3 = b4\n * V & ~b4 = 0\n *\n * And then setting the bits:\n * V | b3 = b3\n * V | b4 = b3 | b4\n * V | b1 = b1 | b3 | b4\n * V | b2 = b1 | b2 | b3 | b4\n *\n * We get the correct result because we're not removing any bits that were\n * previously set thus properly remapping the bits to the new order\n *\n * To collect this into a single operation that can be done simultaneously\n * we must first create a mask for the old bits that are set and a mask for\n * the new bits that are set. Then we can remove the old bits and set the new\n * bits simultaneously in a \"single\" operation like so:\n * OldMask = b1 | b2 | b3 | b4\n * NewMask = b3 | b4 | b1 | b2\n *\n * So this:\n * V & ~oldMask | newMask\n *\n * Expands to this:\n * V & ~b1 & ~b2 & ~b3 & ~b4 | b3 | b4 | b1 | b2\n *\n * Which becomes this:\n * b1 | b2 | b3 | b4\n *\n * Which is the correct result!\n *\n * @param {bigint} num\n * @param {[bigint, bigint][]} mapping\n */\nexport function remapBitfield(num, mapping) {\n  // Create masks for the old and new bits that are set\n  let oldMask = 0n\n  let newMask = 0n\n  for (let [oldBit, newBit] of mapping) {\n    if (num & oldBit) {\n      oldMask = oldMask | oldBit\n      newMask = newMask | newBit\n    }\n  }\n\n  // Remove all old bits\n  // Set all new bits\n  return (num & ~oldMask) | newMask\n}\n", "// @ts-check\n\nimport bigSign from '../util/bigSign'\nimport { remapBitfield } from './remap-bitfield.js'\n\n/**\n * @typedef {'base' | 'defaults' | 'components' | 'utilities' | 'variants' | 'user'} Layer\n */\n\n/**\n * @typedef {object} VariantOption\n * @property {number} id An unique identifier to identify `matchVariant`\n * @property {function | undefined} sort The sort function\n * @property {string|null} value The value we want to compare\n * @property {string|null} modifier The modifier that was used (if any)\n * @property {bigint} variant The variant bitmask\n */\n\n/**\n * @typedef {object} RuleOffset\n * @property {Layer} layer The layer that this rule belongs to\n * @property {Layer} parentLayer The layer that this rule originally belonged to. Only different from layer if this is a variant.\n * @property {bigint} arbitrary 0n if false, 1n if true\n * @property {bigint} variants Dynamic size. 1 bit per registered variant. 0n means no variants\n * @property {bigint} parallelIndex Rule index for the parallel variant. 0 if not applicable.\n * @property {bigint} index Index of the rule / utility in it's given *parent* layer. Monotonically increasing.\n * @property {VariantOption[]} options Some information on how we can sort arbitrary variants\n */\n\nexport class Offsets {\n  constructor() {\n    /**\n     * Offsets for the next rule in a given layer\n     *\n     * @type {Record<Layer, bigint>}\n     */\n    this.offsets = {\n      defaults: 0n,\n      base: 0n,\n      components: 0n,\n      utilities: 0n,\n      variants: 0n,\n      user: 0n,\n    }\n\n    /**\n     * Positions for a given layer\n     *\n     * @type {Record<Layer, bigint>}\n     */\n    this.layerPositions = {\n      defaults: 0n,\n      base: 1n,\n      components: 2n,\n      utilities: 3n,\n\n      // There isn't technically a \"user\" layer, but we need to give it a position\n      // Because it's used for ordering user-css from @apply\n      user: 4n,\n\n      variants: 5n,\n    }\n\n    /**\n     * The total number of functions currently registered across all variants (including arbitrary variants)\n     *\n     * @type {bigint}\n     */\n    this.reservedVariantBits = 0n\n\n    /**\n     * Positions for a given variant\n     *\n     * @type {Map<string, bigint>}\n     */\n    this.variantOffsets = new Map()\n  }\n\n  /**\n   * @param {Layer} layer\n   * @returns {RuleOffset}\n   */\n  create(layer) {\n    return {\n      layer,\n      parentLayer: layer,\n      arbitrary: 0n,\n      variants: 0n,\n      parallelIndex: 0n,\n      index: this.offsets[layer]++,\n      options: [],\n    }\n  }\n\n  /**\n   * @returns {RuleOffset}\n   */\n  arbitraryProperty() {\n    return {\n      ...this.create('utilities'),\n      arbitrary: 1n,\n    }\n  }\n\n  /**\n   * Get the offset for a variant\n   *\n   * @param {string} variant\n   * @param {number} index\n   * @returns {RuleOffset}\n   */\n  forVariant(variant, index = 0) {\n    let offset = this.variantOffsets.get(variant)\n    if (offset === undefined) {\n      throw new Error(`Cannot find offset for unknown variant ${variant}`)\n    }\n\n    return {\n      ...this.create('variants'),\n      variants: offset << BigInt(index),\n    }\n  }\n\n  /**\n   * @param {RuleOffset} rule\n   * @param {RuleOffset} variant\n   * @param {VariantOption} options\n   * @returns {RuleOffset}\n   */\n  applyVariantOffset(rule, variant, options) {\n    options.variant = variant.variants\n\n    return {\n      ...rule,\n      layer: 'variants',\n      parentLayer: rule.layer === 'variants' ? rule.parentLayer : rule.layer,\n      variants: rule.variants | variant.variants,\n      options: options.sort ? [].concat(options, rule.options) : rule.options,\n\n      // TODO: Technically this is wrong. We should be handling parallel index on a per variant basis.\n      // We'll take the max of all the parallel indexes for now.\n      // @ts-ignore\n      parallelIndex: max([rule.parallelIndex, variant.parallelIndex]),\n    }\n  }\n\n  /**\n   * @param {RuleOffset} offset\n   * @param {number} parallelIndex\n   * @returns {RuleOffset}\n   */\n  applyParallelOffset(offset, parallelIndex) {\n    return {\n      ...offset,\n      parallelIndex: BigInt(parallelIndex),\n    }\n  }\n\n  /**\n   * Each variant gets 1 bit per function / rule registered.\n   * This is because multiple variants can be applied to a single rule and we need to know which ones are present and which ones are not.\n   * Additionally, every unique group of variants is grouped together in the stylesheet.\n   *\n   * This grouping is order-independent. For instance, we do not differentiate between `hover:focus` and `focus:hover`.\n   *\n   * @param {string[]} variants\n   * @param {(name: string) => number} getLength\n   */\n  recordVariants(variants, getLength) {\n    for (let variant of variants) {\n      this.recordVariant(variant, getLength(variant))\n    }\n  }\n\n  /**\n   * The same as `recordVariants` but for a single arbitrary variant at runtime.\n   * @param {string} variant\n   * @param {number} fnCount\n   *\n   * @returns {RuleOffset} The highest offset for this variant\n   */\n  recordVariant(variant, fnCount = 1) {\n    this.variantOffsets.set(variant, 1n << this.reservedVariantBits)\n\n    // Ensure space is reserved for each \"function\" in the parallel variant\n    // by offsetting the next variant by the number of parallel variants\n    // in the one we just added.\n\n    // Single functions that return parallel variants are NOT handled separately here\n    // They're offset by 1 (or the number of functions) as usual\n    // And each rule returned is tracked separately since the functions are evaluated lazily.\n    // @see `RuleOffset.parallelIndex`\n    this.reservedVariantBits += BigInt(fnCount)\n\n    return {\n      ...this.create('variants'),\n      variants: this.variantOffsets.get(variant),\n    }\n  }\n\n  /**\n   * @param {RuleOffset} a\n   * @param {RuleOffset} b\n   * @returns {bigint}\n   */\n  compare(a, b) {\n    // Sort layers together\n    if (a.layer !== b.layer) {\n      return this.layerPositions[a.layer] - this.layerPositions[b.layer]\n    }\n\n    // When sorting the `variants` layer, we need to sort based on the parent layer as well within\n    // this variants layer.\n    if (a.parentLayer !== b.parentLayer) {\n      return this.layerPositions[a.parentLayer] - this.layerPositions[b.parentLayer]\n    }\n\n    // Sort based on the sorting function\n    for (let aOptions of a.options) {\n      for (let bOptions of b.options) {\n        if (aOptions.id !== bOptions.id) continue\n        if (!aOptions.sort || !bOptions.sort) continue\n\n        let maxFnVariant = max([aOptions.variant, bOptions.variant]) ?? 0n\n\n        // Create a mask of 0s from bits 1..N where N represents the mask of the Nth bit\n        let mask = ~(maxFnVariant | (maxFnVariant - 1n))\n        let aVariantsAfterFn = a.variants & mask\n        let bVariantsAfterFn = b.variants & mask\n\n        // If the variants the same, we _can_ sort them\n        if (aVariantsAfterFn !== bVariantsAfterFn) {\n          continue\n        }\n\n        let result = aOptions.sort(\n          {\n            value: aOptions.value,\n            modifier: aOptions.modifier,\n          },\n          {\n            value: bOptions.value,\n            modifier: bOptions.modifier,\n          }\n        )\n        if (result !== 0) return result\n      }\n    }\n\n    // Sort variants in the order they were registered\n    if (a.variants !== b.variants) {\n      return a.variants - b.variants\n    }\n\n    // Make sure each rule returned by a parallel variant is sorted in ascending order\n    if (a.parallelIndex !== b.parallelIndex) {\n      return a.parallelIndex - b.parallelIndex\n    }\n\n    // Always sort arbitrary properties after other utilities\n    if (a.arbitrary !== b.arbitrary) {\n      return a.arbitrary - b.arbitrary\n    }\n\n    // Sort utilities, components, etc\u2026 in the order they were registered\n    return a.index - b.index\n  }\n\n  /**\n   * Arbitrary variants are recorded in the order they're encountered.\n   * This means that the order is not stable between environments and sets of content files.\n   *\n   * In order to make the order stable, we need to remap the arbitrary variant offsets to\n   * be in alphabetical order starting from the offset of the first arbitrary variant.\n   */\n  recalculateVariantOffsets() {\n    // Sort the variants by their name\n    let variants = Array.from(this.variantOffsets.entries())\n      .filter(([v]) => v.startsWith('['))\n      .sort(([a], [z]) => fastCompare(a, z))\n\n    // Sort the list of offsets\n    // This is not necessarily a discrete range of numbers which is why\n    // we're using sort instead of creating a range from min/max\n    let newOffsets = variants.map(([, offset]) => offset).sort((a, z) => bigSign(a - z))\n\n    // Create a map from the old offsets to the new offsets in the new sort order\n    /** @type {[bigint, bigint][]} */\n    let mapping = variants.map(([, oldOffset], i) => [oldOffset, newOffsets[i]])\n\n    // Remove any variants that will not move letting us skip\n    // remapping if everything happens to be in order\n    return mapping.filter(([a, z]) => a !== z)\n  }\n\n  /**\n   * @template T\n   * @param {[RuleOffset, T][]} list\n   * @returns {[RuleOffset, T][]}\n   */\n  remapArbitraryVariantOffsets(list) {\n    let mapping = this.recalculateVariantOffsets()\n\n    // No arbitrary variants? Nothing to do.\n    // Everyhing already in order? Nothing to do.\n    if (mapping.length === 0) {\n      return list\n    }\n\n    // Remap every variant offset in the list\n    return list.map((item) => {\n      let [offset, rule] = item\n\n      offset = {\n        ...offset,\n        variants: remapBitfield(offset.variants, mapping),\n      }\n\n      return [offset, rule]\n    })\n  }\n\n  /**\n   * @template T\n   * @param {[RuleOffset, T][]} list\n   * @returns {[RuleOffset, T][]}\n   */\n  sort(list) {\n    list = this.remapArbitraryVariantOffsets(list)\n\n    return list.sort(([a], [b]) => bigSign(this.compare(a, b)))\n  }\n}\n\n/**\n *\n * @param {bigint[]} nums\n * @returns {bigint|null}\n */\nfunction max(nums) {\n  let max = null\n\n  for (const num of nums) {\n    max = max ?? num\n    max = max > num ? max : num\n  }\n\n  return max\n}\n\n/**\n * A fast ASCII order string comparison function.\n *\n * Using `.sort()` without a custom compare function is faster\n * But you can only use that if you're sorting an array of\n * only strings. If you're sorting strings inside objects\n * or arrays, you need must use a custom compare function.\n *\n * @param {string} a\n * @param {string} b\n */\nfunction fastCompare(a, b) {\n  let aLen = a.length\n  let bLen = b.length\n  let minLen = aLen < bLen ? aLen : bLen\n\n  for (let i = 0; i < minLen; i++) {\n    let cmp = a.charCodeAt(i) - b.charCodeAt(i)\n    if (cmp !== 0) return cmp\n  }\n\n  return aLen - bLen\n}\n", "import parser from 'postcss-selector-parser'\nimport { movePseudos } from './pseudoElements'\n\nexport function applyImportantSelector(selector, important) {\n  let sel = parser().astSync(selector)\n\n  sel.each((sel) => {\n    // Wrap with :is if it's not already wrapped\n    let isWrapped =\n      sel.nodes[0].type === 'pseudo' &&\n      sel.nodes[0].value === ':is' &&\n      sel.nodes.every((node) => node.type !== 'combinator')\n\n    if (!isWrapped) {\n      sel.nodes = [\n        parser.pseudo({\n          value: ':is',\n          nodes: [sel.clone()],\n        }),\n      ]\n    }\n\n    movePseudos(sel)\n  })\n\n  return `${important} ${sel.toString()}`\n}\n", "import log from '../util/log'\n\nexport default function normalizeTailwindDirectives(root) {\n  let tailwindDirectives = new Set()\n  let layerDirectives = new Set()\n  let applyDirectives = new Set()\n\n  root.walkAtRules((atRule) => {\n    if (atRule.name === 'apply') {\n      applyDirectives.add(atRule)\n    }\n\n    if (atRule.name === 'import') {\n      if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n        atRule.name = 'tailwind'\n        atRule.params = 'base'\n      } else if (\n        atRule.params === '\"tailwindcss/components\"' ||\n        atRule.params === \"'tailwindcss/components'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'components'\n      } else if (\n        atRule.params === '\"tailwindcss/utilities\"' ||\n        atRule.params === \"'tailwindcss/utilities'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'utilities'\n      } else if (\n        atRule.params === '\"tailwindcss/screens\"' ||\n        atRule.params === \"'tailwindcss/screens'\" ||\n        atRule.params === '\"tailwindcss/variants\"' ||\n        atRule.params === \"'tailwindcss/variants'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'variants'\n      }\n    }\n\n    if (atRule.name === 'tailwind') {\n      if (atRule.params === 'screens') {\n        atRule.params = 'variants'\n      }\n      tailwindDirectives.add(atRule.params)\n    }\n\n    if (['layer', 'responsive', 'variants'].includes(atRule.name)) {\n      if (['responsive', 'variants'].includes(atRule.name)) {\n        log.warn(`${atRule.name}-at-rule-deprecated`, [\n          `The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\n          `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`,\n          'https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer',\n        ])\n      }\n      layerDirectives.add(atRule)\n    }\n  })\n\n  if (\n    !tailwindDirectives.has('base') ||\n    !tailwindDirectives.has('components') ||\n    !tailwindDirectives.has('utilities')\n  ) {\n    for (let rule of layerDirectives) {\n      if (rule.name === 'layer' && ['base', 'components', 'utilities'].includes(rule.params)) {\n        if (!tailwindDirectives.has(rule.params)) {\n          throw rule.error(\n            `\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`\n          )\n        }\n      } else if (rule.name === 'responsive') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@responsive` is used but `@tailwind utilities` is missing.')\n        }\n      } else if (rule.name === 'variants') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@variants` is used but `@tailwind utilities` is missing.')\n        }\n      }\n    }\n  }\n\n  return { tailwindDirectives, applyDirectives }\n}\n", "import fs from 'fs'\nimport LRU from '@alloc/quick-lru'\nimport * as sharedState from './sharedState'\nimport { generateRules } from './generateRules'\nimport log from '../util/log'\nimport cloneNodes from '../util/cloneNodes'\nimport { defaultExtractor } from './defaultExtractor'\n\nlet env = sharedState.env\n\nconst builtInExtractors = {\n  DEFAULT: defaultExtractor,\n}\n\nconst builtInTransformers = {\n  DEFAULT: (content) => content,\n  svelte: (content) => content.replace(/(?:^|\\s)class:/g, ' '),\n}\n\nfunction getExtractor(context, fileExtension) {\n  let extractors = context.tailwindConfig.content.extract\n\n  return (\n    extractors[fileExtension] ||\n    extractors.DEFAULT ||\n    builtInExtractors[fileExtension] ||\n    builtInExtractors.DEFAULT(context)\n  )\n}\n\nfunction getTransformer(tailwindConfig, fileExtension) {\n  let transformers = tailwindConfig.content.transform\n\n  return (\n    transformers[fileExtension] ||\n    transformers.DEFAULT ||\n    builtInTransformers[fileExtension] ||\n    builtInTransformers.DEFAULT\n  )\n}\n\nlet extractorCache = new WeakMap()\n\n// Scans template contents for possible classes. This is a hot path on initial build but\n// not too important for subsequent builds. The faster the better though \u2014 if we can speed\n// up these regexes by 50% that could cut initial build time by like 20%.\nfunction getClassCandidates(content, extractor, candidates, seen) {\n  if (!extractorCache.has(extractor)) {\n    extractorCache.set(extractor, new LRU({ maxSize: 25000 }))\n  }\n\n  for (let line of content.split('\\n')) {\n    line = line.trim()\n\n    if (seen.has(line)) {\n      continue\n    }\n    seen.add(line)\n\n    if (extractorCache.get(extractor).has(line)) {\n      for (let match of extractorCache.get(extractor).get(line)) {\n        candidates.add(match)\n      }\n    } else {\n      let extractorMatches = extractor(line).filter((s) => s !== '!*')\n      let lineMatchesSet = new Set(extractorMatches)\n\n      for (let match of lineMatchesSet) {\n        candidates.add(match)\n      }\n\n      extractorCache.get(extractor).set(line, lineMatchesSet)\n    }\n  }\n}\n\n/**\n *\n * @param {[import('./offsets.js').RuleOffset, import('postcss').Node][]} rules\n * @param {*} context\n */\nfunction buildStylesheet(rules, context) {\n  let sortedRules = context.offsets.sort(rules)\n\n  let returnValue = {\n    base: new Set(),\n    defaults: new Set(),\n    components: new Set(),\n    utilities: new Set(),\n    variants: new Set(),\n  }\n\n  for (let [sort, rule] of sortedRules) {\n    returnValue[sort.layer].add(rule)\n  }\n\n  return returnValue\n}\n\nexport default function expandTailwindAtRules(context) {\n  return async (root) => {\n    let layerNodes = {\n      base: null,\n      components: null,\n      utilities: null,\n      variants: null,\n    }\n\n    root.walkAtRules((rule) => {\n      // Make sure this file contains Tailwind directives. If not, we can save\n      // a lot of work and bail early. Also we don't have to register our touch\n      // file as a dependency since the output of this CSS does not depend on\n      // the source of any templates. Think Vue <style> blocks for example.\n      if (rule.name === 'tailwind') {\n        if (Object.keys(layerNodes).includes(rule.params)) {\n          layerNodes[rule.params] = rule\n        }\n      }\n    })\n\n    if (Object.values(layerNodes).every((n) => n === null)) {\n      return root\n    }\n\n    // ---\n\n    // Find potential rules in changed files\n    let candidates = new Set([...(context.candidates ?? []), sharedState.NOT_ON_DEMAND])\n    let seen = new Set()\n\n    env.DEBUG && console.time('Reading changed files')\n\n    if (__OXIDE__) {\n      // TODO: Pass through or implement `extractor`\n      for (let candidate of require('@tailwindcss/oxide').parseCandidateStringsFromFiles(\n        context.changedContent\n        // Object.assign({}, builtInTransformers, context.tailwindConfig.content.transform)\n      )) {\n        candidates.add(candidate)\n      }\n\n      // for (let { file, content, extension } of context.changedContent) {\n      //   let transformer = getTransformer(context.tailwindConfig, extension)\n      //   let extractor = getExtractor(context, extension)\n      //   getClassCandidatesOxide(file, transformer(content), extractor, candidates, seen)\n      // }\n    } else {\n      /** @type {[item: {file?: string, content?: string}, meta: {transformer: any, extractor: any}][]} */\n      let regexParserContent = []\n\n      for (let item of context.changedContent) {\n        let transformer = getTransformer(context.tailwindConfig, item.extension)\n        let extractor = getExtractor(context, item.extension)\n        regexParserContent.push([item, { transformer, extractor }])\n      }\n\n      const BATCH_SIZE = 500\n\n      for (let i = 0; i < regexParserContent.length; i += BATCH_SIZE) {\n        let batch = regexParserContent.slice(i, i + BATCH_SIZE)\n        await Promise.all(\n          batch.map(async ([{ file, content }, { transformer, extractor }]) => {\n            content = file ? await fs.promises.readFile(file, 'utf8') : content\n            getClassCandidates(transformer(content), extractor, candidates, seen)\n          })\n        )\n      }\n    }\n\n    env.DEBUG && console.timeEnd('Reading changed files')\n\n    // ---\n\n    // Generate the actual CSS\n    let classCacheCount = context.classCache.size\n\n    env.DEBUG && console.time('Generate rules')\n    env.DEBUG && console.time('Sorting candidates')\n    let sortedCandidates = __OXIDE__\n      ? candidates\n      : new Set(\n          [...candidates].sort((a, z) => {\n            if (a === z) return 0\n            if (a < z) return -1\n            return 1\n          })\n        )\n    env.DEBUG && console.timeEnd('Sorting candidates')\n    generateRules(sortedCandidates, context)\n    env.DEBUG && console.timeEnd('Generate rules')\n\n    // We only ever add to the classCache, so if it didn't grow, there is nothing new.\n    env.DEBUG && console.time('Build stylesheet')\n    if (context.stylesheetCache === null || context.classCache.size !== classCacheCount) {\n      context.stylesheetCache = buildStylesheet([...context.ruleCache], context)\n    }\n    env.DEBUG && console.timeEnd('Build stylesheet')\n\n    let {\n      defaults: defaultNodes,\n      base: baseNodes,\n      components: componentNodes,\n      utilities: utilityNodes,\n      variants: screenNodes,\n    } = context.stylesheetCache\n\n    // ---\n\n    // Replace any Tailwind directives with generated CSS\n\n    if (layerNodes.base) {\n      layerNodes.base.before(\n        cloneNodes([...baseNodes, ...defaultNodes], layerNodes.base.source, {\n          layer: 'base',\n        })\n      )\n      layerNodes.base.remove()\n    }\n\n    if (layerNodes.components) {\n      layerNodes.components.before(\n        cloneNodes([...componentNodes], layerNodes.components.source, {\n          layer: 'components',\n        })\n      )\n      layerNodes.components.remove()\n    }\n\n    if (layerNodes.utilities) {\n      layerNodes.utilities.before(\n        cloneNodes([...utilityNodes], layerNodes.utilities.source, {\n          layer: 'utilities',\n        })\n      )\n      layerNodes.utilities.remove()\n    }\n\n    // We do post-filtering to not alter the emitted order of the variants\n    const variantNodes = Array.from(screenNodes).filter((node) => {\n      const parentLayer = node.raws.tailwind?.parentLayer\n\n      if (parentLayer === 'components') {\n        return layerNodes.components !== null\n      }\n\n      if (parentLayer === 'utilities') {\n        return layerNodes.utilities !== null\n      }\n\n      return true\n    })\n\n    if (layerNodes.variants) {\n      layerNodes.variants.before(\n        cloneNodes(variantNodes, layerNodes.variants.source, {\n          layer: 'variants',\n        })\n      )\n      layerNodes.variants.remove()\n    } else if (variantNodes.length > 0) {\n      root.append(\n        cloneNodes(variantNodes, root.source, {\n          layer: 'variants',\n        })\n      )\n    }\n\n    // If we've got a utility layer and no utilities are generated there's likely something wrong\n    const hasUtilityVariants = variantNodes.some(\n      (node) => node.raws.tailwind?.parentLayer === 'utilities'\n    )\n\n    if (layerNodes.utilities && utilityNodes.size === 0 && !hasUtilityVariants) {\n      log.warn('content-problems', [\n        'No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.',\n        'https://tailwindcss.com/docs/content-configuration',\n      ])\n    }\n\n    // ---\n\n    if (env.DEBUG) {\n      console.log('Potential classes: ', candidates.size)\n      console.log('Active contexts: ', sharedState.contextSourcesMap.size)\n    }\n\n    // Clear the cache for the changed files\n    context.changedContent = []\n\n    // Cleanup any leftover @layer atrules\n    root.walkAtRules('layer', (rule) => {\n      if (Object.keys(layerNodes).includes(rule.params)) {\n        rule.remove()\n      }\n    })\n  }\n}\n", "export default function cloneNodes(nodes, source = undefined, raws = undefined) {\n  return nodes.map((node) => {\n    let cloned = node.clone()\n\n    // We always want override the source map\n    // except when explicitly told not to\n    let shouldOverwriteSource = node.raws.tailwind?.preserveSource !== true || !cloned.source\n\n    if (source !== undefined && shouldOverwriteSource) {\n      cloned.source = source\n\n      if ('walk' in cloned) {\n        cloned.walk((child) => {\n          child.source = source\n        })\n      }\n    }\n\n    if (raws !== undefined) {\n      cloned.raws.tailwind = {\n        ...cloned.raws.tailwind,\n        ...raws,\n      }\n    }\n\n    return cloned\n  })\n}\n", "const REGEX_SPECIAL = /[\\\\^$.*+?()[\\]{}|]/g\nconst REGEX_HAS_SPECIAL = RegExp(REGEX_SPECIAL.source)\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nfunction toSource(source) {\n  source = Array.isArray(source) ? source : [source]\n\n  source = source.map((item) => (item instanceof RegExp ? item.source : item))\n\n  return source.join('')\n}\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function pattern(source) {\n  return new RegExp(toSource(source), 'g')\n}\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function withoutCapturing(source) {\n  return new RegExp(`(?:${toSource(source)})`, 'g')\n}\n\n/**\n * @param {Array<string|RegExp>} sources\n */\nexport function any(sources) {\n  return `(?:${sources.map(toSource).join('|')})`\n}\n\n/**\n * @param {string|RegExp} source\n */\nexport function optional(source) {\n  return `(?:${toSource(source)})?`\n}\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function zeroOrMore(source) {\n  return `(?:${toSource(source)})*`\n}\n\n/**\n * Generate a RegExp that matches balanced brackets for a given depth\n * We have to specify a depth because JS doesn't support recursive groups using ?R\n *\n * Based on https://stackoverflow.com/questions/17759004/how-to-match-string-within-parentheses-nested-in-java/17759264#17759264\n *\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function nestedBrackets(open, close, depth = 1) {\n  return withoutCapturing([\n    escape(open),\n    /[^\\s]*/,\n    depth === 1\n      ? `[^${escape(open)}${escape(close)}\\s]*`\n      : any([`[^${escape(open)}${escape(close)}\\s]*`, nestedBrackets(open, close, depth - 1)]),\n    /[^\\s]*/,\n    escape(close),\n  ])\n}\n\nexport function escape(string) {\n  return string && REGEX_HAS_SPECIAL.test(string)\n    ? string.replace(REGEX_SPECIAL, '\\\\$&')\n    : string || ''\n}\n", "import { flagEnabled } from '../featureFlags'\nimport * as regex from './regex'\n\nexport function defaultExtractor(context) {\n  let patterns = Array.from(buildRegExps(context))\n\n  /**\n   * @param {string} content\n   */\n  return (content) => {\n    /** @type {(string|string)[]} */\n    let results = []\n\n    for (let pattern of patterns) {\n      for (let result of content.match(pattern) ?? []) {\n        results.push(clipAtBalancedParens(result))\n      }\n    }\n\n    return results\n  }\n}\n\nfunction* buildRegExps(context) {\n  let separator = context.tailwindConfig.separator\n  let prefix =\n    context.tailwindConfig.prefix !== ''\n      ? regex.optional(regex.pattern([/-?/, regex.escape(context.tailwindConfig.prefix)]))\n      : ''\n\n  let utility = regex.any([\n    // Arbitrary properties (without square brackets)\n    /\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]/,\n\n    // Arbitrary properties with balanced square brackets\n    // This is a targeted fix to continue to allow theme()\n    // with square brackets to work in arbitrary properties\n    // while fixing a problem with the regex matching too much\n    /\\[[^\\s:'\"`\\]]+:[^\\s]+?\\[[^\\s]+\\][^\\s]+?\\]/,\n\n    // Utilities\n    regex.pattern([\n      // Utility Name / Group Name\n      /-?(?:\\w+)/,\n\n      // Normal/Arbitrary values\n      regex.optional(\n        regex.any([\n          regex.pattern([\n            // Arbitrary values\n            /-(?:\\w+-)*\\[[^\\s:]+\\]/,\n\n            // Not immediately followed by an `{[(`\n            /(?![{([]])/,\n\n            // optionally followed by an opacity modifier\n            /(?:\\/[^\\s'\"`\\\\><$]*)?/,\n          ]),\n\n          regex.pattern([\n            // Arbitrary values\n            /-(?:\\w+-)*\\[[^\\s]+\\]/,\n\n            // Not immediately followed by an `{[(`\n            /(?![{([]])/,\n\n            // optionally followed by an opacity modifier\n            /(?:\\/[^\\s'\"`\\\\$]*)?/,\n          ]),\n\n          // Normal values w/o quotes \u2014 may include an opacity modifier\n          /[-\\/][^\\s'\"`\\\\$={><]*/,\n        ])\n      ),\n    ]),\n  ])\n\n  let variantPatterns = [\n    // Without quotes\n    regex.any([\n      // This is here to provide special support for the `@` variant\n      regex.pattern([/@\\[[^\\s\"'`]+\\](\\/[^\\s\"'`]+)?/, separator]),\n\n      // With variant modifier (e.g.: group-[..]/modifier)\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]\\/\\w+/, separator]),\n\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]/, separator]),\n      regex.pattern([/[^\\s\"'`\\[\\\\]+/, separator]),\n    ]),\n\n    // With quotes allowed\n    regex.any([\n      // With variant modifier (e.g.: group-[..]/modifier)\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]\\/\\w+/, separator]),\n\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]/, separator]),\n      regex.pattern([/[^\\s`\\[\\\\]+/, separator]),\n    ]),\n  ]\n\n  for (const variantPattern of variantPatterns) {\n    yield regex.pattern([\n      // Variants\n      '((?=((',\n      variantPattern,\n      ')+))\\\\2)?',\n\n      // Important (optional)\n      /!?/,\n\n      prefix,\n\n      utility,\n    ])\n  }\n\n  // 5. Inner matches\n  yield /[^<>\"'`\\s.(){}[\\]#=%$]*[^<>\"'`\\s.(){}[\\]#=%:$]/g\n}\n\n// We want to capture any \"special\" characters\n// AND the characters immediately following them (if there is one)\nlet SPECIALS = /([\\[\\]'\"`])([^\\[\\]'\"`])?/g\nlet ALLOWED_CLASS_CHARACTERS = /[^\"'`\\s<>\\]]+/\n\n/**\n * Clips a string ensuring that parentheses, quotes, etc\u2026 are balanced\n * Used for arbitrary values only\n *\n * We will go past the end of the balanced parens until we find a non-class character\n *\n * Depth matching behavior:\n * w-[calc(100%-theme('spacing[some_key][1.5]'))]']\n *   \u252C    \u252C          \u252C\u252C       \u252C        \u252C\u252C   \u252C\u252C\u252C\u252C\u252C\u252C\u252C\n *   1    2          3        4        34   3 210 END\n *   \u2570\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2534\u2500\u2500\u2500\u2534\u2500\u2534\u2534\u2534\n *\n * @param {string} input\n */\nfunction clipAtBalancedParens(input) {\n  // We are care about this for arbitrary values\n  if (!input.includes('-[')) {\n    return input\n  }\n\n  let depth = 0\n  let openStringTypes = []\n\n  // Find all parens, brackets, quotes, etc\n  // Stop when we end at a balanced pair\n  // This is naive and will treat mismatched parens as balanced\n  // This shouldn't be a problem in practice though\n  let matches = input.matchAll(SPECIALS)\n\n  // We can't use lookbehind assertions because we have to support Safari\n  // So, instead, we've emulated it using capture groups and we'll re-work the matches to accommodate\n  matches = Array.from(matches).flatMap((match) => {\n    const [, ...groups] = match\n\n    return groups.map((group, idx) =>\n      Object.assign([], match, {\n        index: match.index + idx,\n        0: group,\n      })\n    )\n  })\n\n  for (let match of matches) {\n    let char = match[0]\n    let inStringType = openStringTypes[openStringTypes.length - 1]\n\n    if (char === inStringType) {\n      openStringTypes.pop()\n    } else if (char === \"'\" || char === '\"' || char === '`') {\n      openStringTypes.push(char)\n    }\n\n    if (inStringType) {\n      continue\n    } else if (char === '[') {\n      depth++\n      continue\n    } else if (char === ']') {\n      depth--\n      continue\n    }\n\n    // We've gone one character past the point where we should stop\n    // This means that there was an extra closing `]`\n    // We'll clip to just before it\n    if (depth < 0) {\n      return input.substring(0, match.index - 1)\n    }\n\n    // We've finished balancing the brackets but there still may be characters that can be included\n    // For example in the class `text-[#336699]/[.35]`\n    // The depth goes to `0` at the closing `]` but goes up again at the `[`\n\n    // If we're at zero and encounter a non-class character then we clip the class there\n    if (depth === 0 && !ALLOWED_CLASS_CHARACTERS.test(char)) {\n      return input.substring(0, match.index)\n    }\n  }\n\n  return input\n}\n\n// Regular utilities\n// {{modifier}:}*{namespace}{-{suffix}}*{/{opacityModifier}}?\n\n// Arbitrary values\n// {{modifier}:}*{namespace}-[{arbitraryValue}]{/{opacityModifier}}?\n// arbitraryValue: no whitespace, balanced quotes unless within quotes, balanced brackets unless within quotes\n\n// Arbitrary properties\n// {{modifier}:}*[{validCssPropertyName}:{arbitraryValue}]\n", "import dlv from 'dlv'\nimport didYouMean from 'didyoumean'\nimport transformThemeValue from '../util/transformThemeValue'\nimport parseValue from '../value-parser/index'\nimport { normalizeScreens } from '../util/normalizeScreens'\nimport buildMediaQuery from '../util/buildMediaQuery'\nimport { toPath } from '../util/toPath'\nimport { withAlphaValue } from '../util/withAlphaVariable'\nimport { parseColorFormat } from '../util/pluginUtils'\nimport log from '../util/log'\n\nfunction isObject(input) {\n  return typeof input === 'object' && input !== null\n}\n\nfunction findClosestExistingPath(theme, path) {\n  let parts = toPath(path)\n  do {\n    parts.pop()\n\n    if (dlv(theme, parts) !== undefined) break\n  } while (parts.length)\n\n  return parts.length ? parts : undefined\n}\n\nfunction pathToString(path) {\n  if (typeof path === 'string') return path\n  return path.reduce((acc, cur, i) => {\n    if (cur.includes('.')) return `${acc}[${cur}]`\n    return i === 0 ? cur : `${acc}.${cur}`\n  }, '')\n}\n\nfunction list(items) {\n  return items.map((key) => `'${key}'`).join(', ')\n}\n\nfunction listKeys(obj) {\n  return list(Object.keys(obj))\n}\n\nfunction validatePath(config, path, defaultValue, themeOpts = {}) {\n  const pathString = Array.isArray(path) ? pathToString(path) : path.replace(/^['\"]+|['\"]+$/g, '')\n  const pathSegments = Array.isArray(path) ? path : toPath(pathString)\n  const value = dlv(config.theme, pathSegments, defaultValue)\n\n  if (value === undefined) {\n    let error = `'${pathString}' does not exist in your theme config.`\n    const parentSegments = pathSegments.slice(0, -1)\n    const parentValue = dlv(config.theme, parentSegments)\n\n    if (isObject(parentValue)) {\n      const validKeys = Object.keys(parentValue).filter(\n        (key) => validatePath(config, [...parentSegments, key]).isValid\n      )\n      const suggestion = didYouMean(pathSegments[pathSegments.length - 1], validKeys)\n      if (suggestion) {\n        error += ` Did you mean '${pathToString([...parentSegments, suggestion])}'?`\n      } else if (validKeys.length > 0) {\n        error += ` '${pathToString(parentSegments)}' has the following valid keys: ${list(\n          validKeys\n        )}`\n      }\n    } else {\n      const closestPath = findClosestExistingPath(config.theme, pathString)\n      if (closestPath) {\n        const closestValue = dlv(config.theme, closestPath)\n        if (isObject(closestValue)) {\n          error += ` '${pathToString(closestPath)}' has the following keys: ${listKeys(\n            closestValue\n          )}`\n        } else {\n          error += ` '${pathToString(closestPath)}' is not an object.`\n        }\n      } else {\n        error += ` Your theme has the following top-level keys: ${listKeys(config.theme)}`\n      }\n    }\n\n    return {\n      isValid: false,\n      error,\n    }\n  }\n\n  if (\n    !(\n      typeof value === 'string' ||\n      typeof value === 'number' ||\n      typeof value === 'function' ||\n      value instanceof String ||\n      value instanceof Number ||\n      Array.isArray(value)\n    )\n  ) {\n    let error = `'${pathString}' was found but does not resolve to a string.`\n\n    if (isObject(value)) {\n      let validKeys = Object.keys(value).filter(\n        (key) => validatePath(config, [...pathSegments, key]).isValid\n      )\n      if (validKeys.length) {\n        error += ` Did you mean something like '${pathToString([...pathSegments, validKeys[0]])}'?`\n      }\n    }\n\n    return {\n      isValid: false,\n      error,\n    }\n  }\n\n  const [themeSection] = pathSegments\n\n  return {\n    isValid: true,\n    value: transformThemeValue(themeSection)(value, themeOpts),\n  }\n}\n\nfunction extractArgs(node, vNodes, functions) {\n  vNodes = vNodes.map((vNode) => resolveVNode(node, vNode, functions))\n\n  let args = ['']\n\n  for (let vNode of vNodes) {\n    if (vNode.type === 'div' && vNode.value === ',') {\n      args.push('')\n    } else {\n      args[args.length - 1] += parseValue.stringify(vNode)\n    }\n  }\n\n  return args\n}\n\nfunction resolveVNode(node, vNode, functions) {\n  if (vNode.type === 'function' && functions[vNode.value] !== undefined) {\n    let args = extractArgs(node, vNode.nodes, functions)\n    vNode.type = 'word'\n    vNode.value = functions[vNode.value](node, ...args)\n  }\n\n  return vNode\n}\n\nfunction resolveFunctions(node, input, functions) {\n  let hasAnyFn = Object.keys(functions).some((fn) => input.includes(`${fn}(`))\n  if (!hasAnyFn) return input\n\n  return parseValue(input)\n    .walk((vNode) => {\n      resolveVNode(node, vNode, functions)\n    })\n    .toString()\n}\n\nlet nodeTypePropertyMap = {\n  atrule: 'params',\n  decl: 'value',\n}\n\n/**\n * @param {string} path\n * @returns {Iterable<[path: string, alpha: string|undefined]>}\n */\nfunction* toPaths(path) {\n  // Strip quotes from beginning and end of string\n  // This allows the alpha value to be present inside of quotes\n  path = path.replace(/^['\"]+|['\"]+$/g, '')\n\n  let matches = path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/)\n  let alpha = undefined\n\n  yield [path, undefined]\n\n  if (matches) {\n    path = matches[1]\n    alpha = matches[2]\n\n    yield [path, alpha]\n  }\n}\n\n/**\n *\n * @param {any} config\n * @param {string} path\n * @param {any} defaultValue\n */\nfunction resolvePath(config, path, defaultValue) {\n  const results = Array.from(toPaths(path)).map(([path, alpha]) => {\n    return Object.assign(validatePath(config, path, defaultValue, { opacityValue: alpha }), {\n      resolvedPath: path,\n      alpha,\n    })\n  })\n\n  return results.find((result) => result.isValid) ?? results[0]\n}\n\nexport default function (context) {\n  let config = context.tailwindConfig\n\n  let functions = {\n    theme: (node, path, ...defaultValue) => {\n      let { isValid, value, error, alpha } = resolvePath(\n        config,\n        path,\n        defaultValue.length ? defaultValue : undefined\n      )\n\n      if (!isValid) {\n        let parentNode = node.parent\n        let candidate = parentNode?.raws.tailwind?.candidate\n\n        if (parentNode && candidate !== undefined) {\n          // Remove this utility from any caches\n          context.markInvalidUtilityNode(parentNode)\n\n          // Remove the CSS node from the markup\n          parentNode.remove()\n\n          // Show a warning\n          log.warn('invalid-theme-key-in-class', [\n            `The utility \\`${candidate}\\` contains an invalid theme value and was not generated.`,\n          ])\n\n          return\n        }\n\n        throw node.error(error)\n      }\n\n      let maybeColor = parseColorFormat(value)\n      let isColorFunction = maybeColor !== undefined && typeof maybeColor === 'function'\n\n      if (alpha !== undefined || isColorFunction) {\n        if (alpha === undefined) {\n          alpha = 1.0\n        }\n\n        value = withAlphaValue(maybeColor, alpha, maybeColor)\n      }\n\n      return value\n    },\n    screen: (node, screen) => {\n      screen = screen.replace(/^['\"]+/g, '').replace(/['\"]+$/g, '')\n      let screens = normalizeScreens(config.theme.screens)\n      let screenDefinition = screens.find(({ name }) => name === screen)\n\n      if (!screenDefinition) {\n        throw node.error(`The '${screen}' screen does not exist in your theme.`)\n      }\n\n      return buildMediaQuery(screenDefinition)\n    },\n  }\n  return (root) => {\n    root.walk((node) => {\n      let property = nodeTypePropertyMap[node.type]\n\n      if (property === undefined) {\n        return\n      }\n\n      node[property] = resolveFunctions(node, node[property], functions)\n    })\n  }\n}\n", "import { normalizeScreens } from '../util/normalizeScreens'\nimport buildMediaQuery from '../util/buildMediaQuery'\n\nexport default function ({ tailwindConfig: { theme } }) {\n  return function (css) {\n    css.walkAtRules('screen', (atRule) => {\n      let screen = atRule.params\n      let screens = normalizeScreens(theme.screens)\n      let screenDefinition = screens.find(({ name }) => name === screen)\n\n      if (!screenDefinition) {\n        throw atRule.error(`No \\`${screen}\\` screen found.`)\n      }\n\n      atRule.name = 'media'\n      atRule.params = buildMediaQuery(screenDefinition)\n    })\n  }\n}\n", "import postcss from 'postcss'\nimport selectorParser from 'postcss-selector-parser'\nimport { flagEnabled } from '../featureFlags'\n\nlet getNode = {\n  id(node) {\n    return selectorParser.attribute({\n      attribute: 'id',\n      operator: '=',\n      value: node.value,\n      quoteMark: '\"',\n    })\n  },\n}\n\nfunction minimumImpactSelector(nodes) {\n  let rest = nodes\n    .filter((node) => {\n      // Keep non-pseudo nodes\n      if (node.type !== 'pseudo') return true\n\n      // Keep pseudo nodes that have subnodes\n      // E.g.: `:not()` contains subnodes inside the parentheses\n      if (node.nodes.length > 0) return true\n\n      // Keep pseudo `elements`\n      // This implicitly means that we ignore pseudo `classes`\n      return (\n        node.value.startsWith('::') ||\n        [':before', ':after', ':first-line', ':first-letter'].includes(node.value)\n      )\n    })\n    .reverse()\n\n  let searchFor = new Set(['tag', 'class', 'id', 'attribute'])\n\n  let splitPointIdx = rest.findIndex((n) => searchFor.has(n.type))\n  if (splitPointIdx === -1) return rest.reverse().join('').trim()\n\n  let node = rest[splitPointIdx]\n  let bestNode = getNode[node.type] ? getNode[node.type](node) : node\n\n  rest = rest.slice(0, splitPointIdx)\n\n  let combinatorIdx = rest.findIndex((n) => n.type === 'combinator' && n.value === '>')\n  if (combinatorIdx !== -1) {\n    rest.splice(0, combinatorIdx)\n    rest.unshift(selectorParser.universal())\n  }\n\n  return [bestNode, ...rest.reverse()].join('').trim()\n}\n\nexport let elementSelectorParser = selectorParser((selectors) => {\n  return selectors.map((s) => {\n    let nodes = s.split((n) => n.type === 'combinator' && n.value === ' ').pop()\n    return minimumImpactSelector(nodes)\n  })\n})\n\nlet cache = new Map()\n\nfunction extractElementSelector(selector) {\n  if (!cache.has(selector)) {\n    cache.set(selector, elementSelectorParser.transformSync(selector))\n  }\n\n  return cache.get(selector)\n}\n\nexport default function resolveDefaultsAtRules({ tailwindConfig }) {\n  return (root) => {\n    let variableNodeMap = new Map()\n\n    /** @type {Set<import('postcss').AtRule>} */\n    let universals = new Set()\n\n    root.walkAtRules('defaults', (rule) => {\n      if (rule.nodes && rule.nodes.length > 0) {\n        universals.add(rule)\n        return\n      }\n\n      let variable = rule.params\n      if (!variableNodeMap.has(variable)) {\n        variableNodeMap.set(variable, new Set())\n      }\n\n      variableNodeMap.get(variable).add(rule.parent)\n\n      rule.remove()\n    })\n\n    if (flagEnabled(tailwindConfig, 'optimizeUniversalDefaults')) {\n      for (let universal of universals) {\n        /** @type {Map<string, Set<string>>} */\n        let selectorGroups = new Map()\n\n        let rules = variableNodeMap.get(universal.params) ?? []\n\n        for (let rule of rules) {\n          for (let selector of extractElementSelector(rule.selector)) {\n            // If selector contains a vendor prefix after a pseudo element or class,\n            // we consider them separately because merging the declarations into\n            // a single rule will cause browsers that do not understand the\n            // vendor prefix to throw out the whole rule\n            let selectorGroupName =\n              selector.includes(':-') || selector.includes('::-') ? selector : '__DEFAULT__'\n\n            let selectors = selectorGroups.get(selectorGroupName) ?? new Set()\n            selectorGroups.set(selectorGroupName, selectors)\n\n            selectors.add(selector)\n          }\n        }\n\n        if (flagEnabled(tailwindConfig, 'optimizeUniversalDefaults')) {\n          if (selectorGroups.size === 0) {\n            universal.remove()\n            continue\n          }\n\n          for (let [, selectors] of selectorGroups) {\n            let universalRule = postcss.rule({\n              source: universal.source,\n            })\n\n            universalRule.selectors = [...selectors]\n\n            universalRule.append(universal.nodes.map((node) => node.clone()))\n            universal.before(universalRule)\n          }\n        }\n\n        universal.remove()\n      }\n    } else if (universals.size) {\n      let universalRule = postcss.rule({\n        selectors: ['*', '::before', '::after'],\n      })\n\n      for (let universal of universals) {\n        universalRule.append(universal.nodes)\n\n        if (!universalRule.parent) {\n          universal.before(universalRule)\n        }\n\n        if (!universalRule.source) {\n          universalRule.source = universal.source\n        }\n\n        universal.remove()\n      }\n\n      let backdropRule = universalRule.clone({\n        selectors: ['::backdrop'],\n      })\n\n      universalRule.after(backdropRule)\n    }\n  }\n}\n", "let comparisonMap = {\n  atrule: ['name', 'params'],\n  rule: ['selector'],\n}\nlet types = new Set(Object.keys(comparisonMap))\n\nexport default function collapseAdjacentRules() {\n  function collapseRulesIn(root) {\n    let currentRule = null\n    root.each((node) => {\n      if (!types.has(node.type)) {\n        currentRule = null\n        return\n      }\n\n      if (currentRule === null) {\n        currentRule = node\n        return\n      }\n\n      let properties = comparisonMap[node.type]\n\n      if (node.type === 'atrule' && node.name === 'font-face') {\n        currentRule = node\n      } else if (\n        properties.every(\n          (property) =>\n            (node[property] ?? '').replace(/\\s+/g, ' ') ===\n            (currentRule[property] ?? '').replace(/\\s+/g, ' ')\n        )\n      ) {\n        // An AtRule may not have children (for example if we encounter duplicate @import url(\u2026) rules)\n        if (node.nodes) {\n          currentRule.append(node.nodes)\n        }\n\n        node.remove()\n      } else {\n        currentRule = node\n      }\n    })\n\n    // After we've collapsed adjacent rules & at-rules, we need to collapse\n    // adjacent rules & at-rules that are children of at-rules.\n    // We do not care about nesting rules because Tailwind CSS\n    // explicitly does not handle rule nesting on its own as\n    // the user is expected to use a nesting plugin\n    root.each((node) => {\n      if (node.type === 'atrule') {\n        collapseRulesIn(node)\n      }\n    })\n  }\n\n  return (root) => {\n    collapseRulesIn(root)\n  }\n}\n", "export default function collapseDuplicateDeclarations() {\n  return (root) => {\n    root.walkRules((node) => {\n      let seen = new Map()\n      let droppable = new Set([])\n      let byProperty = new Map()\n\n      node.walkDecls((decl) => {\n        // This could happen if we have nested selectors. In that case the\n        // parent will loop over all its declarations but also the declarations\n        // of nested rules. With this we ensure that we are shallowly checking\n        // declarations.\n        if (decl.parent !== node) {\n          return\n        }\n\n        if (seen.has(decl.prop)) {\n          // Exact same value as what we have seen so far\n          if (seen.get(decl.prop).value === decl.value) {\n            // Keep the last one, drop the one we've seen so far\n            droppable.add(seen.get(decl.prop))\n            // Override the existing one with the new value. This is necessary\n            // so that if we happen to have more than one declaration with the\n            // same value, that we keep removing the previous one. Otherwise we\n            // will only remove the *first* one.\n            seen.set(decl.prop, decl)\n            return\n          }\n\n          // Not the same value, so we need to check if we can merge it so\n          // let's collect it first.\n          if (!byProperty.has(decl.prop)) {\n            byProperty.set(decl.prop, new Set())\n          }\n\n          byProperty.get(decl.prop).add(seen.get(decl.prop))\n          byProperty.get(decl.prop).add(decl)\n        }\n\n        seen.set(decl.prop, decl)\n      })\n\n      // Drop all the duplicate declarations with the exact same value we've\n      // already seen so far.\n      for (let decl of droppable) {\n        decl.remove()\n      }\n\n      // Analyze the declarations based on its unit, drop all the declarations\n      // with the same unit but the last one in the list.\n      for (let declarations of byProperty.values()) {\n        let byUnit = new Map()\n\n        for (let decl of declarations) {\n          let unit = resolveUnit(decl.value)\n          if (unit === null) {\n            // We don't have a unit, so should never try and collapse this\n            // value. This is because we can't know how to do it in a correct\n            // way (e.g.: overrides for older browsers)\n            continue\n          }\n\n          if (!byUnit.has(unit)) {\n            byUnit.set(unit, new Set())\n          }\n\n          byUnit.get(unit).add(decl)\n        }\n\n        for (let declarations of byUnit.values()) {\n          // Get all but the last one\n          let removableDeclarations = Array.from(declarations).slice(0, -1)\n\n          for (let decl of removableDeclarations) {\n            decl.remove()\n          }\n        }\n      }\n    })\n  }\n}\n\nlet UNITLESS_NUMBER = Symbol('unitless-number')\n\nfunction resolveUnit(input) {\n  let result = /^-?\\d*.?\\d+([\\w%]+)?$/g.exec(input)\n\n  if (result) {\n    return result[1] ?? UNITLESS_NUMBER\n  }\n\n  return null\n}\n", "function partitionRules(root) {\n  if (!root.walkAtRules) return\n\n  let applyParents = new Set()\n\n  root.walkAtRules('apply', (rule) => {\n    applyParents.add(rule.parent)\n  })\n\n  if (applyParents.size === 0) {\n    return\n  }\n\n  for (let rule of applyParents) {\n    let nodeGroups = []\n    let lastGroup = []\n\n    for (let node of rule.nodes) {\n      if (node.type === 'atrule' && node.name === 'apply') {\n        if (lastGroup.length > 0) {\n          nodeGroups.push(lastGroup)\n          lastGroup = []\n        }\n        nodeGroups.push([node])\n      } else {\n        lastGroup.push(node)\n      }\n    }\n\n    if (lastGroup.length > 0) {\n      nodeGroups.push(lastGroup)\n    }\n\n    if (nodeGroups.length === 1) {\n      continue\n    }\n\n    for (let group of [...nodeGroups].reverse()) {\n      let clone = rule.clone({ nodes: [] })\n      clone.append(group)\n      rule.after(clone)\n    }\n\n    rule.remove()\n  }\n}\n\nexport default function expandApplyAtRules() {\n  return (root) => {\n    partitionRules(root)\n  }\n}\n", "function isRoot(node) {\n  return node.type === 'root'\n}\n\nfunction isAtLayer(node) {\n  return node.type === 'atrule' && node.name === 'layer'\n}\n\nexport default function (_context) {\n  return (root, result) => {\n    let found = false\n\n    root.walkAtRules('tailwind', (node) => {\n      if (found) return false\n\n      if (node.parent && !(isRoot(node.parent) || isAtLayer(node.parent))) {\n        found = true\n        node.warn(\n          result,\n          [\n            'Nested @tailwind rules were detected, but are not supported.',\n            \"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\",\n            'Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy',\n          ].join('\\n')\n        )\n        return false\n      }\n    })\n\n    root.walkRules((rule) => {\n      if (found) return false\n\n      rule.walkRules((nestedRule) => {\n        found = true\n        nestedRule.warn(\n          result,\n          [\n            'Nested CSS was detected, but CSS nesting has not been configured correctly.',\n            'Please enable a CSS nesting plugin *before* Tailwind in your configuration.',\n            'See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting',\n          ].join('\\n')\n        )\n        return false\n      })\n    })\n  }\n}\n", "import normalizeTailwindDirectives from './lib/normalizeTailwindDirectives'\nimport expandTailwindAtRules from './lib/expandTailwindAtRules'\nimport expandApplyAtRules from './lib/expandApplyAtRules'\nimport evaluateTailwindFunctions from './lib/evaluateTailwindFunctions'\nimport substituteScreenAtRules from './lib/substituteScreenAtRules'\nimport resolveDefaultsAtRules from './lib/resolveDefaultsAtRules'\nimport collapseAdjacentRules from './lib/collapseAdjacentRules'\nimport collapseDuplicateDeclarations from './lib/collapseDuplicateDeclarations'\nimport partitionApplyAtRules from './lib/partitionApplyAtRules'\nimport detectNesting from './lib/detectNesting'\nimport { createContext } from './lib/setupContextUtils'\nimport { issueFlagNotices } from './featureFlags'\n\nexport default function processTailwindFeatures(setupContext) {\n  return async function (root, result) {\n    let { tailwindDirectives, applyDirectives } = normalizeTailwindDirectives(root)\n\n    detectNesting()(root, result)\n\n    // Partition apply rules that are found in the css\n    // itself.\n    partitionApplyAtRules()(root, result)\n\n    let context = setupContext({\n      tailwindDirectives,\n      applyDirectives,\n      registerDependency(dependency) {\n        result.messages.push({\n          plugin: 'tailwindcss',\n          parent: result.opts.from,\n          ...dependency,\n        })\n      },\n      createContext(tailwindConfig, changedContent) {\n        return createContext(tailwindConfig, changedContent, root)\n      },\n    })(root, result)\n\n    if (context.tailwindConfig.separator === '-') {\n      throw new Error(\n        \"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\"\n      )\n    }\n\n    issueFlagNotices(context.tailwindConfig)\n\n    await expandTailwindAtRules(context)(root, result)\n\n    // Partition apply rules that are generated by\n    // addComponents, addUtilities and so on.\n    partitionApplyAtRules()(root, result)\n    expandApplyAtRules(context)(root, result)\n    evaluateTailwindFunctions(context)(root, result)\n    substituteScreenAtRules(context)(root, result)\n    resolveDefaultsAtRules(context)(root, result)\n    collapseAdjacentRules(context)(root, result)\n    collapseDuplicateDeclarations(context)(root, result)\n  }\n}\n", "export default [\"preflight\",\"container\",\"accessibility\",\"pointerEvents\",\"visibility\",\"position\",\"inset\",\"isolation\",\"zIndex\",\"order\",\"gridColumn\",\"gridColumnStart\",\"gridColumnEnd\",\"gridRow\",\"gridRowStart\",\"gridRowEnd\",\"float\",\"clear\",\"margin\",\"boxSizing\",\"lineClamp\",\"display\",\"aspectRatio\",\"height\",\"maxHeight\",\"minHeight\",\"width\",\"minWidth\",\"maxWidth\",\"flex\",\"flexShrink\",\"flexGrow\",\"flexBasis\",\"tableLayout\",\"captionSide\",\"borderCollapse\",\"borderSpacing\",\"transformOrigin\",\"translate\",\"rotate\",\"skew\",\"scale\",\"transform\",\"animation\",\"cursor\",\"touchAction\",\"userSelect\",\"resize\",\"scrollSnapType\",\"scrollSnapAlign\",\"scrollSnapStop\",\"scrollMargin\",\"scrollPadding\",\"listStylePosition\",\"listStyleType\",\"listStyleImage\",\"appearance\",\"columns\",\"breakBefore\",\"breakInside\",\"breakAfter\",\"gridAutoColumns\",\"gridAutoFlow\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"flexDirection\",\"flexWrap\",\"placeContent\",\"placeItems\",\"alignContent\",\"alignItems\",\"justifyContent\",\"justifyItems\",\"gap\",\"space\",\"divideWidth\",\"divideStyle\",\"divideColor\",\"divideOpacity\",\"placeSelf\",\"alignSelf\",\"justifySelf\",\"overflow\",\"overscrollBehavior\",\"scrollBehavior\",\"textOverflow\",\"hyphens\",\"whitespace\",\"wordBreak\",\"borderRadius\",\"borderWidth\",\"borderStyle\",\"borderColor\",\"borderOpacity\",\"backgroundColor\",\"backgroundOpacity\",\"backgroundImage\",\"gradientColorStops\",\"boxDecorationBreak\",\"backgroundSize\",\"backgroundAttachment\",\"backgroundClip\",\"backgroundPosition\",\"backgroundRepeat\",\"backgroundOrigin\",\"fill\",\"stroke\",\"strokeWidth\",\"objectFit\",\"objectPosition\",\"padding\",\"textAlign\",\"textIndent\",\"verticalAlign\",\"fontFamily\",\"fontSize\",\"fontWeight\",\"textTransform\",\"fontStyle\",\"fontVariantNumeric\",\"lineHeight\",\"letterSpacing\",\"textColor\",\"textOpacity\",\"textDecoration\",\"textDecorationColor\",\"textDecorationStyle\",\"textDecorationThickness\",\"textUnderlineOffset\",\"fontSmoothing\",\"placeholderColor\",\"placeholderOpacity\",\"caretColor\",\"accentColor\",\"opacity\",\"backgroundBlendMode\",\"mixBlendMode\",\"boxShadow\",\"boxShadowColor\",\"outlineStyle\",\"outlineWidth\",\"outlineOffset\",\"outlineColor\",\"ringWidth\",\"ringColor\",\"ringOpacity\",\"ringOffsetWidth\",\"ringOffsetColor\",\"blur\",\"brightness\",\"contrast\",\"dropShadow\",\"grayscale\",\"hueRotate\",\"invert\",\"saturate\",\"sepia\",\"filter\",\"backdropBlur\",\"backdropBrightness\",\"backdropContrast\",\"backdropGrayscale\",\"backdropHueRotate\",\"backdropInvert\",\"backdropOpacity\",\"backdropSaturate\",\"backdropSepia\",\"backdropFilter\",\"transitionProperty\",\"transitionDelay\",\"transitionDuration\",\"transitionTimingFunction\",\"willChange\",\"content\"]", "export default function (pluginConfig, plugins) {\n  if (pluginConfig === undefined) {\n    return plugins\n  }\n\n  const pluginNames = Array.isArray(pluginConfig)\n    ? pluginConfig\n    : [\n        ...new Set(\n          plugins\n            .filter((pluginName) => {\n              return pluginConfig !== false && pluginConfig[pluginName] !== false\n            })\n            .concat(\n              Object.keys(pluginConfig).filter((pluginName) => {\n                return pluginConfig[pluginName] !== false\n              })\n            )\n        ),\n      ]\n\n  return pluginNames\n}\n", "import log from '../util/log'\n\nfunction warn({ version, from, to }) {\n  log.warn(`${from}-color-renamed`, [\n    `As of Tailwind CSS ${version}, \\`${from}\\` has been renamed to \\`${to}\\`.`,\n    'Update your configuration file to silence this warning.',\n  ])\n}\n\nexport default {\n  inherit: 'inherit',\n  current: 'currentColor',\n  transparent: 'transparent',\n  black: '#000',\n  white: '#fff',\n  slate: {\n    50: '#f8fafc',\n    100: '#f1f5f9',\n    200: '#e2e8f0',\n    300: '#cbd5e1',\n    400: '#94a3b8',\n    500: '#64748b',\n    600: '#475569',\n    700: '#334155',\n    800: '#1e293b',\n    900: '#0f172a',\n    950: '#020617',\n  },\n  gray: {\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    300: '#d1d5db',\n    400: '#9ca3af',\n    500: '#6b7280',\n    600: '#4b5563',\n    700: '#374151',\n    800: '#1f2937',\n    900: '#111827',\n    950: '#030712',\n  },\n  zinc: {\n    50: '#fafafa',\n    100: '#f4f4f5',\n    200: '#e4e4e7',\n    300: '#d4d4d8',\n    400: '#a1a1aa',\n    500: '#71717a',\n    600: '#52525b',\n    700: '#3f3f46',\n    800: '#27272a',\n    900: '#18181b',\n    950: '#09090b',\n  },\n  neutral: {\n    50: '#fafafa',\n    100: '#f5f5f5',\n    200: '#e5e5e5',\n    300: '#d4d4d4',\n    400: '#a3a3a3',\n    500: '#737373',\n    600: '#525252',\n    700: '#404040',\n    800: '#262626',\n    900: '#171717',\n    950: '#0a0a0a',\n  },\n  stone: {\n    50: '#fafaf9',\n    100: '#f5f5f4',\n    200: '#e7e5e4',\n    300: '#d6d3d1',\n    400: '#a8a29e',\n    500: '#78716c',\n    600: '#57534e',\n    700: '#44403c',\n    800: '#292524',\n    900: '#1c1917',\n    950: '#0c0a09',\n  },\n  red: {\n    50: '#fef2f2',\n    100: '#fee2e2',\n    200: '#fecaca',\n    300: '#fca5a5',\n    400: '#f87171',\n    500: '#ef4444',\n    600: '#dc2626',\n    700: '#b91c1c',\n    800: '#991b1b',\n    900: '#7f1d1d',\n    950: '#450a0a',\n  },\n  orange: {\n    50: '#fff7ed',\n    100: '#ffedd5',\n    200: '#fed7aa',\n    300: '#fdba74',\n    400: '#fb923c',\n    500: '#f97316',\n    600: '#ea580c',\n    700: '#c2410c',\n    800: '#9a3412',\n    900: '#7c2d12',\n    950: '#431407',\n  },\n  amber: {\n    50: '#fffbeb',\n    100: '#fef3c7',\n    200: '#fde68a',\n    300: '#fcd34d',\n    400: '#fbbf24',\n    500: '#f59e0b',\n    600: '#d97706',\n    700: '#b45309',\n    800: '#92400e',\n    900: '#78350f',\n    950: '#451a03',\n  },\n  yellow: {\n    50: '#fefce8',\n    100: '#fef9c3',\n    200: '#fef08a',\n    300: '#fde047',\n    400: '#facc15',\n    500: '#eab308',\n    600: '#ca8a04',\n    700: '#a16207',\n    800: '#854d0e',\n    900: '#713f12',\n    950: '#422006',\n  },\n  lime: {\n    50: '#f7fee7',\n    100: '#ecfccb',\n    200: '#d9f99d',\n    300: '#bef264',\n    400: '#a3e635',\n    500: '#84cc16',\n    600: '#65a30d',\n    700: '#4d7c0f',\n    800: '#3f6212',\n    900: '#365314',\n    950: '#1a2e05',\n  },\n  green: {\n    50: '#f0fdf4',\n    100: '#dcfce7',\n    200: '#bbf7d0',\n    300: '#86efac',\n    400: '#4ade80',\n    500: '#22c55e',\n    600: '#16a34a',\n    700: '#15803d',\n    800: '#166534',\n    900: '#14532d',\n    950: '#052e16',\n  },\n  emerald: {\n    50: '#ecfdf5',\n    100: '#d1fae5',\n    200: '#a7f3d0',\n    300: '#6ee7b7',\n    400: '#34d399',\n    500: '#10b981',\n    600: '#059669',\n    700: '#047857',\n    800: '#065f46',\n    900: '#064e3b',\n    950: '#022c22',\n  },\n  teal: {\n    50: '#f0fdfa',\n    100: '#ccfbf1',\n    200: '#99f6e4',\n    300: '#5eead4',\n    400: '#2dd4bf',\n    500: '#14b8a6',\n    600: '#0d9488',\n    700: '#0f766e',\n    800: '#115e59',\n    900: '#134e4a',\n    950: '#042f2e',\n  },\n  cyan: {\n    50: '#ecfeff',\n    100: '#cffafe',\n    200: '#a5f3fc',\n    300: '#67e8f9',\n    400: '#22d3ee',\n    500: '#06b6d4',\n    600: '#0891b2',\n    700: '#0e7490',\n    800: '#155e75',\n    900: '#164e63',\n    950: '#083344',\n  },\n  sky: {\n    50: '#f0f9ff',\n    100: '#e0f2fe',\n    200: '#bae6fd',\n    300: '#7dd3fc',\n    400: '#38bdf8',\n    500: '#0ea5e9',\n    600: '#0284c7',\n    700: '#0369a1',\n    800: '#075985',\n    900: '#0c4a6e',\n    950: '#082f49',\n  },\n  blue: {\n    50: '#eff6ff',\n    100: '#dbeafe',\n    200: '#bfdbfe',\n    300: '#93c5fd',\n    400: '#60a5fa',\n    500: '#3b82f6',\n    600: '#2563eb',\n    700: '#1d4ed8',\n    800: '#1e40af',\n    900: '#1e3a8a',\n    950: '#172554',\n  },\n  indigo: {\n    50: '#eef2ff',\n    100: '#e0e7ff',\n    200: '#c7d2fe',\n    300: '#a5b4fc',\n    400: '#818cf8',\n    500: '#6366f1',\n    600: '#4f46e5',\n    700: '#4338ca',\n    800: '#3730a3',\n    900: '#312e81',\n    950: '#1e1b4b',\n  },\n  violet: {\n    50: '#f5f3ff',\n    100: '#ede9fe',\n    200: '#ddd6fe',\n    300: '#c4b5fd',\n    400: '#a78bfa',\n    500: '#8b5cf6',\n    600: '#7c3aed',\n    700: '#6d28d9',\n    800: '#5b21b6',\n    900: '#4c1d95',\n    950: '#2e1065',\n  },\n  purple: {\n    50: '#faf5ff',\n    100: '#f3e8ff',\n    200: '#e9d5ff',\n    300: '#d8b4fe',\n    400: '#c084fc',\n    500: '#a855f7',\n    600: '#9333ea',\n    700: '#7e22ce',\n    800: '#6b21a8',\n    900: '#581c87',\n    950: '#3b0764',\n  },\n  fuchsia: {\n    50: '#fdf4ff',\n    100: '#fae8ff',\n    200: '#f5d0fe',\n    300: '#f0abfc',\n    400: '#e879f9',\n    500: '#d946ef',\n    600: '#c026d3',\n    700: '#a21caf',\n    800: '#86198f',\n    900: '#701a75',\n    950: '#4a044e',\n  },\n  pink: {\n    50: '#fdf2f8',\n    100: '#fce7f3',\n    200: '#fbcfe8',\n    300: '#f9a8d4',\n    400: '#f472b6',\n    500: '#ec4899',\n    600: '#db2777',\n    700: '#be185d',\n    800: '#9d174d',\n    900: '#831843',\n    950: '#500724',\n  },\n  rose: {\n    50: '#fff1f2',\n    100: '#ffe4e6',\n    200: '#fecdd3',\n    300: '#fda4af',\n    400: '#fb7185',\n    500: '#f43f5e',\n    600: '#e11d48',\n    700: '#be123c',\n    800: '#9f1239',\n    900: '#881337',\n    950: '#4c0519',\n  },\n  get lightBlue() {\n    warn({ version: 'v2.2', from: 'lightBlue', to: 'sky' })\n    return this.sky\n  },\n  get warmGray() {\n    warn({ version: 'v3.0', from: 'warmGray', to: 'stone' })\n    return this.stone\n  },\n  get trueGray() {\n    warn({ version: 'v3.0', from: 'trueGray', to: 'neutral' })\n    return this.neutral\n  },\n  get coolGray() {\n    warn({ version: 'v3.0', from: 'coolGray', to: 'gray' })\n    return this.gray\n  },\n  get blueGray() {\n    warn({ version: 'v3.0', from: 'blueGray', to: 'slate' })\n    return this.slate\n  },\n}\n", "export function defaults(target, ...sources) {\n  for (let source of sources) {\n    for (let k in source) {\n      if (!target?.hasOwnProperty?.(k)) {\n        target[k] = source[k]\n      }\n    }\n\n    for (let k of Object.getOwnPropertySymbols(source)) {\n      if (!target?.hasOwnProperty?.(k)) {\n        target[k] = source[k]\n      }\n    }\n  }\n\n  return target\n}\n", "import { flagEnabled } from '../featureFlags'\nimport log, { dim } from './log'\n\nexport function normalizeConfig(config) {\n  // Quick structure validation\n  /**\n   * type FilePath = string\n   * type RawFile = { raw: string, extension?: string }\n   * type ExtractorFn = (content: string) => Array<string>\n   * type TransformerFn = (content: string) => string\n   *\n   * type Content =\n   *   | Array<FilePath | RawFile>\n   *   | {\n   *       files: Array<FilePath | RawFile>,\n   *       extract?: ExtractorFn | { [extension: string]: ExtractorFn }\n   *       transform?: TransformerFn | { [extension: string]: TransformerFn }\n   *   }\n   */\n  let valid = (() => {\n    // `config.purge` should not exist anymore\n    if (config.purge) {\n      return false\n    }\n\n    // `config.content` should exist\n    if (!config.content) {\n      return false\n    }\n\n    // `config.content` should be an object or an array\n    if (\n      !Array.isArray(config.content) &&\n      !(typeof config.content === 'object' && config.content !== null)\n    ) {\n      return false\n    }\n\n    // When `config.content` is an array, it should consist of FilePaths or RawFiles\n    if (Array.isArray(config.content)) {\n      return config.content.every((path) => {\n        // `path` can be a string\n        if (typeof path === 'string') return true\n\n        // `path` can be an object { raw: string, extension?: string }\n        // `raw` must be a string\n        if (typeof path?.raw !== 'string') return false\n\n        // `extension` (if provided) should also be a string\n        if (path?.extension && typeof path?.extension !== 'string') {\n          return false\n        }\n\n        return true\n      })\n    }\n\n    // When `config.content` is an object\n    if (typeof config.content === 'object' && config.content !== null) {\n      // Only `files`, `relative`, `extract`, and `transform` can exist in `config.content`\n      if (\n        Object.keys(config.content).some(\n          (key) => !['files', 'relative', 'extract', 'transform'].includes(key)\n        )\n      ) {\n        return false\n      }\n\n      // `config.content.files` should exist of FilePaths or RawFiles\n      if (Array.isArray(config.content.files)) {\n        if (\n          !config.content.files.every((path) => {\n            // `path` can be a string\n            if (typeof path === 'string') return true\n\n            // `path` can be an object { raw: string, extension?: string }\n            // `raw` must be a string\n            if (typeof path?.raw !== 'string') return false\n\n            // `extension` (if provided) should also be a string\n            if (path?.extension && typeof path?.extension !== 'string') {\n              return false\n            }\n\n            return true\n          })\n        ) {\n          return false\n        }\n\n        // `config.content.extract` is optional, and can be a Function or a Record<String, Function>\n        if (typeof config.content.extract === 'object') {\n          for (let value of Object.values(config.content.extract)) {\n            if (typeof value !== 'function') {\n              return false\n            }\n          }\n        } else if (\n          !(config.content.extract === undefined || typeof config.content.extract === 'function')\n        ) {\n          return false\n        }\n\n        // `config.content.transform` is optional, and can be a Function or a Record<String, Function>\n        if (typeof config.content.transform === 'object') {\n          for (let value of Object.values(config.content.transform)) {\n            if (typeof value !== 'function') {\n              return false\n            }\n          }\n        } else if (\n          !(\n            config.content.transform === undefined || typeof config.content.transform === 'function'\n          )\n        ) {\n          return false\n        }\n\n        // `config.content.relative` is optional and can be a boolean\n        if (\n          typeof config.content.relative !== 'boolean' &&\n          typeof config.content.relative !== 'undefined'\n        ) {\n          return false\n        }\n      }\n\n      return true\n    }\n\n    return false\n  })()\n\n  if (!valid) {\n    log.warn('purge-deprecation', [\n      'The `purge`/`content` options have changed in Tailwind CSS v3.0.',\n      'Update your configuration file to eliminate this warning.',\n      'https://tailwindcss.com/docs/upgrade-guide#configure-content-sources',\n    ])\n  }\n\n  // Normalize the `safelist`\n  config.safelist = (() => {\n    let { content, purge, safelist } = config\n\n    if (Array.isArray(safelist)) return safelist\n    if (Array.isArray(content?.safelist)) return content.safelist\n    if (Array.isArray(purge?.safelist)) return purge.safelist\n    if (Array.isArray(purge?.options?.safelist)) return purge.options.safelist\n\n    return []\n  })()\n\n  // Normalize the `blocklist`\n  config.blocklist = (() => {\n    let { blocklist } = config\n\n    if (Array.isArray(blocklist)) {\n      if (blocklist.every((item) => typeof item === 'string')) {\n        return blocklist\n      }\n\n      log.warn('blocklist-invalid', [\n        'The `blocklist` option must be an array of strings.',\n        'https://tailwindcss.com/docs/content-configuration#discarding-classes',\n      ])\n    }\n\n    return []\n  })()\n\n  // Normalize prefix option\n  if (typeof config.prefix === 'function') {\n    log.warn('prefix-function', [\n      'As of Tailwind CSS v3.0, `prefix` cannot be a function.',\n      'Update `prefix` in your configuration to be a string to eliminate this warning.',\n      'https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function',\n    ])\n    config.prefix = ''\n  } else {\n    config.prefix = config.prefix ?? ''\n  }\n\n  // Normalize the `content`\n  config.content = {\n    relative: (() => {\n      let { content } = config\n\n      if (content?.relative) {\n        return content.relative\n      }\n\n      return flagEnabled(config, 'relativeContentPathsByDefault')\n    })(),\n\n    files: (() => {\n      let { content, purge } = config\n\n      if (Array.isArray(purge)) return purge\n      if (Array.isArray(purge?.content)) return purge.content\n      if (Array.isArray(content)) return content\n      if (Array.isArray(content?.content)) return content.content\n      if (Array.isArray(content?.files)) return content.files\n\n      return []\n    })(),\n\n    extract: (() => {\n      let extract = (() => {\n        if (config.purge?.extract) return config.purge.extract\n        if (config.content?.extract) return config.content.extract\n\n        if (config.purge?.extract?.DEFAULT) return config.purge.extract.DEFAULT\n        if (config.content?.extract?.DEFAULT) return config.content.extract.DEFAULT\n\n        if (config.purge?.options?.extractors) return config.purge.options.extractors\n        if (config.content?.options?.extractors) return config.content.options.extractors\n\n        return {}\n      })()\n\n      let extractors = {}\n\n      let defaultExtractor = (() => {\n        if (config.purge?.options?.defaultExtractor) {\n          return config.purge.options.defaultExtractor\n        }\n\n        if (config.content?.options?.defaultExtractor) {\n          return config.content.options.defaultExtractor\n        }\n\n        return undefined\n      })()\n\n      if (defaultExtractor !== undefined) {\n        extractors.DEFAULT = defaultExtractor\n      }\n\n      // Functions\n      if (typeof extract === 'function') {\n        extractors.DEFAULT = extract\n      }\n\n      // Arrays\n      else if (Array.isArray(extract)) {\n        for (let { extensions, extractor } of extract ?? []) {\n          for (let extension of extensions) {\n            extractors[extension] = extractor\n          }\n        }\n      }\n\n      // Objects\n      else if (typeof extract === 'object' && extract !== null) {\n        Object.assign(extractors, extract)\n      }\n\n      return extractors\n    })(),\n\n    transform: (() => {\n      let transform = (() => {\n        if (config.purge?.transform) return config.purge.transform\n        if (config.content?.transform) return config.content.transform\n\n        if (config.purge?.transform?.DEFAULT) return config.purge.transform.DEFAULT\n        if (config.content?.transform?.DEFAULT) return config.content.transform.DEFAULT\n\n        return {}\n      })()\n\n      let transformers = {}\n\n      if (typeof transform === 'function') {\n        transformers.DEFAULT = transform\n      }\n\n      if (typeof transform === 'object' && transform !== null) {\n        Object.assign(transformers, transform)\n      }\n\n      return transformers\n    })(),\n  }\n\n  // Validate globs to prevent bogus globs.\n  // E.g.: `./src/*.{html}` is invalid, the `{html}` should just be `html`\n  for (let file of config.content.files) {\n    if (typeof file === 'string' && /{([^,]*?)}/g.test(file)) {\n      log.warn('invalid-glob-braces', [\n        `The glob pattern ${dim(file)} in your Tailwind CSS configuration is invalid.`,\n        `Update it to ${dim(file.replace(/{([^,]*?)}/g, '$1'))} to silence this warning.`,\n        // TODO: Add https://tw.wtf/invalid-glob-braces\n      ])\n      break\n    }\n  }\n\n  return config\n}\n", "export function cloneDeep(value) {\n  if (Array.isArray(value)) {\n    return value.map((child) => cloneDeep(child))\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    return Object.fromEntries(Object.entries(value).map(([k, v]) => [k, cloneDeep(v)]))\n  }\n\n  return value\n}\n", "import negateValue from './negateValue'\nimport corePluginList from '../corePluginList'\nimport configurePlugins from './configurePlugins'\nimport colors from '../public/colors'\nimport { defaults } from './defaults'\nimport { toPath } from './toPath'\nimport { normalizeConfig } from './normalizeConfig'\nimport isPlainObject from './isPlainObject'\nimport { cloneDeep } from './cloneDeep'\nimport { parseColorFormat } from './pluginUtils'\nimport { withAlphaValue } from './withAlphaVariable'\nimport toColorValue from './toColorValue'\n\nfunction isFunction(input) {\n  return typeof input === 'function'\n}\n\nfunction mergeWith(target, ...sources) {\n  let customizer = sources.pop()\n\n  for (let source of sources) {\n    for (let k in source) {\n      let merged = customizer(target[k], source[k])\n\n      if (merged === undefined) {\n        if (isPlainObject(target[k]) && isPlainObject(source[k])) {\n          target[k] = mergeWith({}, target[k], source[k], customizer)\n        } else {\n          target[k] = source[k]\n        }\n      } else {\n        target[k] = merged\n      }\n    }\n  }\n\n  return target\n}\n\nconst configUtils = {\n  colors,\n  negative(scale) {\n    // TODO: Log that this function isn't really needed anymore?\n    return Object.keys(scale)\n      .filter((key) => scale[key] !== '0')\n      .reduce((negativeScale, key) => {\n        let negativeValue = negateValue(scale[key])\n\n        if (negativeValue !== undefined) {\n          negativeScale[`-${key}`] = negativeValue\n        }\n\n        return negativeScale\n      }, {})\n  },\n  breakpoints(screens) {\n    return Object.keys(screens)\n      .filter((key) => typeof screens[key] === 'string')\n      .reduce(\n        (breakpoints, key) => ({\n          ...breakpoints,\n          [`screen-${key}`]: screens[key],\n        }),\n        {}\n      )\n  },\n}\n\nfunction value(valueToResolve, ...args) {\n  return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve\n}\n\nfunction collectExtends(items) {\n  return items.reduce((merged, { extend }) => {\n    return mergeWith(merged, extend, (mergedValue, extendValue) => {\n      if (mergedValue === undefined) {\n        return [extendValue]\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue]\n      }\n\n      return [extendValue, mergedValue]\n    })\n  }, {})\n}\n\nfunction mergeThemes(themes) {\n  return {\n    ...themes.reduce((merged, theme) => defaults(merged, theme), {}),\n\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes),\n  }\n}\n\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && isPlainObject(merged[0])) {\n    return merged.concat(value)\n  }\n\n  // When the incoming value is an array, and the existing config is an object, prepend the existing object\n  if (Array.isArray(value) && isPlainObject(value[0]) && isPlainObject(merged)) {\n    return [merged, ...value]\n  }\n\n  // Override arrays (for example for font-families, box-shadows, ...)\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  // Execute default behaviour\n  return undefined\n}\n\nfunction mergeExtensions({ extend, ...theme }) {\n  return mergeWith(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n      return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer)\n    }\n\n    return (resolveThemePath, utils) =>\n      mergeWith(\n        {},\n        ...[themeValue, ...extensions].map((e) => value(e, resolveThemePath, utils)),\n        mergeExtensionCustomizer\n      )\n  })\n}\n\n/**\n *\n * @param {string} key\n * @return {Iterable<string[] & {alpha: string | undefined}>}\n */\nfunction* toPaths(key) {\n  let path = toPath(key)\n\n  if (path.length === 0) {\n    return\n  }\n\n  yield path\n\n  if (Array.isArray(key)) {\n    return\n  }\n\n  let pattern = /^(.*?)\\s*\\/\\s*([^/]+)$/\n  let matches = key.match(pattern)\n\n  if (matches !== null) {\n    let [, prefix, alpha] = matches\n\n    let newPath = toPath(prefix)\n    newPath.alpha = alpha\n\n    yield newPath\n  }\n}\n\nfunction resolveFunctionKeys(object) {\n  // theme('colors.red.500 / 0.5') -> ['colors', 'red', '500 / 0', '5]\n\n  const resolvePath = (key, defaultValue) => {\n    for (const path of toPaths(key)) {\n      let index = 0\n      let val = object\n\n      while (val !== undefined && val !== null && index < path.length) {\n        val = val[path[index++]]\n\n        let shouldResolveAsFn =\n          isFunction(val) && (path.alpha === undefined || index <= path.length - 1)\n\n        val = shouldResolveAsFn ? val(resolvePath, configUtils) : val\n      }\n\n      if (val !== undefined) {\n        if (path.alpha !== undefined) {\n          let normalized = parseColorFormat(val)\n\n          return withAlphaValue(normalized, path.alpha, toColorValue(normalized))\n        }\n\n        if (isPlainObject(val)) {\n          return cloneDeep(val)\n        }\n\n        return val\n      }\n    }\n\n    return defaultValue\n  }\n\n  Object.assign(resolvePath, {\n    theme: resolvePath,\n    ...configUtils,\n  })\n\n  return Object.keys(object).reduce((resolved, key) => {\n    resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key]\n\n    return resolved\n  }, {})\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = []\n\n  configs.forEach((config) => {\n    allConfigs = [...allConfigs, config]\n\n    const plugins = config?.plugins ?? []\n\n    if (plugins.length === 0) {\n      return\n    }\n\n    plugins.forEach((plugin) => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin()\n      }\n      allConfigs = [...allConfigs, ...extractPluginConfigs([plugin?.config ?? {}])]\n    })\n  })\n\n  return allConfigs\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if (isFunction(corePluginConfig)) {\n      return corePluginConfig({ corePlugins: resolved })\n    }\n    return configurePlugins(corePluginConfig, resolved)\n  }, corePluginList)\n\n  return result\n}\n\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList]\n  }, [])\n\n  return result\n}\n\nexport default function resolveConfig(configs) {\n  let allConfigs = [\n    ...extractPluginConfigs(configs),\n    {\n      prefix: '',\n      important: false,\n      separator: ':',\n    },\n  ]\n\n  return normalizeConfig(\n    defaults(\n      {\n        theme: resolveFunctionKeys(\n          mergeExtensions(mergeThemes(allConfigs.map((t) => t?.theme ?? {})))\n        ),\n        corePlugins: resolveCorePlugins(allConfigs.map((c) => c.corePlugins)),\n        plugins: resolvePluginLists(configs.map((c) => c?.plugins ?? [])),\n      },\n      ...allConfigs\n    )\n  )\n}\n", "import defaultFullConfig from '../../stubs/config.full.js'\nimport { flagEnabled } from '../featureFlags'\n\nexport default function getAllConfigs(config) {\n  const configs = (config?.presets ?? [defaultFullConfig])\n    .slice()\n    .reverse()\n    .flatMap((preset) => getAllConfigs(preset instanceof Function ? preset() : preset))\n\n  const features = {\n    // Add experimental configs here...\n    respectDefaultRingColorOpacity: {\n      theme: {\n        ringColor: ({ theme }) => ({\n          DEFAULT: '#3b82f67f',\n          ...theme('colors'),\n        }),\n      },\n    },\n\n    disableColorOpacityUtilitiesByDefault: {\n      corePlugins: {\n        backgroundOpacity: false,\n        borderOpacity: false,\n        divideOpacity: false,\n        placeholderOpacity: false,\n        ringOpacity: false,\n        textOpacity: false,\n      },\n    },\n  }\n\n  const experimentals = Object.keys(features)\n    .filter((feature) => flagEnabled(config, feature))\n    .map((feature) => features[feature])\n\n  return [config, ...experimentals, ...configs]\n}\n", "import resolveConfigObjects from '../util/resolveConfig'\nimport getAllConfigs from '../util/getAllConfigs'\n\nexport default function resolveConfig(...configs) {\n  let [, ...defaultConfigs] = getAllConfigs(configs[0])\n  return resolveConfigObjects([...configs, ...defaultConfigs])\n}\n"],
  "mappings": "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",
  "names": ["value", "escape", "max", "max", "value", "value", "length", "parse", "value", "import_postcss_value_parser", "value", "parseValue", "parseValue2", "color", "percentage", "position", "escape", "length", "version", "url", "defaults", "value", "number", "transformThemeValue", "value2", "position", "postcss4", "color", "postcss", "postcss", "parser", "postcss", "selectorParser", "postcss", "value", "prefix", "value", "color", "formatColor", "color", "formatColor", "splitAtTopLevelOnly", "splitAtTopLevelOnly", "shadow", "value", "value", "isRoot", "char", "result", "keyword", "splitAtTopLevelOnly", "value", "value", "splitAtTopLevelOnly", "flagEnabled", "value", "color", "types", "flagEnabled", "selectorParser", "parser", "escapeClassName", "parser", "sel", "node", "prefix", "selectorParser", "escapeClassName", "splitAtTopLevelOnly", "value", "escapeClassName", "postcss", "dlv", "selectorParser", "postcss", "value", "postcss", "postcss", "value", "obj", "screen", "SPACE", "value", "color", "number", "root", "value", "max", "decl", "rule", "postcss", "prefix", "flagEnabled", "escapeClassName", "value", "quotes", "max", "breakpoint", "corePlugins", "shadow", "value", "bigSign", "rule", "bigSign", "list", "max", "prefix", "types", "type", "list", "value", "parser", "selectorParser", "rule", "postcss", "dlv", "escapeClassName", "flagEnabled", "api", "atRule", "root", "value", "util", "pattern", "generateRules", "rule", "cls", "postcss", "selectorParser", "result", "parser", "parser", "sel", "selectorParser", "prefix", "postcss", "rule", "splitAtTopLevelOnly", "flagEnabled", "value", "isArbitraryValue", "variantFunction", "cache", "url", "decl", "matches", "list", "generateRules", "postcss", "rule", "parser", "classes", "prefix", "root", "cache", "list", "escapeClassName", "node", "sel", "applyCandidates", "root", "atRule", "rule", "pattern", "prefix", "env", "rule", "root", "generateRules", "dlv", "isObject", "dlv", "pathToString", "value", "parseValue", "path", "root", "atRule", "postcss", "selectorParser", "selectorParser", "node", "cache", "root", "rule", "flagEnabled", "postcss", "root", "root", "decl", "declarations", "root", "rule", "expandApplyAtRules", "root", "rule", "root", "expandApplyAtRules", "version", "defaults", "value", "flagEnabled", "defaultExtractor", "value", "defaults", "value", "toPaths", "pattern", "prefix", "resolvePath", "defaultFullConfig", "flagEnabled", "resolveConfig", "resolveConfig", "postcss", "generateRules"]
}
